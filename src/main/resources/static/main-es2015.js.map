{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./global-config.ts","./proto/generated/proto/coin_pb.js","./proto/generated/proto/monster_pb.js","./proto/generated/proto/player_pb.js","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cache/measurement.service.ts","./src/app/cache/request-cache.service.ts","./src/app/communication/Communicator.ts","./src/app/communication/Direction.ts","./src/app/communication/SocketClientState.ts","./src/app/communication/format/JsonFormatter.ts","./src/app/communication/format/ProtobufFormatter.ts","./src/app/communication/http2/http2.service.ts","./src/app/communication/simulation/data/AdditionalData.ts","./src/app/communication/websocket/websocket.service.ts","./src/app/downloader/download.service.ts","./src/app/game/game.component.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/model/MeasurementResponse.ts","./src/app/model/MonsterMeasurement.ts","./src/app/model/Player.ts","./src/app/model/Request.ts","./src/app/scene/main-scene.component.ts","./src/app/scene/main-scene.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAa;AAEmD;AAEhE,8EAA8E;AACvE,MAAM,2BAA2B,GAAG,CAAC,IAAI,EAAE,yBAAyB;IACvE,kCAAkC,EAAE,kBAAkB,EAAE,MAAM,EAAE,mBAAmB,CAAC,CAAC;AAEzF,+EAA+E;AACxE,MAAM,4BAA4B,GAAG,CAAC,IAAI,EAAE,kCAAkC,EAAE,mBAAmB,EAAE,yBAAyB,CAAC,CAAC;AAEvI,4BAA4B;AACrB,MAAM,eAAe,GAAG,2DAAc;AACtC,MAAM,mBAAmB,GAAG,+DAAkB;AAC9C,MAAM,cAAc,GAAG,kBAAkB;;;;;;;;;;;;ACdhD;AACA;AACA;AACA;AACA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,0EAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,iBAAiB;AAC5B,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA;AACA,WAAW,OAAO;AAClB,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA;AACA,WAAW,OAAO;AAClB,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;;;AAGA;;;;;;;;;;;;ACpMA;AACA;AACA;AACA;AACA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,0EAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,oBAAoB;AAC/B,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA;AACA,WAAW,OAAO;AAClB,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA;AACA,WAAW,OAAO;AAClB,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA;AACA,WAAW,OAAO;AAClB,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA;AACA,WAAW,OAAO;AAClB,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;;;AAGA;;;;;;;;;;;;AChQA;AACA;AACA;AACA;AACA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,0EAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,mBAAmB;AAC9B,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,kCAAkC;AAC7C,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA;AACA,WAAW,OAAO;AAClB,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA;AACA,WAAW,OAAO;AAClB,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA;AACA,WAAW,OAAO;AAClB,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA;AACA,WAAW,OAAO;AAClB,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA;AACA,WAAW,OAAO;AAClB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA;AACA,WAAW,OAAO;AAClB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA;AACA,WAAW,OAAO;AAClB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA;AACA,WAAW,OAAO;AAClB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA;AACA,WAAW,OAAO;AAClB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA;AACA,WAAW,OAAO;AAClB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,0CAA0C;AAC7D;AACA;;;AAGA;AACA,WAAW,0CAA0C;AACrD,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;;;AAGA;AACA,WAAW,mCAAmC;AAC9C,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;;;AAGA;;;;;;;;;;;;;AC1mBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACd;AACyB;AACZ;;;AAEpD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAC;IACxC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,8EAAkB,EAAC;IAC7C,EAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAC;CACjC,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IACvB;IACA,CAAC;;wEAFU,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;6FDOlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAa;AAC2C;AACxD,aAAa;AAC0B;AAEM;AACO;AACY;AACa;AAC7E,aAAa;AACyC;AACA;AACF;AACpD,aAAa;AAC8B;AAEY;;;;;;;AAEvD,aAAa;AAkBN,MAAM,SAAS;;wFAAT,SAAS,cAFN,2DAAY;4IAEf,SAAS,mBAHP,CAAC,2FAAgB,CAAC,YAPpB;YACL,uEAAa;YACb,qEAAgB;YAChB,oEAAgB;YAChB,0DAAW;YACX,uEAAc;SACjB;mIAIQ,SAAS,mBAfd,2DAAY;QACZ,kEAAa;QACb,8EAAkB;QAClB,kEAAa,aAGb,uEAAa;QACb,qEAAgB;QAChB,oEAAgB;QAChB,0DAAW;QACX,uEAAc;6FAKT,SAAS;cAjBrB,sDAAQ;eAAC;gBACN,YAAY,EAAE;oBACV,2DAAY;oBACZ,kEAAa;oBACb,8EAAkB;oBAClB,kEAAa;iBAChB;gBACD,OAAO,EAAE;oBACL,uEAAa;oBACb,qEAAgB;oBAChB,oEAAgB;oBAChB,0DAAW;oBACX,uEAAc;iBACjB;gBACD,SAAS,EAAE,CAAC,2FAAgB,CAAC;gBAC7B,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC5B;;kEAZO,8EAAkB,ymFAFlB,2DAAY;IACZ,kEAAa;IACb,8EAAkB;IAClB,kEAAa;;;;;;;;;;;;;ACxBrB;AAAA;AAAA;AAAA;AAAA;AAAyC;AACwB;AACF;;AAKxD,MAAM,kBAAkB;IAH/B;QAKqB,iBAAY,GAAG,IAAI,KAAK,EAAuB,CAAC;QAChD,wBAAmB,GAAG,IAAI,KAAK,EAAsB,CAAC;KAgC1E;IA7BG,sBAAsB,CAAC,EAAE,EAAE,oBAAoB,EAAE,6BAA6B,EAAE,OAAO,EAAE,IAAI,EAAE,gBAAgB;QAC3G,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,8EAAmB,CAAC,EAAE,EAAE,oBAAoB,EAAE,6BAA6B,EAAE,OAAO,EAAE,IAAI,EAAE,gBAAgB,CAAC,CAAC;IAC7I,CAAC;IAED,qBAAqB,CAAC,EAAE,EAAE,gBAAgB;QACtC,IAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,IAAI,CAAC,qBAAqB,GAAG,gBAAgB,CAAC;SACjD;QACD,2DAA2D;QAC3D,yEAAyE;QACzE,0BAA0B;IAC9B,CAAC;IAED,6BAA6B,CAAC,EAAE,EAAE,gBAAgB,EAAE,oBAAoB;QACpE,IAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,IAAI,CAAC,qBAAqB,GAAG,gBAAgB,CAAC;SACjD;QACD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,4EAAkB,CAAC,EAAE,EACnD,IAAI,CAAC,IAAI,CAAC,CAAC,gBAAgB,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,IAAI,CAAC,EACjE,gBAAgB,EAAE,oBAAoB,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,uBAAuB;QACnB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED,iCAAiC;QAC7B,OAAO,IAAI,CAAC,mBAAmB,CAAC;IACpC,CAAC;;oFAlCQ,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFf,MAAM;6FAET,kBAAkB;cAH9B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAEA;AAEA;;AAKlC,MAAM,mBAAmB;IAHhC;QAKY,aAAQ,GAAmB,IAAI,sDAAK,EAAW,CAAC;KAuE3D;IAlEG,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;QACf,qCAAqC;QACrC,kCAAkC;QAClC,IAAI;QACJ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,sDAAO,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,UAAU,CAAC,EAAE;QACT,IAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACzB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;YAEpC,IAAG,OAAO,CAAC,EAAE,GAAG,EAAE,EAAE;gBAChB,OAAO,IAAI,CAAC;aACf;SACJ;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YAExC,IAAG,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE;gBAClB,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC;gBAClC,OAAO,OAAO,CAAC;aAClB;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,oBAAoB,CAAC,EAAE;QACnB,IAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACzB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;YACpC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACvB,IAAG,OAAO,CAAC,EAAE,GAAG,EAAE,EAAE;gBAChB,OAAO,IAAI,CAAC;aACf;SACJ;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YAExC,IAAG,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE;gBAClB,OAAO,IAAI,CAAC,kBAAkB,CAAC;aAClC;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,IAAI,kBAAkB;QAClB,OAAO,IAAI,CAAC,mBAAmB,CAAC;IACpC,CAAC;IAED,IAAI,kBAAkB,CAAC,KAAc;QACjC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;IACrC,CAAC;IAED,MAAM,KAAK,QAAQ,CAAC,KAAa;QAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IAC3B,CAAC;IAGD,IAAI,yBAAyB;QACzB,OAAO,IAAI,CAAC,0BAA0B,CAAC;IAC3C,CAAC;IAED,IAAI,yBAAyB,CAAC,KAAK;QAC/B,IAAI,CAAC,0BAA0B,GAAG,KAAK,CAAC;IAC5C,CAAC;;sFAxEQ,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFhB,MAAM;6FAET,mBAAmB;cAH/B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAA8C;AAOvC,MAAe,YAAY;IAgB9B;QAVU,iBAAY,GAAG,IAAI,4CAAO,EAAiB,CAAC;QAC5C,mBAAc,GAAG,IAAI,4CAAO,EAAU,CAAC;QACvC,mBAAc,GAAG,IAAI,4CAAO,EAAU,CAAC;QACvC,oBAAe,GAAG,IAAI,4CAAO,EAAW,CAAC;QACzC,eAAU,GAAG,IAAI,4CAAO,EAAO,CAAC;QAEhC,cAAS,GAAG,IAAI,4CAAO,EAAQ,CAAC;QAChC,gBAAW,GAAG,IAAI,4CAAO,EAAU,CAAC;QACpC,gBAAW,GAAG,IAAI,4CAAO,EAAQ,CAAC;IAG5C,CAAC;IASD,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAED,eAAe;QACX,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;IAC5C,CAAC;IAED,iBAAiB;QACb,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAC9C,CAAC;IAED,iBAAiB;QACb,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAC9C,CAAC;IAED,kBAAkB;QACd,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;IAC/C,CAAC;IAED,aAAa;QACT,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;IAC1C,CAAC;IAED,YAAY;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;IACzC,CAAC;IAED,eAAe;QACX,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAC3C,CAAC;IAED,IAAI,UAAU;QACV,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED,IAAI,UAAU,CAAC,KAAK;QAChB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC7B,CAAC;IAED,cAAc;QACV,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAC3C,CAAC;IAED,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,IAAI,SAAS,CAAC,KAAK;QACf,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,IAAI,SAAS,CAAC,KAAiB;QAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5B,CAAC;CACJ;;;;;;;;;;;;;AC5FD;AAAA;AAAA,IAAY,SAGX;AAHD,WAAY,SAAS;IACjB,4BAAe;IACf,6BAAgB;AACpB,CAAC,EAHW,SAAS,KAAT,SAAS,QAGpB;;;;;;;;;;;;;ACHD;AAAA;AAAA,IAAY,iBAIX;AAJD,WAAY,iBAAiB;IACzB,mEAAS;IACT,qEAAU;IACV,2DAAK;AACT,CAAC,EAJW,iBAAiB,KAAjB,iBAAiB,QAI5B;;;;;;;;;;;;;ACFD;AAAA;AAAO,MAAM,aAAa;IACtB,UAAU,CAAC,IAAI;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,aAAa,CAAC,IAAI;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,YAAY,CAAC,IAAI;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,MAAM,CAAC,IAAI;QACP,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,sBAAsB,CAAC,QAAgB;QACnC,OAAO,EAAC,UAAU,EAAE,QAAQ,EAAC;IACjC,CAAC;CACJ;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AACJ;AACM;AAC1E,IAAO,cAAc,GAAG,4EAAW,CAAC,cAAc,CAAC;AAE5C,MAAM,iBAAiB;IAA9B;QACI,YAAO,GAAG,IAAI,KAAK,EAA8B,CAAC;IAyCtD,CAAC;IAvCG,UAAU,CAAC,IAAI;QACX,OAAO,wEAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE,CAAC;IACnE,CAAC;IAED,aAAa,CAAC,IAAI;QACd,OAAO,8EAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE,CAAC;IACtE,CAAC;IAED,YAAY,CAAC,IAAI;QACb,OAAO,4EAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE,CAAC;IACrE,CAAC;IAED,MAAM,CAAC,IAAI;QACP,MAAM,WAAW,GAAG,IAAI,4EAAW,EAAE,CAAC;QAEtC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACjD,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAErC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnE,MAAM,MAAM,GAAG,IAAI,cAAc,EAAE,CAAC;YACpC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAC5C,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YACjD,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YACjD,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YACjD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC7B;QAED,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEhD,OAAO,WAAW,CAAC;IACvB,CAAC;IAED,sBAAsB,CAAC,QAAgB;QACnC,OAAO,QAAQ,CAAC;IACpB,CAAC;CACJ;;;;;;;;;;;;;AChDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACI;AAER;AACkB;AACoB;;;;;AAQpE,MAAM,YAAa,SAAQ,0DAAY;IAI1C,YAAoB,kBAAsC,EAAU,IAAgB,EAAU,YAAiC;QAC3H,KAAK,EAAE,CAAC;QADQ,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAqB;IAE/H,CAAC;IAED,oBAAoB;QAChB,IAAI,CAAC,KAAK,GAAG,IAAI,oDAAe,CAAoB,oEAAiB,CAAC,SAAS,CAAC,CAAC;IACrF,CAAC;IAED,UAAU;QACN,OAAO,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;QACnD,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;YACvB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;SAC5B;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,GAAG,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC7E,OAAO,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU,CAAC,QAAgB;QACvB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,UAAU,GAAG,QAAQ,CAAC;aAChD,SAAS,CAAC,CAAC,OAAgB,EAAE,EAAE;YAC5B,IAAI,OAAO,KAAK,KAAK,EAAE;gBACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,SAAS,GAAG,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAEjF,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,wBAAwB,EAAE,CAAC,oBAAkC,EAAE,EAAE;oBAC/F,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;oBAC1D,MAAM,oBAAoB,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,aAAa,CAAC,gBAAgB,CAAC;oBACnF,IAAI,CAAC,kBAAkB,CAAC,6BAA6B,CAAC,aAAa,CAAC,EAAE,EAAE,aAAa,CAAC,gBAAgB,EAAE,oBAAoB,CAAC,CAAC;oBAC9H,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,CAAC,iBAA+B,EAAE,EAAE;oBACtF,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;oBAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC5D,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,CAAC,cAA4B,EAAE,EAAE;oBACxF,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;oBACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC3D,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,CAAC,mBAAiC,EAAE,EAAE;oBAC7F,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC;oBAC/B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;gBACnE,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC,gBAA8B,EAAE,EAAE;oBACxF,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC;oBAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC9D,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,CAAC,mBAAiC,EAAE,EAAE;oBAC7F,MAAM,0BAA0B,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC;oBACvE,IAAI,0BAA0B,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,0BAA0B,CAAC,MAAM,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,EAAE;wBAC9H,IAAI,CAAC,gBAAgB,CAAC,0BAA0B,CAAC,MAAM,CAAC,QAAQ,EAC5D,0BAA0B,CAAC,gBAAgB,EAC3C,0BAA0B,CAAC,MAAM,CAAC,OAAO,EACzC,0BAA0B,CAAC,aAAa,CAAC,CAAC;qBACjD;oBAED,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC;gBAChE,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,aAA0B,EAAE,EAAE;oBAC9E,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC;aACN;iBAAM;gBACH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aACtC;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAED,SAAS,CAAC,QAAgB;QACtB,MAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAC,CAAC;aACzG,SAAS,CAAC,CAAC,WAAwC,EAAE,EAAE;YACpD,IAAI,WAAW,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aAC5C;iBAAM;gBACH,OAAO,CAAC,KAAK,CAAC,iCAAiC,CAAC;aACnD;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAED,YAAY,CAAC,IAAI;QACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC5D,OAAO,EAAE;gBACL,cAAc,EAAE,kBAAkB;gBAClC,kBAAkB,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;aACtD;YACD,OAAO,EAAE,UAAU;SACtB,CAAC,CAAC,SAAS,CAAC,CAAC,MAA4B,EAAE,EAAE;YAC1C,MAAM,oBAAoB,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACnG,OAAO,CAAC,KAAK,CAAC,oBAAoB,GAAG,oBAAoB,GAAG,eAAe,CAAC,CAAC;YAC7E,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,EAAE;gBAClF,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EACtC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,EAC9C,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;aACzE;YAED,IAAI,MAAM,CAAC,MAAM,KAAK,GAAG,EAAE;gBACvB,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAE5E,IAAI,OAAO,KAAK,IAAI,EAAE;oBAClB,MAAM,CAAC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC;oBAClC,MAAM,CAAC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC;oBAClC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;iBACzC;aACJ;iBAAM,IAAI,MAAM,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC9B,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAEzC,IAAI,OAAO,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;oBAClG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;iBACzC;aACJ;iBAAM,IAAI,MAAM,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC9B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACzC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB,CAAC,EAAU,EAAE,mBAA2B,EAAE,OAAe,EAAE,IAAY;QACnF,MAAM,oBAAoB,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,mBAAmB,CAAC;QACxE,gFAAgF;QAChF,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,EAAE,EAAE,oBAAoB,EACnE,IAAI,CAAC,IAAI,CAAC,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,yBAAyB,CAAC,GAAG,IAAI,CAAC,EACrF,OAAO,EAAE,IAAI,EAAE,mBAAmB,CAAC,CAAC;IAC5C,CAAC;;wEA/HQ,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFT,MAAM;6FAET,YAAY;cAHxB,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACZD;AAAA;AAAO,MAAM,cAAc;IAMvB,YAAY,OAAe,EAAE,OAAe,EAAE,OAAe,EAAE,IAAY;QACvE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;CACJ;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACJ;AAEQ;AACU;AAEP;AACM;AACQ;;;;AAGvD,MAAM,gBAAiB,SAAQ,0DAAY;IAK9C,YACY,kBAAsC,EACtC,YAAiC;QAEzC,KAAK,EAAE,CAAC;QAHA,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,iBAAY,GAAZ,YAAY,CAAqB;QAJrC,+BAA0B,GAAG,QAAQ;QAmM7C,aAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IA5L9B,CAAC;IAED,oBAAoB;QAChB,IAAI,CAAC,KAAK,GAAG,IAAI,oDAAe,CAAoB,oEAAiB,CAAC,UAAU,CAAC,CAAC;QAElF,IAAI,CAAC,WAAW,GAAG,IAAI,qDAAM,CAAC;YAC1B,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,gBAAgB,EAAE,IAAI;YACtB,cAAc,EAAE,IAAI;YACpB,iBAAiB,EAAE,IAAI;YACvB,iBAAiB,EAAE,IAAI;SAC1B,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,GAAG,EAAE;QAC9B,CAAC,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,CAAC,KAAK,EAAE,EAAE;YAEnC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,eAAe,EAAE,EAAE;gBAClE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;gBACzD,OAAO,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,cAAc,EAAE,EAAE;gBACnE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC;gBACtE,OAAO,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,cAAwB,EAAE,EAAE;gBAC7E,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;gBAEjE,IAAI,CAAC,eAAe,CAChB,YAAY,CAAC,QAAQ,EACrB,YAAY,CAAC,OAAO,EACpB,cAAc,CAAC,OAAO,CAAC,gBAAgB,EACvC,cAAc,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAC3C,CAAC;gBAEF,IAAI,YAAY,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,EAAE;oBAC3C,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;oBACnE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;oBAC1C,IAAI,OAAO,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,YAAY,CAAC,SAAS,IAAI,OAAO,CAAC,CAAC,KAAK,YAAY,CAAC,SAAS,CAAC,EAAE;wBACpG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;qBAC1C;iBACJ;qBAAM;oBACH,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBAC1C;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,OAAO,EAAE,EAAE;gBAC7D,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBAC5D,MAAM,oBAAoB,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;gBAC7F,IAAI,CAAC,kBAAkB,CAAC,6BAA6B,CAAC,aAAa,CAAC,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE,oBAAoB,CAAC,CAAC;gBACxI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,uBAAuB,EAAE,GAAG,EAAE;gBACrD,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC5B,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,YAAY,EAAE,EAAE;gBAC5D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,mBAAmB,EAAE,EAAE;gBACpE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;YAC/D,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,4BAA4B,EAAE,CAAC,cAAwB,EAAE,EAAE;gBAClF,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;gBACjE,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC;gBAE3B,IAAI,CAAC,eAAe,CAChB,YAAY,CAAC,QAAQ,EACrB,YAAY,CAAC,OAAO,EACpB,cAAc,CAAC,OAAO,CAAC,gBAAgB,EACvC,cAAc,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAC3C,CAAC;gBAEF,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;gBAE7E,IAAI,OAAO,KAAK,IAAI,EAAE;oBAClB,YAAY,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC;oBACnC,YAAY,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC;oBACnC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBAC1C;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,0BAA0B,EAAE,CAAC,eAAe,EAAE,EAAE;YAC3E,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,oEAAiB,CAAC,SAAS,CAAC,CAAC;QACjD,CAAC,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,CAAC,KAAK,EAAE,EAAE;YACtC,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;YAClE,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;YACjD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,oEAAiB,CAAC,KAAK,CAAC,CAAC;QAC7C,CAAC,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,gBAAgB,GAAG,CAAC,KAAK,EAAE,EAAE;YAC1C,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC;QAED,IAAI,CAAC,WAAW,CAAC,gBAAgB,GAAG,CAAC,KAAK,EAAE,EAAE;YAC1C,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;YACpB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,oEAAiB,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QAClC,CAAC;QAED,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAChC,CAAC;IAED,sHAAsH;IAEtH,UAAU;QACN,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IAClC,CAAC;IAED,eAAe,CACX,QAAgB,EAChB,OAAe,EACf,sBAA8B,EAC9B,mBAA2B;QAE3B,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,0BAA0B,CAAC,IAAI,QAAQ,KAAK,IAAI,CAAC,UAAU,EAAE;YACjF,MAAM,oBAAoB,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC;YAEnF,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAC1C,QAAQ,EAAE,oBAAoB,EAC9B,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,sBAAsB,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,yBAAyB,CAAC,GAAG,IAAI,CAAC,EAChG,OAAO,EAAE,MAAM,CAAC,mBAAmB,CAAC,EAAE,MAAM,CAAC,sBAAsB,CAAC,CACvE,CAAC;SACL;IACL,CAAC;IAED,YAAY,CAAC,UAAU;QACnB,MAAM,sBAAsB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAEjE,IAAI,IAAI,CAAC,SAAS,YAAY,mEAAa,EAAE;YACzC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;gBACrB,WAAW,EAAE,oBAAoB;gBACjC,IAAI,EAAE,IAAI,CAAC,SAAS,CAChB,sBAAsB,CACzB;gBACD,OAAO,EAAE;oBACL,gBAAgB,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;iBACpD;aACJ,CAAC,CAAC;SACN;aAAM,IAAI,IAAI,CAAC,SAAS,YAAY,2EAAiB,EAAE;YACpD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;gBACrB,WAAW,EAAE,6BAA6B;gBAC1C,UAAU,EAAE,sBAAsB,CAAC,eAAe,EAAE;gBACpD,OAAO,EAAE;oBACL,+CAA+C;oBAC/C,gBAAgB,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;iBACpD;aACJ,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;gBACrB,WAAW,EAAE,kCAAkC;gBAC/C,UAAU,EAAE,sBAAsB;gBAClC,OAAO,EAAE;oBACL,+CAA+C;oBAC/C,gBAAgB,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;iBACpD;aACJ,CAAC,CAAC;SACN;IACL,CAAC;IAED,UAAU,CAAC,QAAgB;QACvB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;YACrB,WAAW,EAAE,gBAAgB;YAC7B,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACjB,UAAU,EAAE,QAAQ;aACvB,CAAC;SACL,CAAC,CAAC;IACP,CAAC;IAED,SAAS,CAAC,QAAgB;QACtB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;YACrB,WAAW,EAAE,iBAAiB;YAC9B,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACjB,UAAU,EAAE,QAAQ;aACvB,CAAC;SACL,CAAC,CAAC;IACP,CAAC;IAID,MAAM,CAAC,MAAM;QACT,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,UAAU,GAAG,gEAAgE,CAAC;QAClF,IAAI,gBAAgB,GAAG,UAAU,CAAC,MAAM,CAAC;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7B,MAAM,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,gBAAgB,CAAC,CAAC,CAAC;SAC7E;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,YAAY,CAAC,SAAS;QAClB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;;gFApNQ,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB;6FAAhB,gBAAgB;cAD5B,wDAAU;;;;;;;;;;;;;;ACVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAEP;AAC+D;;;AAK1F,MAAM,eAAe;IAKxB,YAAoB,gBAAoC;QAApC,qBAAgB,GAAhB,gBAAgB,CAAoB;QAHhD,yBAAoB,GAAG,iCAAiC,CAAC;QACzD,0BAAqB,GAAG,kCAAkC,CAAC;IAGnE,CAAC;IAED,4BAA4B;QACxB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,EAAE,0EAA2B,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACnI,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,iCAAiC,EAAE,EAAE,2EAA4B,EAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAClJ,CAAC;IAEO,oBAAoB,CAAC,IAAS,EAAE,OAAO,EAAE,QAAQ;QACrD,MAAM,QAAQ,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,kDAAkD;QAChH,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACxG,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAS,CAAC,IAAG,OAAO,CAAC,CAAC,WAAW,EAAE,EAAC,CAAC,CAAC;QAC5D,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/B,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEhC,yDAAM,CAAC,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAC,IAAI,EAAE,UAAU,EAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IAC/D,CAAC;;8EArBQ,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFZ,MAAM;6FAET,eAAe;cAH3B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACpB;;;AAQrB,MAAM,aAAa;IAIxB,YAAoB,SAA6B;QAA7B,cAAS,GAAT,SAAS,CAAoB;QAC/C,IAAI,CAAC,MAAM,GAAG;YACZ,IAAI,EAAE,6CAAM,CAAC,IAAI;YACjB,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,IAAI;YACX,KAAK,EAAE;gBACL,IAAI,EAAE,6CAAM,CAAC,KAAK,CAAC,GAAG;gBACtB,UAAU,EAAE,6CAAM,CAAC,KAAK,CAAC,mBAAmB;aAC7C;YACD,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,eAAe;YACvB,OAAO,EAAE;gBACP,OAAO,EAAE,QAAQ;gBACjB,MAAM,EAAE;oBACN,OAAO,EAAE,EAAC,CAAC,EAAE,CAAC,EAAC;iBAChB;aACF;YACD,GAAG,EAAE;gBACH,MAAM,EAAE,EAAE;gBACV,eAAe,EAAE,IAAI;aACtB;SACF,CAAC;IAEJ,CAAC;IAED,QAAQ;QAEJ,OAAO,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;QAExC,IAAI,CAAC,UAAU,GAAG,IAAI,6CAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAEpC,OAAO,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;IACxD,CAAC;;0EAtCQ,aAAa;6FAAb,aAAa;6FAAb,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEY;;;;;;;ICwBnD,qEAAmB;IAAA,uDAA6E;IAAA,4DAAK;;;IAAlF,0DAA6E;IAA7E,0JAA6E;;;IAChG,qEAAoB;IAAA,uDAAW;IAAA,4DAAK;;;IAAhB,0DAAW;IAAX,+EAAW;;ADlBhC,MAAM,aAAa;IAaxB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAR3B,gBAAW,GAAG,qEAAW,CAAC,WAAW,CAAC;QACtC,kBAAa,GAAG,qEAAW,CAAC,aAAa,CAAC;QAC1C,cAAS,GAAE,qEAAW,CAAC,YAAY,CAAC;QACpC,mBAAc,GAAE,qEAAW,CAAC,cAAc,CAAC;QAC3C,UAAK,GAAG,EAAE,CAAC;QACX,sBAAiB,GAAG,CAAC,CAAC;QACtB,cAAS,GAAG,qEAAW,CAAC,YAAY,CAAC;QAG1C,IAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE;YAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;YACnE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC;SACxE;IACH,CAAC;IAED,SAAS,CAAC,QAAgB;QACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE;YAC7B,KAAK,EAAE;gBACL,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;gBACzC,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,SAAS,EAAE,qEAAW,CAAC,SAAS;aACjC;SACF,CAAC,CAAC;IACL,CAAC;;0EA9BU,aAAa;6FAAb,aAAa;QCT1B,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QAClB,qEAAI;QAAA,uDAAwB;QAAA,4DAAK;QACjC,qEAAI;QAAA,uDAAiC;QAAA,4DAAK;QAC1C,qEAAI;QAAA,uDAAwB;QAAA,4DAAK;QACjC,sEAAI;QAAA,wDAAyC;QAAA,4DAAK;QAClD,sEAAI;QAAA,wDAAkB;QAAA,4DAAK;QAE3B,iFAAoB;QAAA,4EACpB;QAD2B,iLAAmB;QAA1B,4DACpB;QAAA,4FAA+B;QAAA,4EAC/B;QADsC,6LAA+B;QAAtC,4DAC/B;QAAA,sFACI;QAD2C,+LAAuB;QAClE,uFAAwC;QAAA,+DAAG;QAAA,4DAAmB;QAC9D,uFAA6C;QAAA,iEAAK;QAAA,4DAAmB;QACzE,4DAAkB;QACtB,4DAAM;QACN,0EACI;QAAA,sEAAI;QAAA,8FAAkC;QAAA,4DAAK;QAC3C,iEACA;QAAA,iEACA;QAAA,iEACA;QAAA,sEAAI;QAAA,0FAA8B;QAAA,4DAAK;QACvC,4EACA;QADO,oLAAsB;QAA7B,4DACA;QAAA,6EAAgI;QAAxH,sIAAS,2BAAmB,IAAC;QAA2F,iEAAK;QAAA,4DAAS;QAE9I,iEAAI;QAAA,iEAAI;QAAA,iEAAI;QAAA,iEACZ;QAAA,yGAAmB;QACnB,yGAAoB;QACxB,4DAAM;QACV,4DAAM;;QA1BM,0DAAwB;QAAxB,kGAAwB;QACxB,0DAAiC;QAAjC,2GAAiC;QACjC,0DAAwB;QAAxB,kGAAwB;QACxB,0DAAyC;QAAzC,mHAAyC;QACzC,0DAAkB;QAAlB,4FAAkB;QAEK,0DAAmB;QAAnB,8EAAmB;QACR,0DAA+B;QAA/B,0FAA+B;QACtB,0DAAuB;QAAvB,kFAAuB;QAChD,0DAAqB;QAArB,2FAAqB;QACrB,0DAA0B;QAA1B,gGAA0B;QASzC,2DAAsB;QAAtB,iFAAsB;QACS,0DAAyF;QAAzF,wKAAyF;QAG3H,0DAAc;QAAd,4EAAc;QACd,0DAAe;QAAf,6EAAe;;6FDlBd,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AERD;AAAA;AAAO,MAAM,mBAAmB;IAQ5B,YAAY,EAAU,EAAE,uBAA+B,EAAE,gCAAwC,EACrF,gBAAwB,EAAE,IAAY,EAAE,iBAAyB;QACzE,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,wBAAwB,GAAG,uBAAuB,CAAC;QACxD,IAAI,CAAC,iCAAiC,GAAG,gCAAgC,CAAC;QAC1E,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAC1C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;IAChD,CAAC;IAED,IAAI,uBAAuB;QACvB,OAAO,IAAI,CAAC,wBAAwB,CAAC;IACzC,CAAC;IAED,IAAI,uBAAuB,CAAC,KAAa;QACrC,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;IAC1C,CAAC;IAED,IAAI,gCAAgC;QAChC,OAAO,IAAI,CAAC,iCAAiC,CAAC;IAClD,CAAC;IAED,IAAI,gCAAgC,CAAC,KAAa;QAC9C,IAAI,CAAC,iCAAiC,GAAG,KAAK,CAAC;IACnD,CAAC;IAED,IAAI,gBAAgB;QAChB,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAClC,CAAC;IAED,IAAI,gBAAgB,CAAC,KAAa;QAC9B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IACnC,CAAC;IAGD,IAAI,EAAE;QACF,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IAED,IAAI,EAAE,CAAC,KAAa;QAChB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,IAAI,IAAI,CAAC,KAAa;QAClB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAGD,IAAI,iBAAiB;QACjB,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACnC,CAAC;IAED,IAAI,iBAAiB,CAAC,KAAa;QAC/B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;IACpC,CAAC;CACJ;;;;;;;;;;;;;ACnED;AAAA;AAAO,MAAM,kBAAkB;IAO3B,YAAY,EAAU,EAAE,gCAAwC,EAAE,iBAAyB,EAAE,uBAA+B;QACxH,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,iCAAiC,GAAG,gCAAgC,CAAC;QAC1E,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;QAC5C,IAAI,CAAC,wBAAwB,GAAG,uBAAuB,CAAC;IAC5D,CAAC;IAGD,IAAI,EAAE;QACF,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IAED,IAAI,EAAE,CAAC,KAAa;QAChB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,IAAI,gCAAgC;QAChC,OAAO,IAAI,CAAC,iCAAiC,CAAC;IAClD,CAAC;IAED,IAAI,gCAAgC,CAAC,KAAa;QAC9C,IAAI,CAAC,iCAAiC,GAAG,KAAK,CAAC;IACnD,CAAC;IAED,IAAI,iBAAiB;QACjB,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACnC,CAAC;IAED,IAAI,iBAAiB,CAAC,KAAa;QAC/B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;IACpC,CAAC;IAGD,IAAI,uBAAuB;QACvB,OAAO,IAAI,CAAC,wBAAwB,CAAC;IACzC,CAAC;IAED,IAAI,uBAAuB,CAAC,KAAa;QACrC,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;IAC1C,CAAC;CACJ;;;;;;;;;;;;;AC/CD;AAAA;AAAA;AAAA;AAA4B;AAGrB,MAAM,MAAO,SAAQ,6CAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM;IAQpD,YAAY,KAAyB,EAAE,CAAS,EAAE,CAAS,EAAE,OAAe,EAAE,KAAa,EAAE,OAAe;QACxG,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;QAE5B,sDAAsD;QACtD,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEzB,+DAA+D;QAC/D,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEjC,2CAA2C;QAC3C,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,eAAe,CAAC,CAAC;QAExD,4BAA4B;QAE5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC5B,CAAC;IAED,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,IAAI,KAAK,CAAC,KAAa;QACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,IAAI,SAAS,CAAC,KAAa;QACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,IAAI,SAAS,CAAC,KAAa;QACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED,IAAI,OAAO,CAAC,KAAa;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;;AAlDa,YAAK,GAAG,GAAG,CAAC;;;;;;;;;;;;;ACT9B;AAAA;AAAO,MAAM,OAAO;IAKhB,YAAY,EAAU,EAAE,CAAS,EAAE,CAAS;QACxC,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IAChB,CAAC;IAGD,IAAI,EAAE;QACF,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IAED,IAAI,EAAE,CAAC,KAAa;QAChB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,IAAI,CAAC;QACD,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED,IAAI,CAAC,CAAC,KAAa;QACf,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACpB,CAAC;IAED,IAAI,CAAC;QACD,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED,IAAI,CAAC,CAAC,KAAa;QACf,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACpB,CAAC;CACJ;;;;;;;;;;;;;ACnCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACnC;AAEW;AACiB;AAGG;AACN;AACgB;AAE5B;AACsC;AACpB;;;;;;AAgBpD,MAAM,kBAAmB,SAAQ,6CAAM,CAAC,KAAK;IA2DhD,YACY,gBAA8B,EAC9B,MAAc,EACd,QAAmB,EACnB,eAAgC,EAChC,YAAiC;QAEzC,KAAK,CAAC,EAAC,GAAG,EAAE,MAAM,EAAC,CAAC,CAAC;QANb,qBAAgB,GAAhB,gBAAgB,CAAc;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAW;QACnB,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAqB;QA3B7C,eAAe;QACP,YAAO,GAAqB,IAAI,GAAG,EAAkB,CAAC;QACtD,aAAQ,GAA2C,IAAI,GAAG,EAAqC,CAAC;QAChG,SAAI,GAAG,IAAI,KAAK,EAAU,CAAC;QAGnC,kBAAkB;QACV,+BAA0B,GAAG,KAAK,CAAC;QAMnC,mBAAc,GAAW,CAAC,CAAC;QAI3B,iBAAY,GAAqB,IAAI,GAAG,EAAe,CAAC;QAc5D,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE;YACjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;YACzE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;YAC3E,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;YACrD,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;YAC5F,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;YAC5F,IAAI,CAAC,kCAAkC,GAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;YACrH,IAAI,CAAC,uBAAuB,GAAG,IAAI,KAAK,CACpC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAC5E,CAAC;SACL;aAAM;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;SAClC;IACL,CAAC;IAED,SAAS;QACL,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,CAAC;QAE7C,kEAAkE;QAClE,8JAA8J;QAC9J,oGAAoG;QACpG,IAAI;QAEJ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACxE,IAAI,KAAK,KAAK,kFAAiB,CAAC,SAAS,EAAE;gBACvC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,CAAC,mBAAmB,EAAE,EAAE;oBACpG,IAAI,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;wBAChC,KAAK,MAAM,YAAY,IAAI,mBAAmB,EAAE;4BAC5C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,SAAS,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,YAAY,CAAC,SAAS,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;yBACvH;wBACD,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;qBACtD;yBAAM,IAAI,mBAAmB,CAAC,MAAM,KAAK,CAAC,EAAE;wBACzC,QAAQ,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;wBACzD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,EAAC,KAAK,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,EAAC,EAAC,CAAC,CAAC;wBACnE,OAAO,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;qBAC/D;gBACL,CAAC,CAAC;gBACF,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACpD,OAAO,CAAC,KAAK,CAAC,wDAAwD,CAAC,CAAC;aAC3E;iBAAM,IAAI,KAAK,KAAK,kFAAiB,CAAC,KAAK,EAAE;gBAC1C,IAAI,CAAC,gBAAgB,CAAC,kCAAkC,CAAC,CAAC;aAC7D;iBAAM;gBACH,OAAO,CAAC,KAAK,CAAC,8BAA8B,CAAC;aAChD;QACL,CAAC,CAAC;IACN,CAAC;IAED,MAAM;QACF,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,MAAM,UAAU,GAAG,qDAAQ,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,sBAAsB,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE;YACpD,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,iCAAiC;QACjC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,aAAa,EAAE,EAAE;QAC9F,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,EAAE;YACxF,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC;YACpD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,GAAG,UAAU,GAAG,OAAO,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;YACnF,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBAC5B,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC;gBAClE,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,EAAE,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;gBACpD,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;gBAC9B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;YACpC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE;QAC7B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;QAC7B,OAAO,CAAC,KAAK,CAAC,+DAA+D,CAAC,CAAC;QAC/E,OAAO,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzD,OAAO,CAAC,KAAK,CAAC,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7D,OAAO,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;QAE/D,IAAI,CAAC,2BAA2B,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QACxD,IAAI,CAAC,2BAA2B,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;QAC9D,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YACd,GAAG,EAAE,WAAW;YAChB,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,SAAS,EAAE,EAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC;YACpE,SAAS,EAAE,CAAC;YACZ,MAAM,EAAE,CAAC,CAAC;SACb,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAEvC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,iBAAiB,CAAC,CAAC;QACnE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAE/C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACnF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACrG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC;QAErE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,EAAE,EAAE,EAAE,aAAa,CAAC,CAAC;QACjF,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE;YACjC,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,EAAE,EAAE,EAAE,iBAAiB,CAAC,CAAC;QAC1F,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE;YACrC,IAAI,CAAC,eAAe,CAAC,4BAA4B,EAAE,CAAC;QACxD,CAAC,CAAC,CAAC;QAEH,oIAAoI;QACpI,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAEpD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QAEzD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QAEtC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE;YAC5C,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,QAAQ;SAClB,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE;YAC7C,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,QAAQ;SAClB,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE;YAC5C,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,QAAQ;SAClB,CAAC,CAAC;QAEH,OAAO,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACrC,CAAC;IAED,OAAO;QACH,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,sCAAsC,CAAC,CAAC;QAC3E,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,6BAA6B,CAAC,CAAC;QAEvD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,oCAAoC,CAAC,CAAC;QACrE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,wCAAwC,CAAC,CAAC;QAE7E,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,kCAAkC,EAAE,EAAC,UAAU,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAC,CAAC,CAAC;QAC1G,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,+BAA+B,EAAE,EAAC,UAAU,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAC,CAAC,CAAC;QAC1G,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,gCAAgC,EAAE,EAAC,UAAU,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAC,CAAC,CAAC;QAEtG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,4BAA4B,CAAC,CAAC;IACtE,CAAC;IAED,MAAM;QACF,IAAI,IAAI,CAAC,0BAA0B,EAAE;YACjC,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;IACL,CAAC;IAED,WAAW,CAAC,MAAc,EAAE,IAAI;QAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7B,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,mBAAmB;QACf,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,CAAC,YAA2B,EAAE,EAAE;YAC9G,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBACvB,OAAO,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK;YAC5B,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAI,OAAO,GAAG,CAAC,CAAC;YAChB,KAAK,MAAM,MAAM,IAAI,YAAY,EAAE;gBAC/B,OAAO,EAAE,CAAC;gBACV,IAAI,OAAO,GAAG,CAAC,EAAE;oBACb,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,MAAM;oBAC/B,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;iBACtC;gBAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;oBACpC,IAAI,MAAM,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,EAAE;wBACvC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,oDAAM,CAAC,IAAI,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,cAAc,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC1H,OAAO,CAAC,KAAK,CAAC,gBAAgB,GAAG,MAAM,CAAC,QAAQ,CAAC;wBACjD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;qBAC7D;yBAAM;wBACH,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,oDAAM,CAAC,IAAI,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,WAAW,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;wBACvH,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;wBACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,YAAY,GAAG,UAAU,GAAG,MAAM,CAAC,KAAK,EAAE;4BAClF,IAAI,EAAE,YAAY;4BAClB,IAAI,EAAE,SAAS;4BACf,KAAK,EAAE,QAAQ;yBAClB,CAAC,CAAC;wBAEH,gDAAgD;wBAChD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACvD,IAAI,CAAC,YAAY,CAAC,kBAAkB,GAAG,IAAI,sDAAO,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;wBAC1F,IAAI,CAAC,YAAY,CAAC,yBAAyB,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;wBACnE,IAAI,CAAC,kBAAkB,EAAE,CAAC;qBAC7B;oBACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;iBACzG;aACJ;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,CAAC,cAAsB,EAAE,EAAE;YAC7G,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,cAAc,CAAC,QAAQ,CAAC,CAAC;YAEhF,IAAI,cAAc,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,EAAE;gBAC/C,IAAI,CAAC,sBAAsB,EAAE,CAAC;aACjC;YACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACxD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC7F,IAAI,aAAa,GAAW,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAE9D,IAAI,aAAa,EAAE;gBACf,IAAI,CAAC,mCAAmC,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;gBAChE,IAAI,aAAa,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE;oBACzC,aAAa,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC;oBACnC,aAAa,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC;oBACnC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;oBACnC,aAAa,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;iBAC1C;aACJ;QACL,CAAC,CAAC;IACN,CAAC;IAED,kBAAkB;QACd,sDAAsD;QACtD,yBAAyB;QACzB,yBAAyB;QACzB,iCAAiC;QAEjC,MAAM,QAAQ,GAAG,qDAAQ,CAAC,IAAI,CAAC,CAAC;QAChC,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE;YACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,kCAAkC,EAAE,CAAC,EAAE,EAAE;gBAC9D,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,4FAAc,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAC,KAAK,CAAC,EAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAC,KAAK,CAAC,EAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAC,KAAK,CAAC,EAC7I,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,gEAAgE,CAAC,CAAC,CAAC,CAAC;aACjG;QACL,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,cAAc,GAAG,qDAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACnD,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,EAAE;YACjE,MAAM,MAAM,GAAW,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC3D,mCAAmC;YACnC,mCAAmC;YACnC,2CAA2C;YAC3C,EAAE;YACF,6BAA6B;YAC7B,6BAA6B;YAC7B,qCAAqC;YAErC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;YAExE,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;gBAC/B,UAAU,EAAE,IAAI,CAAC,YAAY;gBAC7B,WAAW,EAAE,MAAM,CAAC,CAAC;gBACrB,WAAW,EAAE,MAAM,CAAC,CAAC;gBACrB,OAAO,EAAE,MAAM,CAAC,KAAK;gBACrB,eAAe,EAAE,IAAI,CAAC,YAAY,EAAE;gBACpC,SAAS,EAAE,IAAI,CAAC,cAAc;gBAC9B,gBAAgB,EAAE,IAAI,CAAC,uBAAuB;aACjD,CAAC,CAAC;YACH,IAAI;QACR,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY,CAAC,MAAM,EAAE,KAAK;QACtB,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;YAC7B,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;SAC7D;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,YAAY,CAAC,GAAG,EAAE,GAAG;QACjB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;IACzD,CAAC;IAED,YAAY,CAAC,MAAM,EAAE,MAAM;QACvB,QAAQ,MAAM,EAAE;YACZ,KAAK,CAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,GAAG,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;gBACvE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC1D,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBAC/B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBAC/B,MAAM;aACT;YACD,KAAK,CAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,GAAG,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;gBACvE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC1D,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBAC/B,MAAM;aACT;YACD,KAAK,CAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,GAAG,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;gBACvE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC1D,MAAM;aACT;SACJ;IACL,CAAC;IAED,YAAY;QACR,IAAI,YAAY,GAAG,IAAI,KAAK,EAAU,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,KAAa,EAAE,GAAW,EAAE,EAAE;YAChD,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;YACrB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;QAE9D,IAAI,OAAO,GAAG,CAAC;QACf,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YACpC,OAAO,EAAE,CAAC;YACV,IAAI,OAAO,GAAG,CAAC,EAAE;gBACb,OAAO;aACV;QACL,CAAC,CAAC;IACN,CAAC;IAED,iBAAiB;QACb,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;YACtC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,WAAW,CAAC,CAAC,oDAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SACrD;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,KAAK,IAAI,EAAE;YAC9C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,WAAW,CAAC,oDAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACpD;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,KAAK,IAAI,EAAE;YAC3C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,oDAAM,CAAC,KAAK,CAAC,CAAC;YAClE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SACnD;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;YAC7C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,oDAAM,CAAC,KAAK,CAAC,CAAC;YACjE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SACrD;IACL,CAAC;IAED,oBAAoB;QAChB,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,EAAE;YACxG,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,CAAC,EAAE;gBACvC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,SAAS,CAAC;gBACpE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,SAAS,CAAC;aACvE;iBAAM;gBACH,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,SAAS,EAAE,eAAe,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;gBAChI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC;aAChE;QACL,CAAC,CAAC;IACN,CAAC;IAEL,oHAAoH;IAChH,2BAA2B,CAAC,SAAiB,EAAE,OAAe;QAC1D,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YACd,GAAG,EAAE,OAAO;YACZ,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,SAAS,EAAE,EAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC;YACpE,SAAS,EAAE,CAAC;YACZ,MAAM,EAAE,CAAC,CAAC;SACb,CAAC,CAAC;IACP,CAAC;IAED,mCAAmC,CAAC,cAAsB,EAAE,aAAqB;QAC7E,IAAI,IAAI,CAAC,YAAY,KAAK,cAAc,CAAC,QAAQ,EAAE;YAC/C,IAAI,aAAa,CAAC,CAAC,GAAG,cAAc,CAAC,SAAS,EAAE;gBAC5C,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC9B;YACD,IAAI,aAAa,CAAC,CAAC,GAAG,cAAc,CAAC,SAAS,EAAE;gBAC5C,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;aAC/B;YACD,IAAI,aAAa,CAAC,CAAC,GAAG,cAAc,CAAC,SAAS,EAAE;gBAC5C,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aAC7B;YACD,IAAI,aAAa,CAAC,CAAC,GAAG,cAAc,CAAC,SAAS,EAAE;gBAC5C,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;aAC/B;SACJ;IACL,CAAC;IAED,YAAY;QACR,QAAQ,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,EAAE;YAC/C,KAAK,EAAE,CAAC,CAAC;gBACL,OAAO,kEAAS,CAAC,OAAO,CAAC;aAC5B;YACD,KAAK,CAAC,GAAG,CAAC,CAAC;gBACP,OAAO,kEAAS,CAAC,QAAQ,CAAC;aAC7B;YACD,KAAK,CAAC,EAAE,CAAC,CAAC;gBACN,OAAO,kEAAS,CAAC,OAAO,CAAC;aAC5B;YACD,KAAK,CAAC,CAAC,CAAC;gBACJ,OAAO,kEAAS,CAAC,QAAQ,CAAC;aAC7B;SACJ;IACL,CAAC;IAED,IAAI,eAAe;QACf,OAAO,IAAI,CAAC,gBAAgB,CAAC;IACjC,CAAC;IAED,gIAAgI;IAEhI,WAAW;QACP,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAClC,CAAC;IAED,sBAAsB;QAClB,IAAI,CAAC,0BAA0B,GAAG,KAAK,CAAC;QACxC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;IACvC,CAAC;IAED,gBAAgB,CAAC,YAAY;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,EAAC,KAAK,EAAE,EAAC,OAAO,EAAE,YAAY,EAAC,EAAC,CAAC,CAAC;IACrE,CAAC;IAED,WAAW;QACP,IAAI,IAAI,CAAC,wBAAwB,IAAI,IAAI,CAAC,iBAAiB;YACvD,IAAI,CAAC,wBAAwB,IAAI,IAAI,CAAC,0BAA0B;YAChE,IAAI,CAAC,0BAA0B,IAAI,IAAI,CAAC,2BAA2B;YACnE,IAAI,CAAC,0BAA0B,IAAI,IAAI,CAAC,qBAAqB;YAC7D,IAAI,CAAC,uBAAuB,IAAI,IAAI,CAAC,wBAAwB;YAC7D,IAAI,CAAC,sBAAsB,EAC7B;YACE,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC;YAC1B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;YACxB,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;YAC5C,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;YACrC,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;YAC5C,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;YAC9C,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;YAC9C,IAAI,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC;YAC/C,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;YAC9C,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;YACzC,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;YAC3C,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;YAC5C,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;YAC1C,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC;SACtC;QACD,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAClC;IACL,CAAC;;oFArgBQ,kBAAkB;kGAAlB,kBAAkB,+GAZhB;YACP;gBACI,OAAO,EAAE,wEAAY;gBACrB,QAAQ,EAAE,qEAAW,CAAC,sBAAsB;aAC/C;SACJ;QCtBL,sEAAqB;;qGD6BR,kBAAkB,WAAlB,kBAAkB,mBAFf,MAAM;6FAET,kBAAkB;cAd9B,uDAAS;eAAC;gBACP,QAAQ,EAAE,gBAAgB;gBAC1B,SAAS,EAAE;oBACP;wBACI,OAAO,EAAE,wEAAY;wBACrB,QAAQ,EAAE,qEAAW,CAAC,sBAAsB;qBAC/C;iBACJ;gBACD,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC5C;;cACA,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;AE5BD;AAAA;AAAA;AAAA;AAAsE;AACE;AAEjE,MAAM,WAAW,GAAG;IACvB,UAAU,EAAE,KAAK;IACjB,sBAAsB,EAAE,mFAAY;IACpC,SAAS,EAAE,IAAI,qFAAa,EAAE;IAC9B,WAAW,EAAE,aAAa;IAC1B,aAAa,EAAE,MAAM;IACrB,YAAY,EAAE,2BAA2B;IACzC,cAAc,EAAE,wBAAwB;CAC3C,CAAC;;;;;;;;;;;;;ACXF;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","'use strict';\r\n\r\nimport {IdentitySerializer, JsonSerializer} from 'rsocket-core';\r\n\r\n// Defined data which will be saved into response file for player (not modify)\r\nexport const CSV_RESPONSE_HEADERS_PLAYER = ['id', 'response_time_in_millis',\r\n    'specific_second_of_communication', 'version_response', 'size', 'request_timestamp'];\r\n\r\n// Defined data which will be saved into response file for monster (not modify)\r\nexport const CSV_RESPONSE_HEADERS_MONSTER = ['id', 'specific_second_of_communication', 'request_timestamp', 'response_time_in_millis'];\r\n\r\n// 1) Serializer for RSocket\r\nexport const SERIALIZER_DATA = JsonSerializer\r\nexport const SERIALIZER_METADATA = IdentitySerializer\r\nexport const DATA_MIME_TYPE = 'application/json'\r\n","// source: proto/coin.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.CoinProto', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CoinProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CoinProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CoinProto.displayName = 'proto.CoinProto';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CoinProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.CoinProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CoinProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CoinProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    positionX: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    positionY: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CoinProto}\n */\nproto.CoinProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CoinProto;\n  return proto.CoinProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CoinProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CoinProto}\n */\nproto.CoinProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionX(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionY(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CoinProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CoinProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CoinProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CoinProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPositionX();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getPositionY();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 position_x = 1;\n * @return {number}\n */\nproto.CoinProto.prototype.getPositionX = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinProto} returns this\n */\nproto.CoinProto.prototype.setPositionX = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 position_y = 2;\n * @return {number}\n */\nproto.CoinProto.prototype.getPositionY = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinProto} returns this\n */\nproto.CoinProto.prototype.setPositionY = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","// source: proto/monster.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.MonsterProto', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.MonsterProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.MonsterProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.MonsterProto.displayName = 'proto.MonsterProto';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.MonsterProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.MonsterProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.MonsterProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.MonsterProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    positionX: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    positionY: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    previousDirection: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.MonsterProto}\n */\nproto.MonsterProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.MonsterProto;\n  return proto.MonsterProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.MonsterProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.MonsterProto}\n */\nproto.MonsterProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionX(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionY(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPreviousDirection(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.MonsterProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.MonsterProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.MonsterProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.MonsterProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getPositionX();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getPositionY();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getPreviousDirection();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.MonsterProto.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.MonsterProto} returns this\n */\nproto.MonsterProto.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 position_x = 2;\n * @return {number}\n */\nproto.MonsterProto.prototype.getPositionX = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.MonsterProto} returns this\n */\nproto.MonsterProto.prototype.setPositionX = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int32 position_y = 3;\n * @return {number}\n */\nproto.MonsterProto.prototype.getPositionY = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.MonsterProto} returns this\n */\nproto.MonsterProto.prototype.setPositionY = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional string previous_direction = 4;\n * @return {string}\n */\nproto.MonsterProto.prototype.getPreviousDirection = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.MonsterProto} returns this\n */\nproto.MonsterProto.prototype.setPreviousDirection = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","// source: proto/player.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.PlayerProto', null, global);\ngoog.exportSymbol('proto.PlayerProto.AdditionalData', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.PlayerProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.PlayerProto.repeatedFields_, null);\n};\ngoog.inherits(proto.PlayerProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PlayerProto.displayName = 'proto.PlayerProto';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.PlayerProto.AdditionalData = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.PlayerProto.AdditionalData, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PlayerProto.AdditionalData.displayName = 'proto.PlayerProto.AdditionalData';\n}\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.PlayerProto.repeatedFields_ = [7];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.PlayerProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.PlayerProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.PlayerProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PlayerProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nickname: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    positionX: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    positionY: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    score: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    stepDirection: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    version: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    additionaldataList: jspb.Message.toObjectList(msg.getAdditionaldataList(),\n    proto.PlayerProto.AdditionalData.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PlayerProto}\n */\nproto.PlayerProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PlayerProto;\n  return proto.PlayerProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PlayerProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PlayerProto}\n */\nproto.PlayerProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNickname(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionX(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionY(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setScore(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStepDirection(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setVersion(value);\n      break;\n    case 7:\n      var value = new proto.PlayerProto.AdditionalData;\n      reader.readMessage(value,proto.PlayerProto.AdditionalData.deserializeBinaryFromReader);\n      msg.addAdditionaldata(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.PlayerProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.PlayerProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PlayerProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PlayerProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNickname();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPositionX();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getPositionY();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getScore();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getStepDirection();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f = message.getAdditionaldataList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      proto.PlayerProto.AdditionalData.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.PlayerProto.AdditionalData.prototype.toObject = function(opt_includeInstance) {\n  return proto.PlayerProto.AdditionalData.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.PlayerProto.AdditionalData} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PlayerProto.AdditionalData.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    text: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    number1: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    number2: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    number3: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PlayerProto.AdditionalData}\n */\nproto.PlayerProto.AdditionalData.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PlayerProto.AdditionalData;\n  return proto.PlayerProto.AdditionalData.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PlayerProto.AdditionalData} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PlayerProto.AdditionalData}\n */\nproto.PlayerProto.AdditionalData.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setText(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumber1(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumber2(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumber3(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.PlayerProto.AdditionalData.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.PlayerProto.AdditionalData.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PlayerProto.AdditionalData} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PlayerProto.AdditionalData.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getText();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getNumber1();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getNumber2();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getNumber3();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string text = 1;\n * @return {string}\n */\nproto.PlayerProto.AdditionalData.prototype.getText = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PlayerProto.AdditionalData} returns this\n */\nproto.PlayerProto.AdditionalData.prototype.setText = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional int32 number1 = 2;\n * @return {number}\n */\nproto.PlayerProto.AdditionalData.prototype.getNumber1 = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto.AdditionalData} returns this\n */\nproto.PlayerProto.AdditionalData.prototype.setNumber1 = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int32 number2 = 3;\n * @return {number}\n */\nproto.PlayerProto.AdditionalData.prototype.getNumber2 = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto.AdditionalData} returns this\n */\nproto.PlayerProto.AdditionalData.prototype.setNumber2 = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int32 number3 = 4;\n * @return {number}\n */\nproto.PlayerProto.AdditionalData.prototype.getNumber3 = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto.AdditionalData} returns this\n */\nproto.PlayerProto.AdditionalData.prototype.setNumber3 = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional string nickname = 1;\n * @return {string}\n */\nproto.PlayerProto.prototype.getNickname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setNickname = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional int32 position_x = 2;\n * @return {number}\n */\nproto.PlayerProto.prototype.getPositionX = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setPositionX = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int32 position_y = 3;\n * @return {number}\n */\nproto.PlayerProto.prototype.getPositionY = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setPositionY = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int32 score = 4;\n * @return {number}\n */\nproto.PlayerProto.prototype.getScore = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setScore = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional string step_direction = 5;\n * @return {string}\n */\nproto.PlayerProto.prototype.getStepDirection = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setStepDirection = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional int32 version = 6;\n * @return {number}\n */\nproto.PlayerProto.prototype.getVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setVersion = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * repeated AdditionalData additionalData = 7;\n * @return {!Array<!proto.PlayerProto.AdditionalData>}\n */\nproto.PlayerProto.prototype.getAdditionaldataList = function() {\n  return /** @type{!Array<!proto.PlayerProto.AdditionalData>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.PlayerProto.AdditionalData, 7));\n};\n\n\n/**\n * @param {!Array<!proto.PlayerProto.AdditionalData>} value\n * @return {!proto.PlayerProto} returns this\n*/\nproto.PlayerProto.prototype.setAdditionaldataList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!proto.PlayerProto.AdditionalData=} opt_value\n * @param {number=} opt_index\n * @return {!proto.PlayerProto.AdditionalData}\n */\nproto.PlayerProto.prototype.addAdditionaldata = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.PlayerProto.AdditionalData, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.clearAdditionaldataList = function() {\n  return this.setAdditionaldataList([]);\n};\n\n\ngoog.object.extend(exports, proto);\n","import {RouterModule, Routes} from \"@angular/router\";\r\nimport {NgModule} from \"@angular/core\";\r\nimport {MainSceneComponent} from \"./scene/main-scene.component\";\r\nimport {HomeComponent} from \"./home/home.component\";\r\n\r\nconst routes: Routes = [\r\n  {path: 'home', component: HomeComponent},\r\n  {path: 'game', component: MainSceneComponent},\r\n  {path: '**', redirectTo: 'home'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  constructor() {\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","// @ts-ignore\r\nimport {BrowserModule} from '@angular/platform-browser';\r\n// @ts-ignore\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {GameComponent} from './game/game.component';\r\nimport {MainSceneComponent} from './scene/main-scene.component';\r\nimport {WebsocketService} from './communication/websocket/websocket.service';\r\n// @ts-ignore\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {AppRoutingModule} from \"./app-routing.module\";\r\nimport {HomeComponent} from './home/home.component';\r\n// @ts-ignore\r\nimport {FormsModule} from \"@angular/forms\";\r\n\r\nimport {MatRadioModule} from '@angular/material/radio';\r\n\r\n// @ts-ignore\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        GameComponent,\r\n        MainSceneComponent,\r\n        HomeComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        AppRoutingModule,\r\n        FormsModule,\r\n        MatRadioModule\r\n    ],\r\n    providers: [WebsocketService],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {MeasurementResponse} from \"../model/MeasurementResponse\";\r\nimport {MonsterMeasurement} from \"../model/MonsterMeasurement\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MeasurementService {\r\n\r\n    private readonly measurements = new Array<MeasurementResponse>();\r\n    private readonly monsterMeasurements = new Array<MonsterMeasurement>();\r\n    private firstMonsterTimestamp: number;\r\n\r\n    addMeasurementResponse(id, responseTimeInMillis, specificSecondOfCommunication, version, size, requestTimestamp) {\r\n        this.measurements.push(new MeasurementResponse(id, responseTimeInMillis, specificSecondOfCommunication, version, size, requestTimestamp))\r\n    }\r\n\r\n    addMonsterMeasurement(id, requestTimestamp) {\r\n        if(this.monsterMeasurements.length === 0) {\r\n            this.firstMonsterTimestamp = requestTimestamp;\r\n        }\r\n        // this.monsterMeasurements.push(new MonsterMeasurement(id,\r\n        //     Math.ceil((requestTimestamp - this.firstMonsterTimestamp) / 1000),\r\n        //     requestTimestamp));\r\n    }\r\n\r\n    addMonsterMeasurementWithTime(id, requestTimestamp, responseTimeInMillis) {\r\n        if(this.monsterMeasurements.length === 0) {\r\n            this.firstMonsterTimestamp = requestTimestamp;\r\n        }\r\n        this.monsterMeasurements.push(new MonsterMeasurement(id,\r\n            Math.ceil((requestTimestamp - this.firstMonsterTimestamp) / 1000),\r\n            requestTimestamp, responseTimeInMillis));\r\n    }\r\n\r\n    getResponseMeasurements(): Array<MeasurementResponse> {\r\n        return this.measurements;\r\n    }\r\n\r\n    getResponseMeasurementsForMonster(): Array<MonsterMeasurement> {\r\n        return this.monsterMeasurements;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {MeasurementResponse} from \"../model/MeasurementResponse\";\r\nimport {Request} from \"../model/Request\";\r\nimport {Player} from \"../model/Player\";\r\nimport { Queue } from 'queue-typescript';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RequestCacheService {\r\n\r\n    private requests: Queue<Request> = new Queue<Request>();\r\n    private _lastCorrectRequest: Request;\r\n    private _timeForStartCommunication: number;\r\n    private static _nickname: string;\r\n\r\n    addRequest(id, x, y) {\r\n        // if (this.requests.length > 1999) {\r\n        //     this.requests.splice(0, 1);\r\n        // }\r\n        this.requests.enqueue(new Request(id, x, y));\r\n    }\r\n\r\n    getRequest(id) {\r\n        if(this.requests.length > 0) {\r\n            const request = this.requests.front;\r\n\r\n            if(request.id > id) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        while (this.requests.length > 0) {\r\n            const request = this.requests.dequeue();\r\n\r\n            if(request.id === id) {\r\n                this.lastCorrectRequest = request;\r\n                return request;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getCorrectedPosition(id) {\r\n        if(this.requests.length > 0) {\r\n            const request = this.requests.front;\r\n            console.error(request);\r\n            if(request.id > id) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        while (this.requests.length > 0) {\r\n            const request = this.requests.dequeue();\r\n\r\n            if(request.id === id) {\r\n                return this.lastCorrectRequest;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get lastCorrectRequest(): Request {\r\n        return this._lastCorrectRequest;\r\n    }\r\n\r\n    set lastCorrectRequest(value: Request) {\r\n        this._lastCorrectRequest = value;\r\n    }\r\n\r\n    static set nickname(value: string) {\r\n        this._nickname = value;\r\n    }\r\n\r\n\r\n    get timeForStartCommunication() {\r\n        return this._timeForStartCommunication;\r\n    }\r\n\r\n    set timeForStartCommunication(value) {\r\n        this._timeForStartCommunication = value;\r\n    }\r\n}\r\n","import {BehaviorSubject, Subject} from \"rxjs\";\r\nimport {SocketClientState} from \"./SocketClientState\";\r\nimport {Player} from \"../model/Player\";\r\nimport {Monster} from \"../model/Monster\";\r\nimport {Coin} from \"../model/Coin\";\r\nimport {IFormatter} from \"./format/IFormatter\";\r\n\r\nexport abstract class Communicator {\r\n    private _serverUrl;\r\n    protected _formatter: IFormatter;\r\n    protected state: BehaviorSubject<SocketClientState>;\r\n    private _myNickname;\r\n\r\n    protected playersToAdd = new Subject<Array<Player>>();\r\n    protected playerToRemove = new Subject<Player>();\r\n    protected playerToUpdate = new Subject<Player>();\r\n    protected monsterToUpdate = new Subject<Monster>();\r\n    protected ifJoinGame = new Subject<any>();\r\n\r\n    protected coinToGet = new Subject<Coin>();\r\n    protected updateScore = new Subject<number>();\r\n    protected refreshCoin = new Subject<Coin>();\r\n\r\n    protected constructor() {\r\n    }\r\n\r\n    abstract initializeConnection();\r\n    abstract disconnect();\r\n    abstract sendPosition(data);\r\n    abstract joinToGame(nickname: string);\r\n    abstract addPlayer(nickname: string);\r\n\r\n\r\n    getState() {\r\n        return this.state.asObservable();\r\n    }\r\n\r\n    getPlayersToAdd() {\r\n        return this.playersToAdd.asObservable();\r\n    }\r\n\r\n    getPlayerToRemove() {\r\n        return this.playerToRemove.asObservable();\r\n    }\r\n\r\n    getPlayerToUpdate() {\r\n        return this.playerToUpdate.asObservable();\r\n    }\r\n\r\n    getMonsterToUpdate() {\r\n        return this.monsterToUpdate.asObservable();\r\n    }\r\n\r\n    getIfJoinGame() {\r\n        return this.ifJoinGame.asObservable();\r\n    }\r\n\r\n    getCoinToGet() {\r\n        return this.coinToGet.asObservable();\r\n    }\r\n\r\n    getRefreshCoins() {\r\n        return this.refreshCoin.asObservable();\r\n    }\r\n\r\n    get myNickname() {\r\n        return this._myNickname;\r\n    }\r\n\r\n    set myNickname(value) {\r\n        this._myNickname = value;\r\n    }\r\n\r\n    getUpdateScore() {\r\n        return this.updateScore.asObservable();\r\n    }\r\n\r\n    get serverUrl() {\r\n        return this._serverUrl;\r\n    }\r\n\r\n    set serverUrl(value) {\r\n        this._serverUrl = value;\r\n    }\r\n\r\n    get formatter(): IFormatter {\r\n        return this._formatter;\r\n    }\r\n\r\n    set formatter(value: IFormatter) {\r\n        this._formatter = value;\r\n    }\r\n}\r\n","export enum Direction {\r\n    HORIZON = \"HOR\",\r\n    VERTICAL = \"VER\",\r\n}\r\n","export enum SocketClientState {\r\n    CONNECTED,\r\n    ATTEMPTING,\r\n    ERROR\r\n}\r\n","import {IFormatter} from \"./IFormatter\";\r\n\r\nexport class JsonFormatter implements IFormatter {\r\n    decodeCoin(data) {\r\n        return JSON.parse(data.body);\r\n    }\r\n\r\n    decodeMonster(data) {\r\n        return JSON.parse(data.body);\r\n    }\r\n\r\n    decodePlayer(data) {\r\n        return JSON.parse(data.body);\r\n    }\r\n\r\n    encode(data) {\r\n        return data;\r\n    }\r\n\r\n    prepareNicknamePayload(nickname: string) {\r\n        return {'nickname': nickname}\r\n    }\r\n}\r\n\r\n","import {IFormatter} from \"./IFormatter\";\r\nimport {PlayerProto} from \"../../../../proto/generated/proto/player_pb\";\r\nimport {CoinProto} from \"../../../../proto/generated/proto/coin_pb\";\r\nimport {MonsterProto} from \"../../../../proto/generated/proto/monster_pb\";\r\nimport AdditionalData = PlayerProto.AdditionalData;\r\n\r\nexport class ProtobufFormatter implements IFormatter {\r\n    newData = new Array<PlayerProto.AdditionalData>();\r\n\r\n    decodeCoin(data) {\r\n        return CoinProto.deserializeBinary(data.binaryBody).toObject();\r\n    }\r\n\r\n    decodeMonster(data) {\r\n        return MonsterProto.deserializeBinary(data.binaryBody).toObject();\r\n    }\r\n\r\n    decodePlayer(data) {\r\n        return PlayerProto.deserializeBinary(data.binaryBody).toObject();\r\n    }\r\n\r\n    encode(data): PlayerProto {\r\n        const playerProto = new PlayerProto();\r\n\r\n        playerProto.setNickname(data.nickname);\r\n        playerProto.setPositionX(data.positionX);\r\n        playerProto.setPositionY(data.positionY);\r\n        playerProto.setScore(data.score);\r\n        playerProto.setStepDirection(data.stepDirection);\r\n        playerProto.setVersion(data.version);\r\n\r\n        for (let i = this.newData.length; i < data.additionalData.length; i++) {\r\n            const object = new AdditionalData();\r\n            object.setText(data.additionalData[i].text);\r\n            object.setNumber1(data.additionalData[i].number1)\r\n            object.setNumber2(data.additionalData[i].number2)\r\n            object.setNumber3(data.additionalData[i].number3)\r\n            this.newData.push(object);\r\n        }\r\n\r\n        playerProto.setAdditionaldataList(this.newData);\r\n\r\n        return playerProto;\r\n    }\r\n\r\n    prepareNicknamePayload(nickname: string) {\r\n        return nickname;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Communicator} from \"../Communicator\";\r\nimport {MeasurementService} from \"../../cache/measurement.service\";\r\nimport {BehaviorSubject} from \"rxjs\";\r\nimport {SocketClientState} from \"../SocketClientState\";\r\nimport {HttpClient, HttpHeaders, HttpResponse} from \"@angular/common/http\";\r\nimport {Coin} from \"../../model/Coin\";\r\nimport {Player} from \"../../model/Player\";\r\nimport {RequestCacheService} from \"../../cache/request-cache.service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Http2Service extends Communicator {\r\n    private eventSource: EventSource;\r\n    private nickname: string;\r\n\r\n    constructor(private measurementService: MeasurementService, private http: HttpClient, private requestCache: RequestCacheService) {\r\n        super();\r\n    }\r\n\r\n    initializeConnection() {\r\n        this.state = new BehaviorSubject<SocketClientState>(SocketClientState.CONNECTED);\r\n    }\r\n\r\n    disconnect() {\r\n        console.error('Zakonczono komunikacje z serverem');\r\n        if (this.eventSource.OPEN) {\r\n            this.eventSource.close();\r\n        }\r\n        this.http.delete(this.serverUrl + \"/emitter/\" + this.nickname).subscribe(value => {\r\n            console.error('Usunalem gracza');\r\n        });\r\n    }\r\n\r\n    joinToGame(nickname: string) {\r\n        this.http.get(this.serverUrl + \"/player/\" + nickname)\r\n            .subscribe((ifExist: boolean) => {\r\n                if (ifExist === false) {\r\n                    this.nickname = nickname;\r\n                    this.eventSource = new EventSource(this.serverUrl + \"/emitter/\" + this.nickname);\r\n\r\n                    this.eventSource.addEventListener('/pacman/update/monster', (monsterPositionEvent: MessageEvent) => {\r\n                        let monsterParsed = JSON.parse(monsterPositionEvent.data);\r\n                        const responseTimeInMillis = new Date().getTime() - monsterParsed.requestTimestamp;\r\n                        this.measurementService.addMonsterMeasurementWithTime(monsterParsed.id, monsterParsed.requestTimestamp, responseTimeInMillis);\r\n                        this.monsterToUpdate.next(monsterParsed);\r\n                    });\r\n                    this.eventSource.addEventListener('/pacman/get/coin', (coinPositionEvent: MessageEvent) => {\r\n                        console.error('Zbieram coina');\r\n                        this.coinToGet.next(JSON.parse(coinPositionEvent.data));\r\n                    });\r\n                    this.eventSource.addEventListener('/pacman/refresh/coins', (updateMapEvent: MessageEvent) => {\r\n                        console.error('Odswierzenie mapy');\r\n                        this.refreshCoin.next(JSON.parse(updateMapEvent.data));\r\n                    });\r\n                    this.eventSource.addEventListener('/pacman/remove/player', (playerToRemoveEvent: MessageEvent) => {\r\n                        console.error('Usuwam gracza!')\r\n                        this.playerToRemove.next(JSON.parse(playerToRemoveEvent.data));\r\n                    });\r\n                    this.eventSource.addEventListener('/pacman/add/players', (playerToAddEvent: MessageEvent) => {\r\n                        console.error('Dodaje gracza!')\r\n                        this.playersToAdd.next(JSON.parse(playerToAddEvent.data));\r\n                    });\r\n                    this.eventSource.addEventListener('/pacman/update/player', (playerToUpdateEvent: MessageEvent) => {\r\n                        const playersWithMeasurementInfo = JSON.parse(playerToUpdateEvent.data)\r\n                        if (playersWithMeasurementInfo.player.nickname.match('local*') || playersWithMeasurementInfo.player.nickname === this.myNickname) {\r\n                            this.saveResponseTime(playersWithMeasurementInfo.player.nickname,\r\n                                playersWithMeasurementInfo.requestTimestamp,\r\n                                playersWithMeasurementInfo.player.version,\r\n                                playersWithMeasurementInfo.contentLength);\r\n                        }\r\n\r\n                        this.playerToUpdate.next(playersWithMeasurementInfo.player);\r\n                    });\r\n\r\n                    this.http.get(this.serverUrl + \"/coins\").subscribe((coinsPosition: Array<Coin>) => {\r\n                        this.ifJoinGame.next(coinsPosition);\r\n                    });\r\n                } else {\r\n                    this.ifJoinGame.next(new Array(0));\r\n                }\r\n            });\r\n    }\r\n\r\n    addPlayer(nickname: string) {\r\n        const headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n        this.http.post(this.serverUrl + \"/players\", JSON.stringify(nickname), {headers: headers, observe: \"response\"})\r\n            .subscribe((playerToAdd: HttpResponse<Array<Player>>) => {\r\n                if (playerToAdd.status === 201) {\r\n                    this.playersToAdd.next(playerToAdd.body);\r\n                } else {\r\n                    console.error('Nie udalo sie dodac uzytkownika')\r\n                }\r\n            });\r\n    }\r\n\r\n    sendPosition(data) {\r\n        this.http.put(this.serverUrl + \"/player\", JSON.stringify(data), {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'requestTimestamp': new Date().getTime().toString()\r\n            },\r\n            observe: 'response'\r\n        }).subscribe((player: HttpResponse<Player>) => {\r\n            const responseTimeInMillis = new Date().getTime() - Number(player.headers.get('requestTimestamp'));\r\n            console.error(\"Odpowiedz serwera \" + responseTimeInMillis + \" milliseconds\");\r\n            if (player.body.nickname.match('local*') || player.body.nickname === this.myNickname) {\r\n                this.saveResponseTime(player.body.nickname,\r\n                    Number(player.headers.get('requestTimestamp')),\r\n                    player.body.version, Number(player.headers.get('contentLength')));\r\n            }\r\n\r\n            if (player.status === 202) {\r\n                const request = this.requestCache.getCorrectedPosition(player.body.version);\r\n\r\n                if (request !== null) {\r\n                    player.body.positionX = request.x;\r\n                    player.body.positionY = request.y;\r\n                    this.playerToUpdate.next(player.body);\r\n                }\r\n            } else if (player.status === 201) {\r\n                const request = this.requestCache.getRequest(player.body.version);\r\n                this.updateScore.next(player.body.score);\r\n\r\n                if (request !== null && (request.x !== player.body.positionX || request.y !== player.body.positionY)) {\r\n                    this.playerToUpdate.next(player.body);\r\n                }\r\n            } else if (player.status === 200) {\r\n                this.playerToRemove.next(player.body);\r\n            }\r\n        });\r\n    }\r\n\r\n    saveResponseTime(id: string, timestampFromServer: number, version: number, size: number, ) {\r\n        const responseTimeInMillis = new Date().getTime() - timestampFromServer;\r\n        // console.error(\"Odpowiedz serwera \" + responseTimeInMillis + \" milliseconds\");\r\n        this.measurementService.addMeasurementResponse(id, responseTimeInMillis,\r\n            Math.ceil((timestampFromServer - this.requestCache.timeForStartCommunication) / 1000),\r\n            version, size, timestampFromServer);\r\n    }\r\n}\r\n","export class AdditionalData {\r\n    private number1: number;\r\n    private number2: number;\r\n    private number3: number;\r\n    private text: string;\r\n\r\n    constructor(number1: number, number2: number, number3: number, text: string) {\r\n        this.number1 = number1;\r\n        this.number2 = number2;\r\n        this.number3 = number3;\r\n        this.text = text;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from \"rxjs\";\r\nimport {MeasurementService} from \"../../cache/measurement.service\";\r\nimport {Communicator} from \"../Communicator\";\r\nimport {SocketClientState} from \"../SocketClientState\";\r\nimport {RequestCacheService} from \"../../cache/request-cache.service\";\r\nimport {Client, IMessage} from '@stomp/stompjs';\r\nimport {JsonFormatter} from \"../format/JsonFormatter\";\r\nimport {ProtobufFormatter} from \"../format/ProtobufFormatter\";\r\n\r\n@Injectable()\r\nexport class WebsocketService extends Communicator {\r\n    // stomp websocket object\r\n    private stompClient: Client;\r\n    private playersOnTheSameSystemTime = 'local*'\r\n\r\n    constructor(\r\n        private measurementService: MeasurementService,\r\n        private requestCache: RequestCacheService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    initializeConnection() {\r\n        this.state = new BehaviorSubject<SocketClientState>(SocketClientState.ATTEMPTING);\r\n\r\n        this.stompClient = new Client({\r\n            brokerURL: this.serverUrl,\r\n            splitLargeFrames: true,\r\n            reconnectDelay: 3000,\r\n            heartbeatIncoming: 4000,\r\n            heartbeatOutgoing: 4000\r\n        });\r\n\r\n        this.stompClient.debug = () => {\r\n        };\r\n\r\n        this.stompClient.onConnect = (frame) => {\r\n\r\n            this.stompClient.subscribe('/pacman/add/players', (gameToAddPlayer) => {\r\n                this.playersToAdd.next(JSON.parse(gameToAddPlayer.body));\r\n                console.error('Zaktualizowano gre, dodano gracza');\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/remove/player', (playerToRemove) => {\r\n                this.playerToRemove.next(this.formatter.decodePlayer(playerToRemove));\r\n                console.error('Zaktualizowano gre, usunieto gracza');\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/update/player', (playerToUpdate: IMessage) => {\r\n                const parsedPlayer = this.formatter.decodePlayer(playerToUpdate);\r\n\r\n                this.saveMeasurement(\r\n                    parsedPlayer.nickname,\r\n                    parsedPlayer.version,\r\n                    playerToUpdate.headers.requestTimestamp,\r\n                    playerToUpdate.headers['content-length']\r\n                );\r\n\r\n                if (parsedPlayer.nickname === this.myNickname) {\r\n                    const request = this.requestCache.getRequest(parsedPlayer.version);\r\n                    this.updateScore.next(parsedPlayer.score);\r\n                    if (request !== null && (request.x !== parsedPlayer.positionX || request.y !== parsedPlayer.positionY)) {\r\n                        this.playerToUpdate.next(parsedPlayer);\r\n                    }\r\n                } else {\r\n                    this.playerToUpdate.next(parsedPlayer);\r\n                }\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/update/monster', (monster) => {\r\n                const monsterParsed = this.formatter.decodeMonster(monster);\r\n                const responseTimeInMillis = new Date().getTime() - Number(monster.headers.requestTimestamp);\r\n                this.measurementService.addMonsterMeasurementWithTime(monsterParsed.id, Number(monster.headers.requestTimestamp), responseTimeInMillis);\r\n                this.monsterToUpdate.next(monsterParsed);\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/refresh/coins', () => {\r\n                this.refreshCoin.next();\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/get/coin', (coinPosition) => {\r\n                this.coinToGet.next(this.formatter.decodeCoin(coinPosition));\r\n            });\r\n\r\n            this.stompClient.subscribe('/user/queue/reply', (currentCoinPosition) => {\r\n                this.ifJoinGame.next(JSON.parse(currentCoinPosition.body));\r\n            });\r\n\r\n            this.stompClient.subscribe('/user/queue/correct/player', (playerToUpdate: IMessage) => {\r\n                const parsedPlayer = this.formatter.decodePlayer(playerToUpdate);\r\n                console.error(parsedPlayer)\r\n\r\n                this.saveMeasurement(\r\n                    parsedPlayer.nickname,\r\n                    parsedPlayer.version,\r\n                    playerToUpdate.headers.requestTimestamp,\r\n                    playerToUpdate.headers['content-length']\r\n                );\r\n\r\n                const request = this.requestCache.getCorrectedPosition(parsedPlayer.version);\r\n\r\n                if (request !== null) {\r\n                    parsedPlayer.positionX = request.x;\r\n                    parsedPlayer.positionY = request.y;\r\n                    this.playerToUpdate.next(parsedPlayer);\r\n                }\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/collision/update', (allCoinPosition) => {\r\n            });\r\n\r\n            this.state.next(SocketClientState.CONNECTED);\r\n        };\r\n\r\n        this.stompClient.onStompError = (frame) => {\r\n            console.log('Broker reported error: ' + frame.headers['message']);\r\n            console.log('Additional details: ' + frame.body);\r\n            this.state.next(SocketClientState.ERROR);\r\n        };\r\n\r\n        this.stompClient.onWebSocketClose = (frame) => {\r\n            console.error(frame);\r\n        }\r\n\r\n        this.stompClient.onWebSocketError = (frame) => {\r\n            console.error(frame)\r\n            this.state.next(SocketClientState.ERROR);\r\n            this.stompClient.deactivate();\r\n        }\r\n\r\n        this.stompClient.activate();\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    disconnect() {\r\n        this.stompClient.deactivate();\r\n    }\r\n\r\n    saveMeasurement(\r\n        nickname: string,\r\n        version: number,\r\n        requestTimestampHeader: string,\r\n        contentLengthHeader: string\r\n    ) {\r\n        if (nickname.match(this.playersOnTheSameSystemTime) || nickname === this.myNickname) {\r\n            const responseTimeInMillis = new Date().getTime() - Number(requestTimestampHeader);\r\n\r\n            this.measurementService.addMeasurementResponse(\r\n                nickname, responseTimeInMillis,\r\n                Math.ceil((Number(requestTimestampHeader) - this.requestCache.timeForStartCommunication) / 1000),\r\n                version, Number(contentLengthHeader), Number(requestTimestampHeader)\r\n            );\r\n        }\r\n    }\r\n\r\n    sendPosition(dataToSend) {\r\n        const dataWithSpecificFormat = this.formatter.encode(dataToSend);\r\n\r\n        if (this.formatter instanceof JsonFormatter) {\r\n            this.stompClient.publish({\r\n                destination: '/app/send/position',\r\n                body: JSON.stringify(\r\n                    dataWithSpecificFormat\r\n                ),\r\n                headers: {\r\n                    requestTimestamp: new Date().getTime().toString()\r\n                }\r\n            });\r\n        } else if (this.formatter instanceof ProtobufFormatter) {\r\n            this.stompClient.publish({\r\n                destination: '/app/send/position/protobuf',\r\n                binaryBody: dataWithSpecificFormat.serializeBinary(),\r\n                headers: {\r\n                    /*'content-type': 'application/octet-stream',*/\r\n                    requestTimestamp: new Date().getTime().toString()\r\n                }\r\n            });\r\n        } else {\r\n            this.stompClient.publish({\r\n                destination: '/app/send/position/custom/binary',\r\n                binaryBody: dataWithSpecificFormat,\r\n                headers: {\r\n                    /*'content-type': 'application/octet-stream',*/\r\n                    requestTimestamp: new Date().getTime().toString()\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    joinToGame(nickname: string) {\r\n        this.stompClient.publish({\r\n            destination: '/app/join/game',\r\n            body: JSON.stringify({\r\n                \"nickname\": nickname\r\n            })\r\n        });\r\n    }\r\n\r\n    addPlayer(nickname: string) {\r\n        this.stompClient.publish({\r\n            destination: '/app/add/player',\r\n            body: JSON.stringify({\r\n                \"nickname\": nickname\r\n            })\r\n        });\r\n    }\r\n\r\n    variable = this.makeid(30000);\r\n\r\n    makeid(length) {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    setFormatter(formatter) {\r\n        this.formatter = formatter;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {MeasurementService} from \"../cache/measurement.service\";\r\nimport {saveAs} from 'file-saver';\r\nimport {CSV_RESPONSE_HEADERS_MONSTER, CSV_RESPONSE_HEADERS_PLAYER} from \"../../../global-config\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DownloadService {\r\n\r\n    private RESPONSE_FILE_PLAYER = \"response_measurement_player.csv\";\r\n    private RESPONSE_FILE_MONSTER = \"response_measurement_monster.csv\";\r\n\r\n    constructor(private cacheMeasurement: MeasurementService) {\r\n    }\r\n\r\n    downloadResponseMeasurements() {\r\n        this.downloadResponseFile(this.cacheMeasurement.getResponseMeasurements(), CSV_RESPONSE_HEADERS_PLAYER, this.RESPONSE_FILE_PLAYER);\r\n        this.downloadResponseFile(this.cacheMeasurement.getResponseMeasurementsForMonster(), CSV_RESPONSE_HEADERS_MONSTER,this.RESPONSE_FILE_MONSTER);\r\n    }\r\n\r\n    private downloadResponseFile(data: any, headers, fileName) {\r\n        const replacer = (key, value) => value === null ? '' : value; // specify how you want to handle null values here\r\n        let csv = data.map(row => headers.map(fieldName => JSON.stringify(row[fieldName], replacer)).join(','));\r\n        headers = headers.map(function(x){ return x.toUpperCase() })\r\n        csv.unshift(headers.join(','));\r\n        let csvArray = csv.join('\\r\\n');\r\n\r\n        saveAs(new Blob([csvArray], {type: 'text/csv'}), fileName);\r\n    }\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport Phaser from 'phaser';\r\nimport {MainSceneComponent} from '../scene/main-scene.component';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.css'],\r\n})\r\nexport class GameComponent implements OnInit {\r\n  phaserGame: Phaser.Game;\r\n  config: Phaser.Types.Core.GameConfig;\r\n\r\n  constructor(private mainScene: MainSceneComponent) {\r\n    this.config = {\r\n      type: Phaser.AUTO,\r\n      height: 1024,\r\n      width: 1600,\r\n      scale: {\r\n        mode: Phaser.Scale.FIT,\r\n        autoCenter: Phaser.Scale.CENTER_HORIZONTALLY\r\n      },\r\n      scene: [],\r\n      parent: 'gameContainer',\r\n      physics: {\r\n        default: 'arcade',\r\n        arcade: {\r\n          gravity: {y: 0}\r\n        }\r\n      },\r\n      fps: {\r\n        target: 50,\r\n        forceSetTimeOut: true\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n      console.error('Initialize Game Object');\r\n\r\n      this.phaserGame = new Phaser.Game(this.config);\r\n      this.phaserGame.scene.add('main', this.mainScene);\r\n      this.phaserGame.scene.start('main');\r\n\r\n      console.error('Completed Initialization Game Object');\r\n    }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {environment} from \"../../environments/environment\";\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n\r\n  public nickname: string;\r\n  public answer: string;\r\n  public message: string;\r\n  public versionName = environment.versionName;\r\n  public contentFormat = environment.contentFormat;\r\n  public vpsServer= environment.vpsServerUrl;\r\n  public localServerUrl= environment.localServerUrl;\r\n  public speed = 21;\r\n  public additionalObjects = 0;\r\n  public serverUrl = environment.vpsServerUrl;\r\n\r\n  constructor(private router: Router) {\r\n    if(this.router.getCurrentNavigation().extras.state) {\r\n      this.answer = this.router.getCurrentNavigation().extras.state.nick;\r\n      this.message = this.router.getCurrentNavigation().extras.state.message;\r\n    }\r\n  }\r\n\r\n  startGame(nickname: string) {\r\n    this.router.navigate(['game'], {\r\n      state: {\r\n        nick: nickname,\r\n        speed: this.speed,\r\n        additionalObjects: this.additionalObjects,\r\n        serverUrl: this.serverUrl,\r\n        formatter: environment.formatter\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div id=\"container\">\r\n    <div id=\"settings\">\r\n        <h3>Settings:</h3>\r\n        <h5>Version: {{versionName}}</h5>\r\n        <h5>Content Format: {{contentFormat}}</h5>\r\n        <h5>Sending speed: {{speed}}</h5>\r\n        <h5>Additional objects: {{additionalObjects}}</h5>\r\n        <h5>URL: {{serverUrl}}</h5>\r\n\r\n        Sending speed (ms): <input [(ngModel)]=\"speed\">\r\n        Additional objects per second: <input [(ngModel)]=\"additionalObjects\">\r\n        <mat-radio-group aria-label=\"Where to connect\" [(ngModel)]=\"serverUrl\">\r\n            <mat-radio-button value=\"{{vpsServer}}\">VPS</mat-radio-button>\r\n            <mat-radio-button value=\"{{localServerUrl}}\">LOCAL</mat-radio-button>\r\n        </mat-radio-group>\r\n    </div>\r\n    <div id=\"background\">\r\n        <h1>Welcome in multiplayer Pacman Game</h1>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <h2>Set nickname and click 'START'</h2>\r\n        <input [(ngModel)]=\"nickname\">\r\n        <button (click)=\"startGame(nickname)\" [disabled]=\"!nickname || nickname=='NO_ONE' || (nickname.length>10 || nickname.length<2)\">Start</button>\r\n\r\n        <br><br><br><br>\r\n        <h4 *ngIf=\"answer\">You can't start game because other player has the same nickname: '{{answer}}'</h4>\r\n        <h4 *ngIf=\"message\">{{message}}</h4>\r\n    </div>\r\n</div>\r\n\r\n","export class MeasurementResponse {\r\n    private _id: string;\r\n    private _response_time_in_millis: number;\r\n    private _specific_second_of_communication: number;\r\n    private _version_response: number;\r\n    private _size: number;\r\n    private _request_timestamp: number;\r\n\r\n    constructor(id: string, response_time_in_millis: number, specific_second_of_communication: number,\r\n                version_response: number, size: number, request_timestamp: number) {\r\n        this._id = id;\r\n        this._response_time_in_millis = response_time_in_millis;\r\n        this._specific_second_of_communication = specific_second_of_communication;\r\n        this._version_response = version_response;\r\n        this._size = size;\r\n        this._request_timestamp = request_timestamp;\r\n    }\r\n\r\n    get response_time_in_millis(): number {\r\n        return this._response_time_in_millis;\r\n    }\r\n\r\n    set response_time_in_millis(value: number) {\r\n        this._response_time_in_millis = value;\r\n    }\r\n\r\n    get specific_second_of_communication(): number {\r\n        return this._specific_second_of_communication;\r\n    }\r\n\r\n    set specific_second_of_communication(value: number) {\r\n        this._specific_second_of_communication = value;\r\n    }\r\n\r\n    get version_response(): number {\r\n        return this._version_response;\r\n    }\r\n\r\n    set version_response(value: number) {\r\n        this._version_response = value;\r\n    }\r\n\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    set id(value: string) {\r\n        this._id = value;\r\n    }\r\n\r\n    get size(): number {\r\n        return this._size;\r\n    }\r\n\r\n    set size(value: number) {\r\n        this._size = value;\r\n    }\r\n\r\n\r\n    get request_timestamp(): number {\r\n        return this._request_timestamp;\r\n    }\r\n\r\n    set request_timestamp(value: number) {\r\n        this._request_timestamp = value;\r\n    }\r\n}\r\n","export class MonsterMeasurement {\r\n    private _id: string;\r\n    private _specific_second_of_communication: number;\r\n    private _request_timestamp: number;\r\n    private _response_time_in_millis: number;\r\n\r\n\r\n    constructor(id: string, specific_second_of_communication: number, request_timestamp: number, response_time_in_millis: number) {\r\n        this._id = id;\r\n        this._specific_second_of_communication = specific_second_of_communication;\r\n        this._request_timestamp = request_timestamp;\r\n        this._response_time_in_millis = response_time_in_millis;\r\n    }\r\n\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    set id(value: string) {\r\n        this._id = value;\r\n    }\r\n\r\n    get specific_second_of_communication(): number {\r\n        return this._specific_second_of_communication;\r\n    }\r\n\r\n    set specific_second_of_communication(value: number) {\r\n        this._specific_second_of_communication = value;\r\n    }\r\n\r\n    get request_timestamp(): number {\r\n        return this._request_timestamp;\r\n    }\r\n\r\n    set request_timestamp(value: number) {\r\n        this._request_timestamp = value;\r\n    }\r\n\r\n\r\n    get response_time_in_millis(): number {\r\n        return this._response_time_in_millis;\r\n    }\r\n\r\n    set response_time_in_millis(value: number) {\r\n        this._response_time_in_millis = value;\r\n    }\r\n}\r\n","import Phaser from \"phaser\";\r\nimport {MainSceneComponent} from \"../scene/main-scene.component\";\r\n\r\nexport class Player extends Phaser.Physics.Arcade.Sprite {\r\n    public nickname: string;\r\n    private _positionX: number;\r\n    private _positionY: number;\r\n    private _score: number;\r\n    private _version: number;\r\n    public static SPEED = 200;\r\n\r\n    constructor(scene: MainSceneComponent, x: number, y: number, texture: string, score: number, version: number) {\r\n        super(scene, x, y, texture);\r\n\r\n        // Dodanie gracza do sceny (zeby w ogole byl widoczny)\r\n        scene.add.existing(this);\r\n\r\n        // Dodanie gracza do fizyki co pozwala na ustawianie interakcji\r\n        scene.physics.add.existing(this);\r\n\r\n        // Dodanie kolidera na graczu oraz warstwie\r\n        scene.physics.add.collider(this, scene.backgroundLayer);\r\n\r\n        // scene.anims.play('myUp');\r\n\r\n        this._score = score;\r\n        this._version = version;\r\n    }\r\n\r\n    get score(): number {\r\n        return this._score;\r\n    }\r\n\r\n    set score(value: number) {\r\n        this._score = value;\r\n    }\r\n\r\n    get positionX(): number {\r\n        return this._positionX;\r\n    }\r\n\r\n    set positionX(value: number) {\r\n        this._positionX = value;\r\n    }\r\n\r\n    get positionY(): number {\r\n        return this._positionY;\r\n    }\r\n\r\n    set positionY(value: number) {\r\n        this._positionY = value;\r\n    }\r\n\r\n    get version(): number {\r\n        return this._version;\r\n    }\r\n\r\n    set version(value: number) {\r\n        this._version = value;\r\n    }\r\n}\r\n","export class Request {\r\n    private _id: number;\r\n    private _x: number;\r\n    private _y: number;\r\n\r\n    constructor(id: number, x: number, y: number) {\r\n        this._id = id;\r\n        this._x = x;\r\n        this._y = y;\r\n    }\r\n\r\n\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    set id(value: number) {\r\n        this._id = value;\r\n    }\r\n\r\n    get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    set x(value: number) {\r\n        this._x = value;\r\n    }\r\n\r\n    get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    set y(value: number) {\r\n        this._y = value;\r\n    }\r\n}\r\n","import {Component, Injectable, Renderer2} from '@angular/core';\r\nimport Phaser from 'phaser';\r\nimport {Router} from \"@angular/router\";\r\nimport {Player} from \"../model/Player\";\r\nimport {interval, Observable, Subscription} from \"rxjs\";\r\nimport {DownloadService} from \"../downloader/download.service\";\r\nimport Group = Phaser.Physics.Arcade.Group;\r\nimport {Communicator} from \"../communication/Communicator\";\r\nimport {Direction} from \"../communication/Direction\";\r\nimport {SocketClientState} from \"../communication/SocketClientState\";\r\nimport {RequestCacheService} from \"../cache/request-cache.service\";\r\nimport {Request} from \"../model/Request\";\r\nimport {AdditionalData} from \"../communication/simulation/data/AdditionalData\";\r\nimport {environment} from \"../../environments/environment\";\r\n\r\n@Component({\r\n    selector: 'app-main-scene',\r\n    providers: [\r\n        {\r\n            provide: Communicator,\r\n            useClass: environment.serviceToCommunication\r\n        }\r\n    ],\r\n    templateUrl: './main-scene.component.html',\r\n    styleUrls: ['./main-scene.component.css']\r\n})\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class MainSceneComponent extends Phaser.Scene {\r\n    // Additional data for testing changing data size\r\n    private readonly arrayWithAdditionalData: Array<AdditionalData>;\r\n    private numberOfAdditionalObjectsPerSecond;\r\n\r\n    // Sending message frequency\r\n    private readonly SENDING_SPEED: number;\r\n\r\n    // Phaser 3 objects\r\n    private board: Phaser.Tilemaps.Tilemap;\r\n\r\n    private pathLayer: Phaser.Tilemaps.DynamicTilemapLayer;\r\n    private _backgroundLayer: Phaser.Tilemaps.DynamicTilemapLayer;\r\n    private coinLayer: Phaser.Types.Tilemaps.TiledObject[];\r\n\r\n    private pacmanObjects: Phaser.Tilemaps.Tileset;\r\n    private coin: Phaser.Tilemaps.Tileset;\r\n\r\n    private exitButton: Phaser.GameObjects.Image;\r\n    private downloadButton: Phaser.GameObjects.Image;\r\n    private cursorKeys: Phaser.Types.Input.Keyboard.CursorKeys;\r\n\r\n    private coins: Group;\r\n\r\n    // Subscriptions\r\n    ifJoinToGameSubscription?: Subscription;\r\n    stateSubscription?: Subscription;\r\n    playersToAddSubscription?: Subscription;\r\n    playerToRemoveSubscription?: Subscription;\r\n    playerToUpdateSubscription?: Subscription;\r\n    monsterToUpdateSubscription?: Subscription;\r\n    positionSenderSubscription?: Subscription;\r\n    coinToGetSubscription?: Subscription;\r\n    updateScoreSubscription?: Subscription;\r\n    refreshCoinsSubscription?: Subscription;\r\n    subscriptionUpdateTop3?: Subscription;\r\n\r\n    // Game objects\r\n    private players: Map<string, any> = new Map<string, Player>();\r\n    private monsters: Map<number, Phaser.GameObjects.Sprite> = new Map<number, Phaser.GameObjects.Sprite>();\r\n    private rank = new Array<Player>();\r\n    private myPlayerName: string;\r\n\r\n    // Sending objects\r\n    private startSendingPlayerPosition = false;\r\n\r\n    private positionSender: Observable<number>;\r\n    private lastX: number;\r\n    private lastY: number;\r\n    private lastAngle: number;\r\n    private counterRequest: number = 0;\r\n\r\n    // Score table objects\r\n    private yourScore: any;\r\n    private scoreRanking: Map<string, any> = new Map<string, any>();\r\n    private scoreNumber1: any;\r\n    private scoreNumber2: any;\r\n    private scoreNumber3: any;\r\n\r\n    constructor(\r\n        private websocketService: Communicator,\r\n        private router: Router,\r\n        private renderer: Renderer2,\r\n        private downloadService: DownloadService,\r\n        private requestCache: RequestCacheService\r\n    ) {\r\n        super({key: 'main'});\r\n\r\n        if (this.router.getCurrentNavigation().extras.state) {\r\n            this.myPlayerName = this.router.getCurrentNavigation().extras.state.nick;\r\n            this.SENDING_SPEED = this.router.getCurrentNavigation().extras.state.speed;\r\n            this.websocketService.myNickname = this.myPlayerName;\r\n            this.websocketService.serverUrl = this.router.getCurrentNavigation().extras.state.serverUrl;\r\n            this.websocketService.formatter = this.router.getCurrentNavigation().extras.state.formatter;\r\n            this.numberOfAdditionalObjectsPerSecond =  Number(this.router.getCurrentNavigation().extras.state.additionalObjects);\r\n            this.arrayWithAdditionalData = new Array<AdditionalData>(\r\n                Number(this.router.getCurrentNavigation().extras.state.additionalObjects)\r\n            );\r\n        } else {\r\n            this.router.navigate(['home']);\r\n        }\r\n    }\r\n\r\n    startGame() {\r\n        this.websocketService.initializeConnection();\r\n\r\n        // for (let i = 0; i < this.arrayWithAdditionalData.length; i++) {\r\n        //     this.arrayWithAdditionalData[i] = new AdditionalData(this.getRandomInt(20000, 99999), this.getRandomInt(20000, 99999), this.getRandomInt(20000, 99999),\r\n        //         this.randomString(20, '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'));\r\n        // }\r\n\r\n        this.stateSubscription = this.websocketService.getState().subscribe(state => {\r\n            if (state === SocketClientState.CONNECTED) {\r\n                this.ifJoinToGameSubscription = this.websocketService.getIfJoinGame().subscribe((currentCoinPosition) => {\r\n                    if (currentCoinPosition.length > 0) {\r\n                        for (const coinPosition of currentCoinPosition) {\r\n                            this.coins.create((coinPosition.positionX * 32) + 16, (coinPosition.positionY * 32) - 16, \"coin\", null, true, true);\r\n                        }\r\n                        this.websocketService.addPlayer(this.myPlayerName);\r\n                    } else if (currentCoinPosition.length === 0) {\r\n                        document.getElementsByTagName('canvas').item(0).remove();\r\n                        this.router.navigate(['home'], {state: {nick: this.myPlayerName}});\r\n                        console.error('Juz taki nick istnieje nie mozna dolaczyc!');\r\n                    }\r\n                })\r\n                this.websocketService.joinToGame(this.myPlayerName);\r\n                console.error('Nawiazalem polaczenie websocket i dodalem uzytkownika!');\r\n            } else if (state === SocketClientState.ERROR) {\r\n                this.notifyAboutError('Błąd: Brak połaczenia z serwerem');\r\n            } else {\r\n                console.error('Probuje nawiazac polaczenie!')\r\n            }\r\n        })\r\n    }\r\n\r\n    create() {\r\n        this.startGame();\r\n\r\n        const updateTop3 = interval(1000);\r\n        this.subscriptionUpdateTop3 = updateTop3.subscribe(() => {\r\n            this.checkRanking();\r\n        });\r\n\r\n        // Jeszcze trzeba zaimplementowac\r\n        this.coinToGetSubscription = this.websocketService.getCoinToGet().subscribe((coinToCollect) => {\r\n        });\r\n\r\n        this.updateScoreSubscription = this.websocketService.getUpdateScore().subscribe((myScore) => {\r\n            this.players.get(this.myPlayerName).score = myScore;\r\n            this.yourScore.setText(this.myPlayerName + \" score: \" + myScore);\r\n        });\r\n\r\n        this.refreshCoinsSubscription = this.websocketService.getRefreshCoins().subscribe(() => {\r\n            this.coinLayer.forEach(object => {\r\n                let obj = this.coins.create(object.x + 16, object.y - 16, \"coin\");\r\n                obj.setScale(object.width / 32, object.height / 32);\r\n                obj.body.width = object.width;\r\n                obj.body.height = object.height;\r\n            });\r\n        });\r\n\r\n        this.managePlayersInGame();\r\n        this.manageMonstersInGame();\r\n\r\n        console.error('Create Board');\r\n        this.game.loop.targetFps = 50\r\n        this.physics.world.setFPS(50)\r\n        console.error('---------------- Wyswietlam informacje o grze ---------------');\r\n        console.error('FPS actual: ' + this.game.loop.actualFps);\r\n        console.error('FPS physics.world ' + this.physics.world.fps);\r\n        console.error('---------------------------------------------');\r\n\r\n        this.createAnimationsBySpriteKey('my-player', 'myAnim');\r\n        this.createAnimationsBySpriteKey('other-player', 'enemyAnim');\r\n        this.anims.create({\r\n            key: 'animation',\r\n            frames: this.anims.generateFrameNumbers('monster', {frames: [0, 7]}),\r\n            frameRate: 2,\r\n            repeat: -1\r\n        });\r\n\r\n        this.board = this.add.tilemap('board');\r\n\r\n        this.pacmanObjects = this.board.addTilesetImage('pacman-elements');\r\n        this.coin = this.board.addTilesetImage('coin');\r\n\r\n        this.pathLayer = this.board.createDynamicLayer('path', [this.pacmanObjects], 0, 0);\r\n        this._backgroundLayer = this.board.createDynamicLayer('background_main', [this.pacmanObjects], 0, 0);\r\n        this.coinLayer = this.board.getObjectLayer('objectLayer')['objects'];\r\n\r\n        this.exitButton = this.add.image(this.game.canvas.width - 48, 48, 'exit-button');\r\n        this.exitButton.setInteractive();\r\n        this.exitButton.on('pointerup', () => {\r\n            this.switchScene();\r\n        });\r\n\r\n        this.downloadButton = this.add.image(this.game.canvas.width - 208, 48, 'download-button');\r\n        this.downloadButton.setInteractive();\r\n        this.downloadButton.on('pointerup', () => {\r\n            this.downloadService.downloadResponseMeasurements();\r\n        });\r\n\r\n        // Dodanie kolizji dla elementow warstwy background o id od 150 do 250 (te id znajduja sie w tileset ktory sklada sie na te warstwe)\r\n        this._backgroundLayer.setCollisionBetween(140, 250);\r\n\r\n        this.cursorKeys = this.input.keyboard.createCursorKeys();\r\n\r\n        this.coins = this.physics.add.group();\r\n\r\n        this.scoreNumber1 = this.add.text(700, 32, '-', {\r\n            font: \"30px Arial\",\r\n            fill: \"#0022ff\",\r\n            align: \"center\"\r\n        });\r\n        this.scoreNumber2 = this.add.text(1100, 32, '-', {\r\n            font: \"30px Arial\",\r\n            fill: \"#0022ff\",\r\n            align: \"center\"\r\n        });\r\n        this.scoreNumber3 = this.add.text(400, 32, '-', {\r\n            font: \"30px Arial\",\r\n            fill: \"#0022ff\",\r\n            align: \"center\"\r\n        });\r\n\r\n        console.error('Completed Board');\r\n    }\r\n\r\n    preload() {\r\n        this.load.image('pacman-elements', 'assets/main/images/pacmanObjects.png');\r\n        this.load.image('coin', 'assets/main/images/coin.png');\r\n\r\n        this.load.image('exit-button', 'assets/main/images/exit-button.png');\r\n        this.load.image('download-button', 'assets/main/images/download-button.png');\r\n\r\n        this.load.spritesheet('my-player', 'assets/main/images/my-player.png', {frameWidth: 32, frameHeight: 32});\r\n        this.load.spritesheet('other-player', 'assets/main/images/enemie.png', {frameWidth: 32, frameHeight: 32});\r\n        this.load.spritesheet('monster', 'assets/main/images/monster.png', {frameWidth: 32, frameHeight: 32});\r\n\r\n        this.load.tilemapTiledJSON('board', 'assets/main/map/board.json');\r\n    }\r\n\r\n    update() {\r\n        if (this.startSendingPlayerPosition) {\r\n            this.movePlayerManager();\r\n        }\r\n    }\r\n\r\n    collectCoin(player: Player, coin) {\r\n        coin.destroy(coin.x, coin.y);\r\n        return false;\r\n    }\r\n\r\n    managePlayersInGame() {\r\n        this.playersToAddSubscription = this.websocketService.getPlayersToAdd().subscribe((playersToAdd: Array<Player>) => {\r\n            playersToAdd.sort((a, b) => {\r\n                return b.score - a.score\r\n            });\r\n\r\n            this.rank.length = 4;\r\n            this.scoreNumber1.setText(\"NO_ONE\");\r\n            this.scoreNumber2.setText(\"NO_ONE\");\r\n            this.scoreNumber3.setText(\"NO_ONE\");\r\n            let counter = 0;\r\n            for (const player of playersToAdd) {\r\n                counter++;\r\n                if (counter < 4) {\r\n                    this.rank[counter - 1] = player\r\n                    this.setScoreText(counter, player);\r\n                }\r\n\r\n                if (!this.players.has(player.nickname)) {\r\n                    if (player.nickname !== this.myPlayerName) {\r\n                        this.players.set(player.nickname, new Player(this, player.positionX, player.positionY, 'other-player', player.score, -1));\r\n                        console.error('Dodaje gracza ' + player.nickname)\r\n                        this.players.get(player.nickname).anims.play('enemyAnim');\r\n                    } else {\r\n                        this.players.set(player.nickname, new Player(this, player.positionX, player.positionY, 'my-player', player.score, -1));\r\n                        this.startSendingPlayerPosition = true;\r\n                        this.yourScore = this.add.text(32, 32, this.myPlayerName + \" score: \" + player.score, {\r\n                            font: \"30px Arial\",\r\n                            fill: \"#ff0044\",\r\n                            align: \"center\"\r\n                        });\r\n\r\n                        // Uruchomienie animacji wczesniej przygotowanej\r\n                        this.players.get(player.nickname).anims.play('myAnim');\r\n                        this.requestCache.lastCorrectRequest = new Request(0, player.positionX, player.positionY);\r\n                        this.requestCache.timeForStartCommunication = new Date().getTime();\r\n                        this.sendPlayerPosition();\r\n                    }\r\n                    this.physics.add.overlap(this.players.get(player.nickname), this.coins, this.collectCoin, null, this);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.playerToRemoveSubscription = this.websocketService.getPlayerToRemove().subscribe((playerToRemove: Player) => {\r\n            this.rank = this.rank.filter(item => item.nickname !== playerToRemove.nickname);\r\n\r\n            if (playerToRemove.nickname === this.myPlayerName) {\r\n                this.cleanAndBackToHomePage();\r\n            }\r\n            this.players.get(playerToRemove.nickname).destroy(true);\r\n            this.players.delete(playerToRemove.nickname);\r\n        });\r\n\r\n        this.playerToUpdateSubscription = this.websocketService.getPlayerToUpdate().subscribe((player) => {\r\n            let currentPlayer: Player = this.players.get(player.nickname);\r\n\r\n            if (currentPlayer) {\r\n                this.changeAnimationFrameForOtherPlayers(player, currentPlayer);\r\n                if (currentPlayer.version <= player.version) {\r\n                    currentPlayer.x = player.positionX;\r\n                    currentPlayer.y = player.positionY;\r\n                    currentPlayer.score = player.score;\r\n                    currentPlayer.version = player.version;\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    sendPlayerPosition() {\r\n        // const player = this.players.get(this.myPlayerName);\r\n        // this.lastX = player.x;\r\n        // this.lastY = player.y;\r\n        // this.lastAngle = player.angle;\r\n\r\n        const supplier = interval(1000);\r\n        supplier.subscribe(() => {\r\n            for (let i = 0; i < this.numberOfAdditionalObjectsPerSecond; i++) {\r\n                this.arrayWithAdditionalData.push(new AdditionalData(this.getRandomInt(20000,99999),this.getRandomInt(20000,99999),this.getRandomInt(20000,99999),\r\n                    this.randomString(20, '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')));\r\n            }\r\n        });\r\n\r\n\r\n        this.positionSender = interval(this.SENDING_SPEED);\r\n        this.positionSenderSubscription = this.positionSender.subscribe(() => {\r\n            const player: Player = this.players.get(this.myPlayerName);\r\n            // if ((this.lastX !== player.x) ||\r\n            //     (this.lastY !== player.y) ||\r\n            //     (this.lastAngle !== player.angle)) {\r\n            //\r\n            //     this.lastX = player.x;\r\n            //     this.lastY = player.y;\r\n            //     this.lastAngle = player.angle;\r\n\r\n            this.requestCache.addRequest(++this.counterRequest, player.x, player.y);\r\n\r\n            this.websocketService.sendPosition({\r\n                \"nickname\": this.myPlayerName,\r\n                \"positionX\": player.x,\r\n                \"positionY\": player.y,\r\n                \"score\": player.score,\r\n                \"stepDirection\": this.getDirection(),\r\n                \"version\": this.counterRequest,\r\n                \"additionalData\": this.arrayWithAdditionalData\r\n            });\r\n            // }\r\n        });\r\n    }\r\n\r\n    randomString(length, chars) {\r\n        let result = '';\r\n        for (let i = length; i > 0; --i) {\r\n            result += chars[Math.floor(Math.random() * chars.length)];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getRandomInt(min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n\r\n    setScoreText(number, player) {\r\n        switch (number) {\r\n            case 1: {\r\n                this.scoreNumber1.setText(player.nickname + \" score: \" + player.score);\r\n                this.scoreRanking.set(player.nickname, this.scoreNumber1);\r\n                this.scoreNumber2.setText(\"-\");\r\n                this.scoreNumber3.setText(\"-\");\r\n                break;\r\n            }\r\n            case 2: {\r\n                this.scoreNumber2.setText(player.nickname + \" score: \" + player.score);\r\n                this.scoreRanking.set(player.nickname, this.scoreNumber2);\r\n                this.scoreNumber3.setText(\"-\");\r\n                break;\r\n            }\r\n            case 3: {\r\n                this.scoreNumber3.setText(player.nickname + \" score: \" + player.score);\r\n                this.scoreRanking.set(player.nickname, this.scoreNumber3);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    checkRanking() {\r\n        let playersArray = new Array<Player>();\r\n        this.players.forEach((value: Player, key: string) => {\r\n            value.nickname = key;\r\n            playersArray.push(value);\r\n        });\r\n\r\n        playersArray = playersArray.sort((a, b) => b.score - a.score);\r\n\r\n        let counter = 1\r\n        playersArray.forEach(element => {\r\n            this.setScoreText(counter, element);\r\n            counter++;\r\n            if (counter > 3) {\r\n                return;\r\n            }\r\n        })\r\n    }\r\n\r\n    movePlayerManager() {\r\n        if (this.cursorKeys.left.isDown === true) {\r\n            this.players.get(this.myPlayerName).setVelocity(-Player.SPEED, 0);\r\n            this.players.get(this.myPlayerName).setAngle(270);\r\n        } else if (this.cursorKeys.right.isDown === true) {\r\n            this.players.get(this.myPlayerName).setVelocity(Player.SPEED, 0);\r\n            this.players.get(this.myPlayerName).setAngle(90);\r\n        } else if (this.cursorKeys.up.isDown === true) {\r\n            this.players.get(this.myPlayerName).setVelocity(0, -Player.SPEED);\r\n            this.players.get(this.myPlayerName).setAngle(0);\r\n        } else if (this.cursorKeys.down.isDown === true) {\r\n            this.players.get(this.myPlayerName).setVelocity(0, Player.SPEED);\r\n            this.players.get(this.myPlayerName).setAngle(180);\r\n        }\r\n    }\r\n\r\n    manageMonstersInGame() {\r\n        this.monsterToUpdateSubscription = this.websocketService.getMonsterToUpdate().subscribe((monsterToUpdate) => {\r\n            if (this.monsters.has(monsterToUpdate.id)) {\r\n                this.monsters.get(monsterToUpdate.id).x = monsterToUpdate.positionX;\r\n                this.monsters.get(monsterToUpdate.id).y = monsterToUpdate.positionY;\r\n            } else {\r\n                this.monsters.set(monsterToUpdate.id, this.physics.add.sprite(monsterToUpdate.positionX, monsterToUpdate.positionY, 'monster'));\r\n                this.monsters.get(monsterToUpdate.id).anims.play('animation')\r\n            }\r\n        })\r\n    }\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    createAnimationsBySpriteKey(figureKey: string, animKey: string) {\r\n        this.anims.create({\r\n            key: animKey,\r\n            frames: this.anims.generateFrameNumbers(figureKey, {frames: [3, 1]}),\r\n            frameRate: 5,\r\n            repeat: -1\r\n        });\r\n    }\r\n\r\n    changeAnimationFrameForOtherPlayers(playerToUpdate: Player, currentPlayer: Player) {\r\n        if (this.myPlayerName !== playerToUpdate.nickname) {\r\n            if (currentPlayer.x < playerToUpdate.positionX) {\r\n                currentPlayer.setAngle(90);\r\n            }\r\n            if (currentPlayer.x > playerToUpdate.positionX) {\r\n                currentPlayer.setAngle(270);\r\n            }\r\n            if (currentPlayer.y < playerToUpdate.positionY) {\r\n                currentPlayer.setAngle(0);\r\n            }\r\n            if (currentPlayer.y > playerToUpdate.positionY) {\r\n                currentPlayer.setAngle(180);\r\n            }\r\n        }\r\n    }\r\n\r\n    getDirection() {\r\n        switch (this.players.get(this.myPlayerName).angle) {\r\n            case 90: {\r\n                return Direction.HORIZON;\r\n            }\r\n            case -180: {\r\n                return Direction.VERTICAL;\r\n            }\r\n            case -90: {\r\n                return Direction.HORIZON;\r\n            }\r\n            case 0: {\r\n                return Direction.VERTICAL;\r\n            }\r\n        }\r\n    }\r\n\r\n    get backgroundLayer(): Phaser.Tilemaps.DynamicTilemapLayer {\r\n        return this._backgroundLayer;\r\n    }\r\n\r\n    ////////////////////////////////////            Cleaning operations             ////////////////////////////////////////////////\r\n\r\n    switchScene() {\r\n        this.cleanAndBackToHomePage();\r\n    }\r\n\r\n    cleanAndBackToHomePage() {\r\n        this.startSendingPlayerPosition = false;\r\n        this.myPlayerName = '';\r\n        this.router.navigate(['home'], {});\r\n    }\r\n\r\n    notifyAboutError(errorMessage) {\r\n        this.router.navigate(['home'], {state: {message: errorMessage}});\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.ifJoinToGameSubscription && this.stateSubscription &&\r\n            this.playersToAddSubscription && this.playerToRemoveSubscription &&\r\n            this.playerToUpdateSubscription && this.monsterToUpdateSubscription &&\r\n            this.positionSenderSubscription && this.coinToGetSubscription &&\r\n            this.updateScoreSubscription && this.refreshCoinsSubscription &&\r\n            this.subscriptionUpdateTop3\r\n        ) {\r\n            console.error('OnDestory')\r\n            this.counterRequest = 0;\r\n            this.ifJoinToGameSubscription.unsubscribe();\r\n            this.stateSubscription.unsubscribe();\r\n            this.playersToAddSubscription.unsubscribe();\r\n            this.playerToRemoveSubscription.unsubscribe();\r\n            this.playerToUpdateSubscription.unsubscribe();\r\n            this.monsterToUpdateSubscription.unsubscribe();\r\n            this.positionSenderSubscription.unsubscribe();\r\n            this.coinToGetSubscription.unsubscribe();\r\n            this.updateScoreSubscription.unsubscribe();\r\n            this.refreshCoinsSubscription.unsubscribe();\r\n            this.subscriptionUpdateTop3.unsubscribe();\r\n            this.websocketService.disconnect();\r\n        }\r\n        if (this.game) {\r\n            this.game.destroy(true);\r\n            this.game.scene.remove('main');\r\n        }\r\n    }\r\n}\r\n","<app-game></app-game>\r\n","import {Http2Service} from \"../app/communication/http2/http2.service\";\r\nimport {JsonFormatter} from \"../app/communication/format/JsonFormatter\";\r\n\r\nexport const environment = {\r\n    production: false,\r\n    serviceToCommunication: Http2Service,\r\n    formatter: new JsonFormatter(),\r\n    versionName: 'HTTP2 + SSE',\r\n    contentFormat: 'json',\r\n    vpsServerUrl: 'https://83.229.84.77:8080',\r\n    localServerUrl: 'https://localhost:8080'\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}