{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///global-config.ts","webpack:///proto/generated/proto/coin_pb.js","webpack:///proto/generated/proto/monster_pb.js","webpack:///proto/generated/proto/player_pb.js","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cache/measurement.service.ts","webpack:///src/app/cache/request-cache.service.ts","webpack:///src/app/communication/Communicator.ts","webpack:///src/app/communication/Direction.ts","webpack:///src/app/communication/SocketClientState.ts","webpack:///src/app/communication/format/JsonFormatter.ts","webpack:///src/app/communication/format/ProtobufFormatter.ts","webpack:///src/app/communication/simulation/data/AdditionalData.ts","webpack:///src/app/communication/websocket/websocket.service.ts","webpack:///src/app/downloader/download.service.ts","webpack:///src/app/game/game.component.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/model/MeasurementResponse.ts","webpack:///src/app/model/MonsterMeasurement.ts","webpack:///src/app/model/Player.ts","webpack:///src/app/model/Request.ts","webpack:///src/app/scene/main-scene.component.ts","webpack:///src/app/scene/main-scene.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","CSV_RESPONSE_HEADERS_PLAYER","CSV_RESPONSE_HEADERS_MONSTER","SERIALIZER_DATA","SERIALIZER_METADATA","DATA_MIME_TYPE","jspb","goog","global","Function","exportSymbol","proto","CoinProto","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","positionX","getFieldWithDefault","positionY","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readInt32","setPositionX","setPositionY","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getPositionX","writeInt32","getPositionY","setProto3IntField","object","extend","MonsterProto","previousDirection","setId","readString","setPreviousDirection","getId","getPreviousDirection","length","writeString","setProto3StringField","PlayerProto","repeatedFields_","AdditionalData","nickname","score","stepDirection","version","additionaldataList","toObjectList","getAdditionaldataList","setNickname","setScore","setStepDirection","setVersion","readMessage","addAdditionaldata","getNickname","getScore","getStepDirection","getVersion","writeRepeatedMessage","text","number1","number2","number3","setText","setNumber1","setNumber2","setNumber3","getText","getNumber1","getNumber2","getNumber3","getRepeatedWrapperField","setAdditionaldataList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearAdditionaldataList","routes","path","component","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","MeasurementService","measurements","Array","monsterMeasurements","responseTimeInMillis","specificSecondOfCommunication","size","requestTimestamp","push","firstMonsterTimestamp","Math","ceil","providedIn","RequestCacheService","requests","x","y","enqueue","request","front","dequeue","lastCorrectRequest","console","error","_lastCorrectRequest","_timeForStartCommunication","_nickname","Communicator","playersToAdd","playerToRemove","playerToUpdate","monsterToUpdate","ifJoinGame","coinToGet","updateScore","refreshCoin","state","asObservable","_myNickname","_serverUrl","_formatter","Direction","SocketClientState","JsonFormatter","data","JSON","parse","body","ProtobufFormatter","newData","binaryBody","playerProto","i","additionalData","WebsocketService","measurementService","requestCache","playersOnTheSameSystemTime","variable","makeid","ATTEMPTING","stompClient","brokerURL","serverUrl","splitLargeFrames","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","debug","onConnect","frame","subscribe","gameToAddPlayer","next","formatter","decodePlayer","parsedPlayer","saveMeasurement","headers","myNickname","getRequest","monster","monsterParsed","decodeMonster","Date","getTime","Number","addMonsterMeasurementWithTime","coinPosition","decodeCoin","currentCoinPosition","getCorrectedPosition","allCoinPosition","CONNECTED","onStompError","log","ERROR","onWebSocketClose","onWebSocketError","deactivate","activate","requestTimestampHeader","contentLengthHeader","match","addMeasurementResponse","timeForStartCommunication","dataToSend","dataWithSpecificFormat","encode","publish","destination","stringify","toString","result","characters","charactersLength","charAt","floor","random","DownloadService","cacheMeasurement","RESPONSE_FILE_PLAYER","RESPONSE_FILE_MONSTER","downloadResponseFile","getResponseMeasurements","getResponseMeasurementsForMonster","fileName","replacer","key","csv","map","row","fieldName","join","toUpperCase","unshift","csvArray","Blob","type","GameComponent","mainScene","config","AUTO","height","width","scale","mode","Scale","FIT","autoCenter","CENTER_HORIZONTALLY","scene","parent","physics","arcade","gravity","fps","target","forceSetTimeOut","phaserGame","Game","add","start","HomeComponent","router","versionName","contentFormat","vpsServer","vpsServerUrl","localServerUrl","speed","additionalObjects","getCurrentNavigation","extras","answer","nick","navigate","startGame","MeasurementResponse","response_time_in_millis","specific_second_of_communication","version_response","request_timestamp","_id","_response_time_in_millis","_specific_second_of_communication","_version_response","_size","_request_timestamp","MonsterMeasurement","Player","texture","existing","collider","backgroundLayer","_score","_version","_positionX","_positionY","Physics","Arcade","Sprite","SPEED","Request","_x","_y","MainSceneComponent","websocketService","renderer","downloadService","players","Map","monsters","rank","startSendingPlayerPosition","counterRequest","scoreRanking","myPlayerName","SENDING_SPEED","numberOfAdditionalObjectsPerSecond","arrayWithAdditionalData","initializeConnection","stateSubscription","getState","ifJoinToGameSubscription","getIfJoinGame","coins","create","addPlayer","document","getElementsByTagName","item","remove","joinToGame","notifyAboutError","updateTop3","subscriptionUpdateTop3","checkRanking","coinToGetSubscription","getCoinToGet","coinToCollect","updateScoreSubscription","getUpdateScore","myScore","get","yourScore","refreshCoinsSubscription","getRefreshCoins","coinLayer","forEach","setScale","managePlayersInGame","manageMonstersInGame","game","loop","targetFps","world","setFPS","actualFps","createAnimationsBySpriteKey","anims","frames","generateFrameNumbers","frameRate","repeat","board","tilemap","pacmanObjects","addTilesetImage","coin","pathLayer","createDynamicLayer","_backgroundLayer","getObjectLayer","exitButton","image","canvas","setInteractive","on","switchScene","downloadButton","downloadResponseMeasurements","setCollisionBetween","cursorKeys","input","keyboard","createCursorKeys","group","scoreNumber1","font","fill","align","scoreNumber2","scoreNumber3","load","spritesheet","frameWidth","frameHeight","tilemapTiledJSON","movePlayerManager","player","destroy","playersToAddSubscription","getPlayersToAdd","sort","a","b","counter","setScoreText","has","set","play","sendPlayerPosition","overlap","collectCoin","playerToRemoveSubscription","getPlayerToRemove","filter","cleanAndBackToHomePage","playerToUpdateSubscription","getPlayerToUpdate","currentPlayer","changeAnimationFrameForOtherPlayers","supplier","getRandomInt","randomString","positionSender","positionSenderSubscription","addRequest","sendPosition","getDirection","chars","min","max","number","playersArray","element","left","isDown","setVelocity","setAngle","right","up","down","monsterToUpdateSubscription","getMonsterToUpdate","sprite","figureKey","animKey","angle","HORIZON","VERTICAL","errorMessage","unsubscribe","disconnect","Scene","provide","useClass","serviceToCommunication","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","'use strict';\r\n\r\nimport {IdentitySerializer, JsonSerializer} from 'rsocket-core';\r\n\r\n// Defined data which will be saved into response file for player (not modify)\r\nexport const CSV_RESPONSE_HEADERS_PLAYER = ['id', 'response_time_in_millis',\r\n    'specific_second_of_communication', 'version_response', 'size', 'request_timestamp'];\r\n\r\n// Defined data which will be saved into response file for monster (not modify)\r\nexport const CSV_RESPONSE_HEADERS_MONSTER = ['id', 'specific_second_of_communication', 'request_timestamp', 'response_time_in_millis'];\r\n\r\n// 1) Serializer for RSocket\r\nexport const SERIALIZER_DATA = JsonSerializer\r\nexport const SERIALIZER_METADATA = IdentitySerializer\r\nexport const DATA_MIME_TYPE = 'application/json'\r\n","// source: proto/coin.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.CoinProto', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CoinProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CoinProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CoinProto.displayName = 'proto.CoinProto';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CoinProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.CoinProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CoinProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CoinProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    positionX: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    positionY: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CoinProto}\n */\nproto.CoinProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CoinProto;\n  return proto.CoinProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CoinProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CoinProto}\n */\nproto.CoinProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionX(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionY(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CoinProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CoinProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CoinProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CoinProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPositionX();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getPositionY();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 position_x = 1;\n * @return {number}\n */\nproto.CoinProto.prototype.getPositionX = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinProto} returns this\n */\nproto.CoinProto.prototype.setPositionX = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 position_y = 2;\n * @return {number}\n */\nproto.CoinProto.prototype.getPositionY = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinProto} returns this\n */\nproto.CoinProto.prototype.setPositionY = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","// source: proto/monster.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.MonsterProto', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.MonsterProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.MonsterProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.MonsterProto.displayName = 'proto.MonsterProto';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.MonsterProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.MonsterProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.MonsterProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.MonsterProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    positionX: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    positionY: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    previousDirection: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.MonsterProto}\n */\nproto.MonsterProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.MonsterProto;\n  return proto.MonsterProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.MonsterProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.MonsterProto}\n */\nproto.MonsterProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionX(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionY(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPreviousDirection(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.MonsterProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.MonsterProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.MonsterProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.MonsterProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getPositionX();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getPositionY();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getPreviousDirection();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.MonsterProto.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.MonsterProto} returns this\n */\nproto.MonsterProto.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 position_x = 2;\n * @return {number}\n */\nproto.MonsterProto.prototype.getPositionX = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.MonsterProto} returns this\n */\nproto.MonsterProto.prototype.setPositionX = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int32 position_y = 3;\n * @return {number}\n */\nproto.MonsterProto.prototype.getPositionY = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.MonsterProto} returns this\n */\nproto.MonsterProto.prototype.setPositionY = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional string previous_direction = 4;\n * @return {string}\n */\nproto.MonsterProto.prototype.getPreviousDirection = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.MonsterProto} returns this\n */\nproto.MonsterProto.prototype.setPreviousDirection = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","// source: proto/player.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.PlayerProto', null, global);\ngoog.exportSymbol('proto.PlayerProto.AdditionalData', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.PlayerProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.PlayerProto.repeatedFields_, null);\n};\ngoog.inherits(proto.PlayerProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PlayerProto.displayName = 'proto.PlayerProto';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.PlayerProto.AdditionalData = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.PlayerProto.AdditionalData, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PlayerProto.AdditionalData.displayName = 'proto.PlayerProto.AdditionalData';\n}\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.PlayerProto.repeatedFields_ = [7];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.PlayerProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.PlayerProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.PlayerProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PlayerProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nickname: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    positionX: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    positionY: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    score: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    stepDirection: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    version: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    additionaldataList: jspb.Message.toObjectList(msg.getAdditionaldataList(),\n    proto.PlayerProto.AdditionalData.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PlayerProto}\n */\nproto.PlayerProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PlayerProto;\n  return proto.PlayerProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PlayerProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PlayerProto}\n */\nproto.PlayerProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNickname(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionX(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionY(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setScore(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStepDirection(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setVersion(value);\n      break;\n    case 7:\n      var value = new proto.PlayerProto.AdditionalData;\n      reader.readMessage(value,proto.PlayerProto.AdditionalData.deserializeBinaryFromReader);\n      msg.addAdditionaldata(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.PlayerProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.PlayerProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PlayerProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PlayerProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNickname();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPositionX();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getPositionY();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getScore();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getStepDirection();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f = message.getAdditionaldataList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      proto.PlayerProto.AdditionalData.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.PlayerProto.AdditionalData.prototype.toObject = function(opt_includeInstance) {\n  return proto.PlayerProto.AdditionalData.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.PlayerProto.AdditionalData} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PlayerProto.AdditionalData.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    text: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    number1: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    number2: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    number3: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PlayerProto.AdditionalData}\n */\nproto.PlayerProto.AdditionalData.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PlayerProto.AdditionalData;\n  return proto.PlayerProto.AdditionalData.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PlayerProto.AdditionalData} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PlayerProto.AdditionalData}\n */\nproto.PlayerProto.AdditionalData.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setText(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumber1(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumber2(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumber3(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.PlayerProto.AdditionalData.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.PlayerProto.AdditionalData.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PlayerProto.AdditionalData} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PlayerProto.AdditionalData.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getText();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getNumber1();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getNumber2();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getNumber3();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string text = 1;\n * @return {string}\n */\nproto.PlayerProto.AdditionalData.prototype.getText = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PlayerProto.AdditionalData} returns this\n */\nproto.PlayerProto.AdditionalData.prototype.setText = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional int32 number1 = 2;\n * @return {number}\n */\nproto.PlayerProto.AdditionalData.prototype.getNumber1 = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto.AdditionalData} returns this\n */\nproto.PlayerProto.AdditionalData.prototype.setNumber1 = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int32 number2 = 3;\n * @return {number}\n */\nproto.PlayerProto.AdditionalData.prototype.getNumber2 = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto.AdditionalData} returns this\n */\nproto.PlayerProto.AdditionalData.prototype.setNumber2 = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int32 number3 = 4;\n * @return {number}\n */\nproto.PlayerProto.AdditionalData.prototype.getNumber3 = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto.AdditionalData} returns this\n */\nproto.PlayerProto.AdditionalData.prototype.setNumber3 = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional string nickname = 1;\n * @return {string}\n */\nproto.PlayerProto.prototype.getNickname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setNickname = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional int32 position_x = 2;\n * @return {number}\n */\nproto.PlayerProto.prototype.getPositionX = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setPositionX = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int32 position_y = 3;\n * @return {number}\n */\nproto.PlayerProto.prototype.getPositionY = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setPositionY = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int32 score = 4;\n * @return {number}\n */\nproto.PlayerProto.prototype.getScore = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setScore = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional string step_direction = 5;\n * @return {string}\n */\nproto.PlayerProto.prototype.getStepDirection = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setStepDirection = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional int32 version = 6;\n * @return {number}\n */\nproto.PlayerProto.prototype.getVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setVersion = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * repeated AdditionalData additionalData = 7;\n * @return {!Array<!proto.PlayerProto.AdditionalData>}\n */\nproto.PlayerProto.prototype.getAdditionaldataList = function() {\n  return /** @type{!Array<!proto.PlayerProto.AdditionalData>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.PlayerProto.AdditionalData, 7));\n};\n\n\n/**\n * @param {!Array<!proto.PlayerProto.AdditionalData>} value\n * @return {!proto.PlayerProto} returns this\n*/\nproto.PlayerProto.prototype.setAdditionaldataList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!proto.PlayerProto.AdditionalData=} opt_value\n * @param {number=} opt_index\n * @return {!proto.PlayerProto.AdditionalData}\n */\nproto.PlayerProto.prototype.addAdditionaldata = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.PlayerProto.AdditionalData, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.clearAdditionaldataList = function() {\n  return this.setAdditionaldataList([]);\n};\n\n\ngoog.object.extend(exports, proto);\n","import {RouterModule, Routes} from \"@angular/router\";\r\nimport {NgModule} from \"@angular/core\";\r\nimport {MainSceneComponent} from \"./scene/main-scene.component\";\r\nimport {HomeComponent} from \"./home/home.component\";\r\n\r\nconst routes: Routes = [\r\n  {path: 'home', component: HomeComponent},\r\n  {path: 'game', component: MainSceneComponent},\r\n  {path: '**', redirectTo: 'home'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  constructor() {\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","// @ts-ignore\r\nimport {BrowserModule} from '@angular/platform-browser';\r\n// @ts-ignore\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {GameComponent} from './game/game.component';\r\nimport {MainSceneComponent} from './scene/main-scene.component';\r\nimport {WebsocketService} from './communication/websocket/websocket.service';\r\n// @ts-ignore\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {AppRoutingModule} from \"./app-routing.module\";\r\nimport {HomeComponent} from './home/home.component';\r\n// @ts-ignore\r\nimport {FormsModule} from \"@angular/forms\";\r\n\r\nimport {MatRadioModule} from '@angular/material/radio';\r\n\r\n// @ts-ignore\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        GameComponent,\r\n        MainSceneComponent,\r\n        HomeComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        AppRoutingModule,\r\n        FormsModule,\r\n        MatRadioModule\r\n    ],\r\n    providers: [WebsocketService],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {MeasurementResponse} from \"../model/MeasurementResponse\";\r\nimport {MonsterMeasurement} from \"../model/MonsterMeasurement\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MeasurementService {\r\n\r\n    private readonly measurements = new Array<MeasurementResponse>();\r\n    private readonly monsterMeasurements = new Array<MonsterMeasurement>();\r\n    private firstMonsterTimestamp: number;\r\n\r\n    addMeasurementResponse(id, responseTimeInMillis, specificSecondOfCommunication, version, size, requestTimestamp) {\r\n        this.measurements.push(new MeasurementResponse(id, responseTimeInMillis, specificSecondOfCommunication, version, size, requestTimestamp))\r\n    }\r\n\r\n    addMonsterMeasurement(id, requestTimestamp) {\r\n        if(this.monsterMeasurements.length === 0) {\r\n            this.firstMonsterTimestamp = requestTimestamp;\r\n        }\r\n        // this.monsterMeasurements.push(new MonsterMeasurement(id,\r\n        //     Math.ceil((requestTimestamp - this.firstMonsterTimestamp) / 1000),\r\n        //     requestTimestamp));\r\n    }\r\n\r\n    addMonsterMeasurementWithTime(id, requestTimestamp, responseTimeInMillis) {\r\n        if(this.monsterMeasurements.length === 0) {\r\n            this.firstMonsterTimestamp = requestTimestamp;\r\n        }\r\n        this.monsterMeasurements.push(new MonsterMeasurement(id,\r\n            Math.ceil((requestTimestamp - this.firstMonsterTimestamp) / 1000),\r\n            requestTimestamp, responseTimeInMillis));\r\n    }\r\n\r\n    getResponseMeasurements(): Array<MeasurementResponse> {\r\n        return this.measurements;\r\n    }\r\n\r\n    getResponseMeasurementsForMonster(): Array<MonsterMeasurement> {\r\n        return this.monsterMeasurements;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {MeasurementResponse} from \"../model/MeasurementResponse\";\r\nimport {Request} from \"../model/Request\";\r\nimport {Player} from \"../model/Player\";\r\nimport { Queue } from 'queue-typescript';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RequestCacheService {\r\n\r\n    private requests: Queue<Request> = new Queue<Request>();\r\n    private _lastCorrectRequest: Request;\r\n    private _timeForStartCommunication: number;\r\n    private static _nickname: string;\r\n\r\n    addRequest(id, x, y) {\r\n        // if (this.requests.length > 1999) {\r\n        //     this.requests.splice(0, 1);\r\n        // }\r\n        this.requests.enqueue(new Request(id, x, y));\r\n    }\r\n\r\n    getRequest(id) {\r\n        if(this.requests.length > 0) {\r\n            const request = this.requests.front;\r\n\r\n            if(request.id > id) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        while (this.requests.length > 0) {\r\n            const request = this.requests.dequeue();\r\n\r\n            if(request.id === id) {\r\n                this.lastCorrectRequest = request;\r\n                return request;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getCorrectedPosition(id) {\r\n        if(this.requests.length > 0) {\r\n            const request = this.requests.front;\r\n            console.error(request);\r\n            if(request.id > id) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        while (this.requests.length > 0) {\r\n            const request = this.requests.dequeue();\r\n\r\n            if(request.id === id) {\r\n                return this.lastCorrectRequest;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get lastCorrectRequest(): Request {\r\n        return this._lastCorrectRequest;\r\n    }\r\n\r\n    set lastCorrectRequest(value: Request) {\r\n        this._lastCorrectRequest = value;\r\n    }\r\n\r\n    static set nickname(value: string) {\r\n        this._nickname = value;\r\n    }\r\n\r\n\r\n    get timeForStartCommunication() {\r\n        return this._timeForStartCommunication;\r\n    }\r\n\r\n    set timeForStartCommunication(value) {\r\n        this._timeForStartCommunication = value;\r\n    }\r\n}\r\n","import {BehaviorSubject, Subject} from \"rxjs\";\r\nimport {SocketClientState} from \"./SocketClientState\";\r\nimport {Player} from \"../model/Player\";\r\nimport {Monster} from \"../model/Monster\";\r\nimport {Coin} from \"../model/Coin\";\r\nimport {IFormatter} from \"./format/IFormatter\";\r\n\r\nexport abstract class Communicator {\r\n    private _serverUrl;\r\n    protected _formatter: IFormatter;\r\n    protected state: BehaviorSubject<SocketClientState>;\r\n    private _myNickname;\r\n\r\n    protected playersToAdd = new Subject<Array<Player>>();\r\n    protected playerToRemove = new Subject<Player>();\r\n    protected playerToUpdate = new Subject<Player>();\r\n    protected monsterToUpdate = new Subject<Monster>();\r\n    protected ifJoinGame = new Subject<any>();\r\n\r\n    protected coinToGet = new Subject<Coin>();\r\n    protected updateScore = new Subject<number>();\r\n    protected refreshCoin = new Subject<Coin>();\r\n\r\n    protected constructor() {\r\n    }\r\n\r\n    abstract initializeConnection();\r\n    abstract disconnect();\r\n    abstract sendPosition(data);\r\n    abstract joinToGame(nickname: string);\r\n    abstract addPlayer(nickname: string);\r\n\r\n\r\n    getState() {\r\n        return this.state.asObservable();\r\n    }\r\n\r\n    getPlayersToAdd() {\r\n        return this.playersToAdd.asObservable();\r\n    }\r\n\r\n    getPlayerToRemove() {\r\n        return this.playerToRemove.asObservable();\r\n    }\r\n\r\n    getPlayerToUpdate() {\r\n        return this.playerToUpdate.asObservable();\r\n    }\r\n\r\n    getMonsterToUpdate() {\r\n        return this.monsterToUpdate.asObservable();\r\n    }\r\n\r\n    getIfJoinGame() {\r\n        return this.ifJoinGame.asObservable();\r\n    }\r\n\r\n    getCoinToGet() {\r\n        return this.coinToGet.asObservable();\r\n    }\r\n\r\n    getRefreshCoins() {\r\n        return this.refreshCoin.asObservable();\r\n    }\r\n\r\n    get myNickname() {\r\n        return this._myNickname;\r\n    }\r\n\r\n    set myNickname(value) {\r\n        this._myNickname = value;\r\n    }\r\n\r\n    getUpdateScore() {\r\n        return this.updateScore.asObservable();\r\n    }\r\n\r\n    get serverUrl() {\r\n        return this._serverUrl;\r\n    }\r\n\r\n    set serverUrl(value) {\r\n        this._serverUrl = value;\r\n    }\r\n\r\n    get formatter(): IFormatter {\r\n        return this._formatter;\r\n    }\r\n\r\n    set formatter(value: IFormatter) {\r\n        this._formatter = value;\r\n    }\r\n}\r\n","export enum Direction {\r\n    HORIZON = \"HOR\",\r\n    VERTICAL = \"VER\",\r\n}\r\n","export enum SocketClientState {\r\n    CONNECTED,\r\n    ATTEMPTING,\r\n    ERROR\r\n}\r\n","import {IFormatter} from \"./IFormatter\";\r\n\r\nexport class JsonFormatter implements IFormatter {\r\n    decodeCoin(data) {\r\n        return JSON.parse(data.body);\r\n    }\r\n\r\n    decodeMonster(data) {\r\n        return JSON.parse(data.body);\r\n    }\r\n\r\n    decodePlayer(data) {\r\n        return JSON.parse(data.body);\r\n    }\r\n\r\n    encode(data) {\r\n        return data;\r\n    }\r\n\r\n    prepareNicknamePayload(nickname: string) {\r\n        return {'nickname': nickname}\r\n    }\r\n}\r\n\r\n","import {IFormatter} from \"./IFormatter\";\r\nimport {PlayerProto} from \"../../../../proto/generated/proto/player_pb\";\r\nimport {CoinProto} from \"../../../../proto/generated/proto/coin_pb\";\r\nimport {MonsterProto} from \"../../../../proto/generated/proto/monster_pb\";\r\nimport AdditionalData = PlayerProto.AdditionalData;\r\n\r\nexport class ProtobufFormatter implements IFormatter {\r\n    newData = new Array<PlayerProto.AdditionalData>();\r\n\r\n    decodeCoin(data) {\r\n        return CoinProto.deserializeBinary(data.binaryBody).toObject();\r\n    }\r\n\r\n    decodeMonster(data) {\r\n        return MonsterProto.deserializeBinary(data.binaryBody).toObject();\r\n    }\r\n\r\n    decodePlayer(data) {\r\n        return PlayerProto.deserializeBinary(data.binaryBody).toObject();\r\n    }\r\n\r\n    encode(data): PlayerProto {\r\n        const playerProto = new PlayerProto();\r\n\r\n        playerProto.setNickname(data.nickname);\r\n        playerProto.setPositionX(data.positionX);\r\n        playerProto.setPositionY(data.positionY);\r\n        playerProto.setScore(data.score);\r\n        playerProto.setStepDirection(data.stepDirection);\r\n        playerProto.setVersion(data.version);\r\n\r\n        for (let i = this.newData.length; i < data.additionalData.length; i++) {\r\n            if(data.additionalData[i]) {\r\n                const object = new AdditionalData();\r\n                object.setText(data.additionalData[i].text);\r\n                object.setNumber1(data.additionalData[i].number1)\r\n                object.setNumber2(data.additionalData[i].number2)\r\n                object.setNumber3(data.additionalData[i].number3)\r\n                this.newData.push(object);\r\n            }\r\n        }\r\n\r\n        playerProto.setAdditionaldataList(this.newData);\r\n\r\n        return playerProto;\r\n    }\r\n\r\n    prepareNicknamePayload(nickname: string) {\r\n        return nickname;\r\n    }\r\n}\r\n","export class AdditionalData {\r\n    private number1: number;\r\n    private number2: number;\r\n    private number3: number;\r\n    private text: string;\r\n\r\n    constructor(number1: number, number2: number, number3: number, text: string) {\r\n        this.number1 = number1;\r\n        this.number2 = number2;\r\n        this.number3 = number3;\r\n        this.text = text;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from \"rxjs\";\r\nimport {MeasurementService} from \"../../cache/measurement.service\";\r\nimport {Communicator} from \"../Communicator\";\r\nimport {SocketClientState} from \"../SocketClientState\";\r\nimport {RequestCacheService} from \"../../cache/request-cache.service\";\r\nimport {Client, IMessage} from '@stomp/stompjs';\r\nimport {JsonFormatter} from \"../format/JsonFormatter\";\r\nimport {ProtobufFormatter} from \"../format/ProtobufFormatter\";\r\n\r\n@Injectable()\r\nexport class WebsocketService extends Communicator {\r\n    // stomp websocket object\r\n    private stompClient: Client;\r\n    private playersOnTheSameSystemTime = 'local*'\r\n\r\n    constructor(\r\n        private measurementService: MeasurementService,\r\n        private requestCache: RequestCacheService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    initializeConnection() {\r\n        this.state = new BehaviorSubject<SocketClientState>(SocketClientState.ATTEMPTING);\r\n\r\n        this.stompClient = new Client({\r\n            brokerURL: this.serverUrl,\r\n            splitLargeFrames: true,\r\n            reconnectDelay: 3000,\r\n            heartbeatIncoming: 4000,\r\n            heartbeatOutgoing: 4000\r\n        });\r\n\r\n        this.stompClient.debug = () => {\r\n        };\r\n\r\n        this.stompClient.onConnect = (frame) => {\r\n\r\n            this.stompClient.subscribe('/pacman/add/players', (gameToAddPlayer) => {\r\n                this.playersToAdd.next(JSON.parse(gameToAddPlayer.body));\r\n                console.error('Zaktualizowano gre, dodano gracza');\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/remove/player', (playerToRemove) => {\r\n                this.playerToRemove.next(this.formatter.decodePlayer(playerToRemove));\r\n                console.error('Zaktualizowano gre, usunieto gracza');\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/update/player', (playerToUpdate: IMessage) => {\r\n                const parsedPlayer = this.formatter.decodePlayer(playerToUpdate);\r\n\r\n                this.saveMeasurement(\r\n                    parsedPlayer.nickname,\r\n                    parsedPlayer.version,\r\n                    playerToUpdate.headers.requestTimestamp,\r\n                    playerToUpdate.headers['content-length']\r\n                );\r\n\r\n                if (parsedPlayer.nickname === this.myNickname) {\r\n                    const request = this.requestCache.getRequest(parsedPlayer.version);\r\n                    this.updateScore.next(parsedPlayer.score);\r\n                    if (request !== null && (request.x !== parsedPlayer.positionX || request.y !== parsedPlayer.positionY)) {\r\n                        this.playerToUpdate.next(parsedPlayer);\r\n                    }\r\n                } else {\r\n                    this.playerToUpdate.next(parsedPlayer);\r\n                }\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/update/monster', (monster) => {\r\n                const monsterParsed = this.formatter.decodeMonster(monster);\r\n                const responseTimeInMillis = new Date().getTime() - Number(monster.headers.requestTimestamp);\r\n                this.measurementService.addMonsterMeasurementWithTime(monsterParsed.id, Number(monster.headers.requestTimestamp), responseTimeInMillis);\r\n                this.monsterToUpdate.next(monsterParsed);\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/refresh/coins', () => {\r\n                this.refreshCoin.next();\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/get/coin', (coinPosition) => {\r\n                this.coinToGet.next(this.formatter.decodeCoin(coinPosition));\r\n            });\r\n\r\n            this.stompClient.subscribe('/user/queue/reply', (currentCoinPosition) => {\r\n                this.ifJoinGame.next(JSON.parse(currentCoinPosition.body));\r\n            });\r\n\r\n            this.stompClient.subscribe('/user/queue/correct/player', (playerToUpdate: IMessage) => {\r\n                const parsedPlayer = this.formatter.decodePlayer(playerToUpdate);\r\n                console.error(parsedPlayer)\r\n\r\n                this.saveMeasurement(\r\n                    parsedPlayer.nickname,\r\n                    parsedPlayer.version,\r\n                    playerToUpdate.headers.requestTimestamp,\r\n                    playerToUpdate.headers['content-length']\r\n                );\r\n\r\n                const request = this.requestCache.getCorrectedPosition(parsedPlayer.version);\r\n\r\n                if (request !== null) {\r\n                    parsedPlayer.positionX = request.x;\r\n                    parsedPlayer.positionY = request.y;\r\n                    this.playerToUpdate.next(parsedPlayer);\r\n                }\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/collision/update', (allCoinPosition) => {\r\n            });\r\n\r\n            this.state.next(SocketClientState.CONNECTED);\r\n        };\r\n\r\n        this.stompClient.onStompError = (frame) => {\r\n            console.log('Broker reported error: ' + frame.headers['message']);\r\n            console.log('Additional details: ' + frame.body);\r\n            this.state.next(SocketClientState.ERROR);\r\n        };\r\n\r\n        this.stompClient.onWebSocketClose = (frame) => {\r\n            console.error(frame);\r\n        }\r\n\r\n        this.stompClient.onWebSocketError = (frame) => {\r\n            console.error(frame)\r\n            this.state.next(SocketClientState.ERROR);\r\n            this.stompClient.deactivate();\r\n        }\r\n\r\n        this.stompClient.activate();\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    disconnect() {\r\n        this.stompClient.deactivate();\r\n    }\r\n\r\n    saveMeasurement(\r\n        nickname: string,\r\n        version: number,\r\n        requestTimestampHeader: string,\r\n        contentLengthHeader: string\r\n    ) {\r\n        if (nickname.match(this.playersOnTheSameSystemTime) || nickname === this.myNickname) {\r\n            const responseTimeInMillis = new Date().getTime() - Number(requestTimestampHeader);\r\n\r\n            this.measurementService.addMeasurementResponse(\r\n                nickname, responseTimeInMillis,\r\n                Math.ceil((Number(requestTimestampHeader) - this.requestCache.timeForStartCommunication) / 1000),\r\n                version, Number(contentLengthHeader), Number(requestTimestampHeader)\r\n            );\r\n        }\r\n    }\r\n\r\n    sendPosition(dataToSend) {\r\n        console.error(dataToSend)\r\n        const dataWithSpecificFormat = this.formatter.encode(dataToSend);\r\n\r\n        if (this.formatter instanceof JsonFormatter) {\r\n            this.stompClient.publish({\r\n                destination: '/app/send/position',\r\n                body: JSON.stringify(\r\n                    dataWithSpecificFormat\r\n                ),\r\n                headers: {\r\n                    requestTimestamp: new Date().getTime().toString()\r\n                }\r\n            });\r\n        } else if (this.formatter instanceof ProtobufFormatter) {\r\n            this.stompClient.publish({\r\n                destination: '/app/send/position/protobuf',\r\n                binaryBody: dataWithSpecificFormat.serializeBinary(),\r\n                headers: {\r\n                    /*'content-type': 'application/octet-stream',*/\r\n                    requestTimestamp: new Date().getTime().toString()\r\n                }\r\n            });\r\n        } else {\r\n            this.stompClient.publish({\r\n                destination: '/app/send/position/custom/binary',\r\n                binaryBody: dataWithSpecificFormat,\r\n                headers: {\r\n                    /*'content-type': 'application/octet-stream',*/\r\n                    requestTimestamp: new Date().getTime().toString()\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    joinToGame(nickname: string) {\r\n        this.stompClient.publish({\r\n            destination: '/app/join/game',\r\n            body: JSON.stringify({\r\n                \"nickname\": nickname\r\n            })\r\n        });\r\n    }\r\n\r\n    addPlayer(nickname: string) {\r\n        this.stompClient.publish({\r\n            destination: '/app/add/player',\r\n            body: JSON.stringify({\r\n                \"nickname\": nickname\r\n            })\r\n        });\r\n    }\r\n\r\n    variable = this.makeid(30000);\r\n\r\n    makeid(length) {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    setFormatter(formatter) {\r\n        this.formatter = formatter;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {MeasurementService} from \"../cache/measurement.service\";\r\nimport {saveAs} from 'file-saver';\r\nimport {CSV_RESPONSE_HEADERS_MONSTER, CSV_RESPONSE_HEADERS_PLAYER} from \"../../../global-config\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DownloadService {\r\n\r\n    private RESPONSE_FILE_PLAYER = \"response_measurement_player.csv\";\r\n    private RESPONSE_FILE_MONSTER = \"response_measurement_monster.csv\";\r\n\r\n    constructor(private cacheMeasurement: MeasurementService) {\r\n    }\r\n\r\n    downloadResponseMeasurements() {\r\n        this.downloadResponseFile(this.cacheMeasurement.getResponseMeasurements(), CSV_RESPONSE_HEADERS_PLAYER, this.RESPONSE_FILE_PLAYER);\r\n        this.downloadResponseFile(this.cacheMeasurement.getResponseMeasurementsForMonster(), CSV_RESPONSE_HEADERS_MONSTER,this.RESPONSE_FILE_MONSTER);\r\n    }\r\n\r\n    private downloadResponseFile(data: any, headers, fileName) {\r\n        const replacer = (key, value) => value === null ? '' : value; // specify how you want to handle null values here\r\n        let csv = data.map(row => headers.map(fieldName => JSON.stringify(row[fieldName], replacer)).join(','));\r\n        headers = headers.map(function(x){ return x.toUpperCase() })\r\n        csv.unshift(headers.join(','));\r\n        let csvArray = csv.join('\\r\\n');\r\n\r\n        saveAs(new Blob([csvArray], {type: 'text/csv'}), fileName);\r\n    }\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport Phaser from 'phaser';\r\nimport {MainSceneComponent} from '../scene/main-scene.component';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.css'],\r\n})\r\nexport class GameComponent implements OnInit {\r\n  phaserGame: Phaser.Game;\r\n  config: Phaser.Types.Core.GameConfig;\r\n\r\n  constructor(private mainScene: MainSceneComponent) {\r\n    this.config = {\r\n      type: Phaser.AUTO,\r\n      height: 1024,\r\n      width: 1600,\r\n      scale: {\r\n        mode: Phaser.Scale.FIT,\r\n        autoCenter: Phaser.Scale.CENTER_HORIZONTALLY\r\n      },\r\n      scene: [],\r\n      parent: 'gameContainer',\r\n      physics: {\r\n        default: 'arcade',\r\n        arcade: {\r\n          gravity: {y: 0}\r\n        }\r\n      },\r\n      fps: {\r\n        target: 50,\r\n        forceSetTimeOut: true\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n      console.error('Initialize Game Object');\r\n\r\n      this.phaserGame = new Phaser.Game(this.config);\r\n      this.phaserGame.scene.add('main', this.mainScene);\r\n      this.phaserGame.scene.start('main');\r\n\r\n      console.error('Completed Initialization Game Object');\r\n    }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {environment} from \"../../environments/environment\";\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n\r\n  public nickname: string;\r\n  public answer: string;\r\n  public message: string;\r\n  public versionName = environment.versionName;\r\n  public contentFormat = environment.contentFormat;\r\n  public vpsServer= environment.vpsServerUrl;\r\n  public localServerUrl= environment.localServerUrl;\r\n  public speed = 21;\r\n  public additionalObjects = 0;\r\n  public serverUrl = environment.vpsServerUrl;\r\n\r\n  constructor(private router: Router) {\r\n    if(this.router.getCurrentNavigation().extras.state) {\r\n      this.answer = this.router.getCurrentNavigation().extras.state.nick;\r\n      this.message = this.router.getCurrentNavigation().extras.state.message;\r\n    }\r\n  }\r\n\r\n  startGame(nickname: string) {\r\n    this.router.navigate(['game'], {\r\n      state: {\r\n        nick: nickname,\r\n        speed: this.speed,\r\n        additionalObjects: this.additionalObjects,\r\n        serverUrl: this.serverUrl,\r\n        formatter: environment.formatter\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div id=\"container\">\r\n    <div id=\"settings\">\r\n        <h3>Settings:</h3>\r\n        <h5>Version: {{versionName}}</h5>\r\n        <h5>Content Format: {{contentFormat}}</h5>\r\n        <h5>Sending speed: {{speed}}</h5>\r\n        <h5>Additional objects: {{additionalObjects}}</h5>\r\n        <h5>URL: {{serverUrl}}</h5>\r\n\r\n        Sending speed (ms): <input [(ngModel)]=\"speed\">\r\n        Additional objects per second: <input [(ngModel)]=\"additionalObjects\">\r\n        <mat-radio-group aria-label=\"Where to connect\" [(ngModel)]=\"serverUrl\">\r\n            <mat-radio-button value=\"{{vpsServer}}\">VPS</mat-radio-button>\r\n            <mat-radio-button value=\"{{localServerUrl}}\">LOCAL</mat-radio-button>\r\n        </mat-radio-group>\r\n    </div>\r\n    <div id=\"background\">\r\n        <h1>Welcome in multiplayer Pacman Game</h1>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <h2>Set nickname and click 'START'</h2>\r\n        <input [(ngModel)]=\"nickname\">\r\n        <button (click)=\"startGame(nickname)\" [disabled]=\"!nickname || nickname=='NO_ONE' || (nickname.length>10 || nickname.length<2)\">Start</button>\r\n\r\n        <br><br><br><br>\r\n        <h4 *ngIf=\"answer\">You can't start game because other player has the same nickname: '{{answer}}'</h4>\r\n        <h4 *ngIf=\"message\">{{message}}</h4>\r\n    </div>\r\n</div>\r\n\r\n","export class MeasurementResponse {\r\n    private _id: string;\r\n    private _response_time_in_millis: number;\r\n    private _specific_second_of_communication: number;\r\n    private _version_response: number;\r\n    private _size: number;\r\n    private _request_timestamp: number;\r\n\r\n    constructor(id: string, response_time_in_millis: number, specific_second_of_communication: number,\r\n                version_response: number, size: number, request_timestamp: number) {\r\n        this._id = id;\r\n        this._response_time_in_millis = response_time_in_millis;\r\n        this._specific_second_of_communication = specific_second_of_communication;\r\n        this._version_response = version_response;\r\n        this._size = size;\r\n        this._request_timestamp = request_timestamp;\r\n    }\r\n\r\n    get response_time_in_millis(): number {\r\n        return this._response_time_in_millis;\r\n    }\r\n\r\n    set response_time_in_millis(value: number) {\r\n        this._response_time_in_millis = value;\r\n    }\r\n\r\n    get specific_second_of_communication(): number {\r\n        return this._specific_second_of_communication;\r\n    }\r\n\r\n    set specific_second_of_communication(value: number) {\r\n        this._specific_second_of_communication = value;\r\n    }\r\n\r\n    get version_response(): number {\r\n        return this._version_response;\r\n    }\r\n\r\n    set version_response(value: number) {\r\n        this._version_response = value;\r\n    }\r\n\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    set id(value: string) {\r\n        this._id = value;\r\n    }\r\n\r\n    get size(): number {\r\n        return this._size;\r\n    }\r\n\r\n    set size(value: number) {\r\n        this._size = value;\r\n    }\r\n\r\n\r\n    get request_timestamp(): number {\r\n        return this._request_timestamp;\r\n    }\r\n\r\n    set request_timestamp(value: number) {\r\n        this._request_timestamp = value;\r\n    }\r\n}\r\n","export class MonsterMeasurement {\r\n    private _id: string;\r\n    private _specific_second_of_communication: number;\r\n    private _request_timestamp: number;\r\n    private _response_time_in_millis: number;\r\n\r\n\r\n    constructor(id: string, specific_second_of_communication: number, request_timestamp: number, response_time_in_millis: number) {\r\n        this._id = id;\r\n        this._specific_second_of_communication = specific_second_of_communication;\r\n        this._request_timestamp = request_timestamp;\r\n        this._response_time_in_millis = response_time_in_millis;\r\n    }\r\n\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    set id(value: string) {\r\n        this._id = value;\r\n    }\r\n\r\n    get specific_second_of_communication(): number {\r\n        return this._specific_second_of_communication;\r\n    }\r\n\r\n    set specific_second_of_communication(value: number) {\r\n        this._specific_second_of_communication = value;\r\n    }\r\n\r\n    get request_timestamp(): number {\r\n        return this._request_timestamp;\r\n    }\r\n\r\n    set request_timestamp(value: number) {\r\n        this._request_timestamp = value;\r\n    }\r\n\r\n\r\n    get response_time_in_millis(): number {\r\n        return this._response_time_in_millis;\r\n    }\r\n\r\n    set response_time_in_millis(value: number) {\r\n        this._response_time_in_millis = value;\r\n    }\r\n}\r\n","import Phaser from \"phaser\";\r\nimport {MainSceneComponent} from \"../scene/main-scene.component\";\r\n\r\nexport class Player extends Phaser.Physics.Arcade.Sprite {\r\n    public nickname: string;\r\n    private _positionX: number;\r\n    private _positionY: number;\r\n    private _score: number;\r\n    private _version: number;\r\n    public static SPEED = 200;\r\n\r\n    constructor(scene: MainSceneComponent, x: number, y: number, texture: string, score: number, version: number) {\r\n        super(scene, x, y, texture);\r\n\r\n        // Dodanie gracza do sceny (zeby w ogole byl widoczny)\r\n        scene.add.existing(this);\r\n\r\n        // Dodanie gracza do fizyki co pozwala na ustawianie interakcji\r\n        scene.physics.add.existing(this);\r\n\r\n        // Dodanie kolidera na graczu oraz warstwie\r\n        scene.physics.add.collider(this, scene.backgroundLayer);\r\n\r\n        // scene.anims.play('myUp');\r\n\r\n        this._score = score;\r\n        this._version = version;\r\n    }\r\n\r\n    get score(): number {\r\n        return this._score;\r\n    }\r\n\r\n    set score(value: number) {\r\n        this._score = value;\r\n    }\r\n\r\n    get positionX(): number {\r\n        return this._positionX;\r\n    }\r\n\r\n    set positionX(value: number) {\r\n        this._positionX = value;\r\n    }\r\n\r\n    get positionY(): number {\r\n        return this._positionY;\r\n    }\r\n\r\n    set positionY(value: number) {\r\n        this._positionY = value;\r\n    }\r\n\r\n    get version(): number {\r\n        return this._version;\r\n    }\r\n\r\n    set version(value: number) {\r\n        this._version = value;\r\n    }\r\n}\r\n","export class Request {\r\n    private _id: number;\r\n    private _x: number;\r\n    private _y: number;\r\n\r\n    constructor(id: number, x: number, y: number) {\r\n        this._id = id;\r\n        this._x = x;\r\n        this._y = y;\r\n    }\r\n\r\n\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    set id(value: number) {\r\n        this._id = value;\r\n    }\r\n\r\n    get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    set x(value: number) {\r\n        this._x = value;\r\n    }\r\n\r\n    get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    set y(value: number) {\r\n        this._y = value;\r\n    }\r\n}\r\n","import {Component, Injectable, Renderer2} from '@angular/core';\r\nimport Phaser from 'phaser';\r\nimport {Router} from \"@angular/router\";\r\nimport {Player} from \"../model/Player\";\r\nimport {interval, Observable, Subscription} from \"rxjs\";\r\nimport {DownloadService} from \"../downloader/download.service\";\r\nimport Group = Phaser.Physics.Arcade.Group;\r\nimport {Communicator} from \"../communication/Communicator\";\r\nimport {Direction} from \"../communication/Direction\";\r\nimport {SocketClientState} from \"../communication/SocketClientState\";\r\nimport {RequestCacheService} from \"../cache/request-cache.service\";\r\nimport {Request} from \"../model/Request\";\r\nimport {AdditionalData} from \"../communication/simulation/data/AdditionalData\";\r\nimport {environment} from \"../../environments/environment\";\r\n\r\n@Component({\r\n    selector: 'app-main-scene',\r\n    providers: [\r\n        {\r\n            provide: Communicator,\r\n            useClass: environment.serviceToCommunication\r\n        }\r\n    ],\r\n    templateUrl: './main-scene.component.html',\r\n    styleUrls: ['./main-scene.component.css']\r\n})\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class MainSceneComponent extends Phaser.Scene {\r\n    // Additional data for testing changing data size\r\n    private readonly arrayWithAdditionalData: Array<AdditionalData>;\r\n    private numberOfAdditionalObjectsPerSecond;\r\n\r\n    // Sending message frequency\r\n    private readonly SENDING_SPEED: number;\r\n\r\n    // Phaser 3 objects\r\n    private board: Phaser.Tilemaps.Tilemap;\r\n\r\n    private pathLayer: Phaser.Tilemaps.DynamicTilemapLayer;\r\n    private _backgroundLayer: Phaser.Tilemaps.DynamicTilemapLayer;\r\n    private coinLayer: Phaser.Types.Tilemaps.TiledObject[];\r\n\r\n    private pacmanObjects: Phaser.Tilemaps.Tileset;\r\n    private coin: Phaser.Tilemaps.Tileset;\r\n\r\n    private exitButton: Phaser.GameObjects.Image;\r\n    private downloadButton: Phaser.GameObjects.Image;\r\n    private cursorKeys: Phaser.Types.Input.Keyboard.CursorKeys;\r\n\r\n    private coins: Group;\r\n\r\n    // Subscriptions\r\n    ifJoinToGameSubscription?: Subscription;\r\n    stateSubscription?: Subscription;\r\n    playersToAddSubscription?: Subscription;\r\n    playerToRemoveSubscription?: Subscription;\r\n    playerToUpdateSubscription?: Subscription;\r\n    monsterToUpdateSubscription?: Subscription;\r\n    positionSenderSubscription?: Subscription;\r\n    coinToGetSubscription?: Subscription;\r\n    updateScoreSubscription?: Subscription;\r\n    refreshCoinsSubscription?: Subscription;\r\n    subscriptionUpdateTop3?: Subscription;\r\n\r\n    // Game objects\r\n    private players: Map<string, any> = new Map<string, Player>();\r\n    private monsters: Map<number, Phaser.GameObjects.Sprite> = new Map<number, Phaser.GameObjects.Sprite>();\r\n    private rank = new Array<Player>();\r\n    private myPlayerName: string;\r\n\r\n    // Sending objects\r\n    private startSendingPlayerPosition = false;\r\n\r\n    private positionSender: Observable<number>;\r\n    private lastX: number;\r\n    private lastY: number;\r\n    private lastAngle: number;\r\n    private counterRequest: number = 0;\r\n\r\n    // Score table objects\r\n    private yourScore: any;\r\n    private scoreRanking: Map<string, any> = new Map<string, any>();\r\n    private scoreNumber1: any;\r\n    private scoreNumber2: any;\r\n    private scoreNumber3: any;\r\n\r\n    constructor(\r\n        private websocketService: Communicator,\r\n        private router: Router,\r\n        private renderer: Renderer2,\r\n        private downloadService: DownloadService,\r\n        private requestCache: RequestCacheService\r\n    ) {\r\n        super({key: 'main'});\r\n\r\n        if (this.router.getCurrentNavigation().extras.state) {\r\n            this.myPlayerName = this.router.getCurrentNavigation().extras.state.nick;\r\n            this.SENDING_SPEED = this.router.getCurrentNavigation().extras.state.speed;\r\n            this.websocketService.myNickname = this.myPlayerName;\r\n            this.websocketService.serverUrl = this.router.getCurrentNavigation().extras.state.serverUrl;\r\n            this.websocketService.formatter = this.router.getCurrentNavigation().extras.state.formatter;\r\n            this.numberOfAdditionalObjectsPerSecond =  Number(this.router.getCurrentNavigation().extras.state.additionalObjects);\r\n            this.arrayWithAdditionalData = new Array<AdditionalData>(\r\n                Number(this.router.getCurrentNavigation().extras.state.additionalObjects)\r\n            );\r\n        } else {\r\n            this.router.navigate(['home']);\r\n        }\r\n    }\r\n\r\n    startGame() {\r\n        this.websocketService.initializeConnection();\r\n\r\n        // for (let i = 0; i < this.arrayWithAdditionalData.length; i++) {\r\n        //     this.arrayWithAdditionalData[i] = new AdditionalData(this.getRandomInt(20000, 99999), this.getRandomInt(20000, 99999), this.getRandomInt(20000, 99999),\r\n        //         this.randomString(20, '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'));\r\n        // }\r\n\r\n        this.stateSubscription = this.websocketService.getState().subscribe(state => {\r\n            if (state === SocketClientState.CONNECTED) {\r\n                this.ifJoinToGameSubscription = this.websocketService.getIfJoinGame().subscribe((currentCoinPosition) => {\r\n                    if (currentCoinPosition.length > 0) {\r\n                        for (const coinPosition of currentCoinPosition) {\r\n                            this.coins.create((coinPosition.positionX * 32) + 16, (coinPosition.positionY * 32) - 16, \"coin\", null, true, true);\r\n                        }\r\n                        this.websocketService.addPlayer(this.myPlayerName);\r\n                    } else if (currentCoinPosition.length === 0) {\r\n                        document.getElementsByTagName('canvas').item(0).remove();\r\n                        this.router.navigate(['home'], {state: {nick: this.myPlayerName}});\r\n                        console.error('Juz taki nick istnieje nie mozna dolaczyc!');\r\n                    }\r\n                })\r\n                this.websocketService.joinToGame(this.myPlayerName);\r\n                console.error('Nawiazalem polaczenie websocket i dodalem uzytkownika!');\r\n            } else if (state === SocketClientState.ERROR) {\r\n                this.notifyAboutError('Błąd: Brak połaczenia z serwerem');\r\n            } else {\r\n                console.error('Probuje nawiazac polaczenie!')\r\n            }\r\n        })\r\n    }\r\n\r\n    create() {\r\n        this.startGame();\r\n\r\n        const updateTop3 = interval(1000);\r\n        this.subscriptionUpdateTop3 = updateTop3.subscribe(() => {\r\n            this.checkRanking();\r\n        });\r\n\r\n        // Jeszcze trzeba zaimplementowac\r\n        this.coinToGetSubscription = this.websocketService.getCoinToGet().subscribe((coinToCollect) => {\r\n        });\r\n\r\n        this.updateScoreSubscription = this.websocketService.getUpdateScore().subscribe((myScore) => {\r\n            this.players.get(this.myPlayerName).score = myScore;\r\n            this.yourScore.setText(this.myPlayerName + \" score: \" + myScore);\r\n        });\r\n\r\n        this.refreshCoinsSubscription = this.websocketService.getRefreshCoins().subscribe(() => {\r\n            this.coinLayer.forEach(object => {\r\n                let obj = this.coins.create(object.x + 16, object.y - 16, \"coin\");\r\n                obj.setScale(object.width / 32, object.height / 32);\r\n                obj.body.width = object.width;\r\n                obj.body.height = object.height;\r\n            });\r\n        });\r\n\r\n        this.managePlayersInGame();\r\n        this.manageMonstersInGame();\r\n\r\n        console.error('Create Board');\r\n        this.game.loop.targetFps = 50\r\n        this.physics.world.setFPS(50)\r\n        console.error('---------------- Wyswietlam informacje o grze ---------------');\r\n        console.error('FPS actual: ' + this.game.loop.actualFps);\r\n        console.error('FPS physics.world ' + this.physics.world.fps);\r\n        console.error('---------------------------------------------');\r\n\r\n        this.createAnimationsBySpriteKey('my-player', 'myAnim');\r\n        this.createAnimationsBySpriteKey('other-player', 'enemyAnim');\r\n        this.anims.create({\r\n            key: 'animation',\r\n            frames: this.anims.generateFrameNumbers('monster', {frames: [0, 7]}),\r\n            frameRate: 2,\r\n            repeat: -1\r\n        });\r\n\r\n        this.board = this.add.tilemap('board');\r\n\r\n        this.pacmanObjects = this.board.addTilesetImage('pacman-elements');\r\n        this.coin = this.board.addTilesetImage('coin');\r\n\r\n        this.pathLayer = this.board.createDynamicLayer('path', [this.pacmanObjects], 0, 0);\r\n        this._backgroundLayer = this.board.createDynamicLayer('background_main', [this.pacmanObjects], 0, 0);\r\n        this.coinLayer = this.board.getObjectLayer('objectLayer')['objects'];\r\n\r\n        this.exitButton = this.add.image(this.game.canvas.width - 48, 48, 'exit-button');\r\n        this.exitButton.setInteractive();\r\n        this.exitButton.on('pointerup', () => {\r\n            this.switchScene();\r\n        });\r\n\r\n        this.downloadButton = this.add.image(this.game.canvas.width - 208, 48, 'download-button');\r\n        this.downloadButton.setInteractive();\r\n        this.downloadButton.on('pointerup', () => {\r\n            this.downloadService.downloadResponseMeasurements();\r\n        });\r\n\r\n        // Dodanie kolizji dla elementow warstwy background o id od 150 do 250 (te id znajduja sie w tileset ktory sklada sie na te warstwe)\r\n        this._backgroundLayer.setCollisionBetween(140, 250);\r\n\r\n        this.cursorKeys = this.input.keyboard.createCursorKeys();\r\n\r\n        this.coins = this.physics.add.group();\r\n\r\n        this.scoreNumber1 = this.add.text(700, 32, '-', {\r\n            font: \"30px Arial\",\r\n            fill: \"#0022ff\",\r\n            align: \"center\"\r\n        });\r\n        this.scoreNumber2 = this.add.text(1100, 32, '-', {\r\n            font: \"30px Arial\",\r\n            fill: \"#0022ff\",\r\n            align: \"center\"\r\n        });\r\n        this.scoreNumber3 = this.add.text(400, 32, '-', {\r\n            font: \"30px Arial\",\r\n            fill: \"#0022ff\",\r\n            align: \"center\"\r\n        });\r\n\r\n        console.error('Completed Board');\r\n    }\r\n\r\n    preload() {\r\n        this.load.image('pacman-elements', 'assets/main/images/pacmanObjects.png');\r\n        this.load.image('coin', 'assets/main/images/coin.png');\r\n\r\n        this.load.image('exit-button', 'assets/main/images/exit-button.png');\r\n        this.load.image('download-button', 'assets/main/images/download-button.png');\r\n\r\n        this.load.spritesheet('my-player', 'assets/main/images/my-player.png', {frameWidth: 32, frameHeight: 32});\r\n        this.load.spritesheet('other-player', 'assets/main/images/enemie.png', {frameWidth: 32, frameHeight: 32});\r\n        this.load.spritesheet('monster', 'assets/main/images/monster.png', {frameWidth: 32, frameHeight: 32});\r\n\r\n        this.load.tilemapTiledJSON('board', 'assets/main/map/board.json');\r\n    }\r\n\r\n    update() {\r\n        if (this.startSendingPlayerPosition) {\r\n            this.movePlayerManager();\r\n        }\r\n    }\r\n\r\n    collectCoin(player: Player, coin) {\r\n        coin.destroy(coin.x, coin.y);\r\n        return false;\r\n    }\r\n\r\n    managePlayersInGame() {\r\n        this.playersToAddSubscription = this.websocketService.getPlayersToAdd().subscribe((playersToAdd: Array<Player>) => {\r\n            playersToAdd.sort((a, b) => {\r\n                return b.score - a.score\r\n            });\r\n\r\n            this.rank.length = 4;\r\n            this.scoreNumber1.setText(\"NO_ONE\");\r\n            this.scoreNumber2.setText(\"NO_ONE\");\r\n            this.scoreNumber3.setText(\"NO_ONE\");\r\n            let counter = 0;\r\n            for (const player of playersToAdd) {\r\n                counter++;\r\n                if (counter < 4) {\r\n                    this.rank[counter - 1] = player\r\n                    this.setScoreText(counter, player);\r\n                }\r\n\r\n                if (!this.players.has(player.nickname)) {\r\n                    if (player.nickname !== this.myPlayerName) {\r\n                        this.players.set(player.nickname, new Player(this, player.positionX, player.positionY, 'other-player', player.score, -1));\r\n                        console.error('Dodaje gracza ' + player.nickname)\r\n                        this.players.get(player.nickname).anims.play('enemyAnim');\r\n                    } else {\r\n                        this.players.set(player.nickname, new Player(this, player.positionX, player.positionY, 'my-player', player.score, -1));\r\n                        this.startSendingPlayerPosition = true;\r\n                        this.yourScore = this.add.text(32, 32, this.myPlayerName + \" score: \" + player.score, {\r\n                            font: \"30px Arial\",\r\n                            fill: \"#ff0044\",\r\n                            align: \"center\"\r\n                        });\r\n\r\n                        // Uruchomienie animacji wczesniej przygotowanej\r\n                        this.players.get(player.nickname).anims.play('myAnim');\r\n                        this.requestCache.lastCorrectRequest = new Request(0, player.positionX, player.positionY);\r\n                        this.requestCache.timeForStartCommunication = new Date().getTime();\r\n                        this.sendPlayerPosition();\r\n                    }\r\n                    this.physics.add.overlap(this.players.get(player.nickname), this.coins, this.collectCoin, null, this);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.playerToRemoveSubscription = this.websocketService.getPlayerToRemove().subscribe((playerToRemove: Player) => {\r\n            this.rank = this.rank.filter(item => item.nickname !== playerToRemove.nickname);\r\n\r\n            if (playerToRemove.nickname === this.myPlayerName) {\r\n                this.cleanAndBackToHomePage();\r\n            }\r\n            this.players.get(playerToRemove.nickname).destroy(true);\r\n            this.players.delete(playerToRemove.nickname);\r\n        });\r\n\r\n        this.playerToUpdateSubscription = this.websocketService.getPlayerToUpdate().subscribe((player) => {\r\n            let currentPlayer: Player = this.players.get(player.nickname);\r\n\r\n            if (currentPlayer) {\r\n                this.changeAnimationFrameForOtherPlayers(player, currentPlayer);\r\n                if (currentPlayer.version <= player.version) {\r\n                    currentPlayer.x = player.positionX;\r\n                    currentPlayer.y = player.positionY;\r\n                    currentPlayer.score = player.score;\r\n                    currentPlayer.version = player.version;\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    sendPlayerPosition() {\r\n        // const player = this.players.get(this.myPlayerName);\r\n        // this.lastX = player.x;\r\n        // this.lastY = player.y;\r\n        // this.lastAngle = player.angle;\r\n\r\n        const supplier = interval(1000);\r\n        supplier.subscribe(() => {\r\n            for (let i = 0; i < this.numberOfAdditionalObjectsPerSecond; i++) {\r\n                this.arrayWithAdditionalData.push(new AdditionalData(this.getRandomInt(20000,99999),this.getRandomInt(20000,99999),this.getRandomInt(20000,99999),\r\n                    this.randomString(20, '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')));\r\n            }\r\n        });\r\n\r\n\r\n        this.positionSender = interval(this.SENDING_SPEED);\r\n        this.positionSenderSubscription = this.positionSender.subscribe(() => {\r\n            const player: Player = this.players.get(this.myPlayerName);\r\n            // if ((this.lastX !== player.x) ||\r\n            //     (this.lastY !== player.y) ||\r\n            //     (this.lastAngle !== player.angle)) {\r\n            //\r\n            //     this.lastX = player.x;\r\n            //     this.lastY = player.y;\r\n            //     this.lastAngle = player.angle;\r\n\r\n            this.requestCache.addRequest(++this.counterRequest, player.x, player.y);\r\n\r\n            this.websocketService.sendPosition({\r\n                \"nickname\": this.myPlayerName,\r\n                \"positionX\": player.x,\r\n                \"positionY\": player.y,\r\n                \"score\": player.score,\r\n                \"stepDirection\": this.getDirection(),\r\n                \"version\": this.counterRequest,\r\n                \"additionalData\": this.arrayWithAdditionalData\r\n            });\r\n            // }\r\n        });\r\n    }\r\n\r\n    randomString(length, chars) {\r\n        let result = '';\r\n        for (let i = length; i > 0; --i) {\r\n            result += chars[Math.floor(Math.random() * chars.length)];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getRandomInt(min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n\r\n    setScoreText(number, player) {\r\n        switch (number) {\r\n            case 1: {\r\n                this.scoreNumber1.setText(player.nickname + \" score: \" + player.score);\r\n                this.scoreRanking.set(player.nickname, this.scoreNumber1);\r\n                this.scoreNumber2.setText(\"-\");\r\n                this.scoreNumber3.setText(\"-\");\r\n                break;\r\n            }\r\n            case 2: {\r\n                this.scoreNumber2.setText(player.nickname + \" score: \" + player.score);\r\n                this.scoreRanking.set(player.nickname, this.scoreNumber2);\r\n                this.scoreNumber3.setText(\"-\");\r\n                break;\r\n            }\r\n            case 3: {\r\n                this.scoreNumber3.setText(player.nickname + \" score: \" + player.score);\r\n                this.scoreRanking.set(player.nickname, this.scoreNumber3);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    checkRanking() {\r\n        let playersArray = new Array<Player>();\r\n        this.players.forEach((value: Player, key: string) => {\r\n            value.nickname = key;\r\n            playersArray.push(value);\r\n        });\r\n\r\n        playersArray = playersArray.sort((a, b) => b.score - a.score);\r\n\r\n        let counter = 1\r\n        playersArray.forEach(element => {\r\n            this.setScoreText(counter, element);\r\n            counter++;\r\n            if (counter > 3) {\r\n                return;\r\n            }\r\n        })\r\n    }\r\n\r\n    movePlayerManager() {\r\n        if (this.cursorKeys.left.isDown === true) {\r\n            this.players.get(this.myPlayerName).setVelocity(-Player.SPEED, 0);\r\n            this.players.get(this.myPlayerName).setAngle(270);\r\n        } else if (this.cursorKeys.right.isDown === true) {\r\n            this.players.get(this.myPlayerName).setVelocity(Player.SPEED, 0);\r\n            this.players.get(this.myPlayerName).setAngle(90);\r\n        } else if (this.cursorKeys.up.isDown === true) {\r\n            this.players.get(this.myPlayerName).setVelocity(0, -Player.SPEED);\r\n            this.players.get(this.myPlayerName).setAngle(0);\r\n        } else if (this.cursorKeys.down.isDown === true) {\r\n            this.players.get(this.myPlayerName).setVelocity(0, Player.SPEED);\r\n            this.players.get(this.myPlayerName).setAngle(180);\r\n        }\r\n    }\r\n\r\n    manageMonstersInGame() {\r\n        this.monsterToUpdateSubscription = this.websocketService.getMonsterToUpdate().subscribe((monsterToUpdate) => {\r\n            if (this.monsters.has(monsterToUpdate.id)) {\r\n                this.monsters.get(monsterToUpdate.id).x = monsterToUpdate.positionX;\r\n                this.monsters.get(monsterToUpdate.id).y = monsterToUpdate.positionY;\r\n            } else {\r\n                this.monsters.set(monsterToUpdate.id, this.physics.add.sprite(monsterToUpdate.positionX, monsterToUpdate.positionY, 'monster'));\r\n                this.monsters.get(monsterToUpdate.id).anims.play('animation')\r\n            }\r\n        })\r\n    }\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    createAnimationsBySpriteKey(figureKey: string, animKey: string) {\r\n        this.anims.create({\r\n            key: animKey,\r\n            frames: this.anims.generateFrameNumbers(figureKey, {frames: [3, 1]}),\r\n            frameRate: 5,\r\n            repeat: -1\r\n        });\r\n    }\r\n\r\n    changeAnimationFrameForOtherPlayers(playerToUpdate: Player, currentPlayer: Player) {\r\n        if (this.myPlayerName !== playerToUpdate.nickname) {\r\n            if (currentPlayer.x < playerToUpdate.positionX) {\r\n                currentPlayer.setAngle(90);\r\n            }\r\n            if (currentPlayer.x > playerToUpdate.positionX) {\r\n                currentPlayer.setAngle(270);\r\n            }\r\n            if (currentPlayer.y < playerToUpdate.positionY) {\r\n                currentPlayer.setAngle(0);\r\n            }\r\n            if (currentPlayer.y > playerToUpdate.positionY) {\r\n                currentPlayer.setAngle(180);\r\n            }\r\n        }\r\n    }\r\n\r\n    getDirection() {\r\n        switch (this.players.get(this.myPlayerName).angle) {\r\n            case 90: {\r\n                return Direction.HORIZON;\r\n            }\r\n            case -180: {\r\n                return Direction.VERTICAL;\r\n            }\r\n            case -90: {\r\n                return Direction.HORIZON;\r\n            }\r\n            case 0: {\r\n                return Direction.VERTICAL;\r\n            }\r\n        }\r\n    }\r\n\r\n    get backgroundLayer(): Phaser.Tilemaps.DynamicTilemapLayer {\r\n        return this._backgroundLayer;\r\n    }\r\n\r\n    ////////////////////////////////////            Cleaning operations             ////////////////////////////////////////////////\r\n\r\n    switchScene() {\r\n        this.cleanAndBackToHomePage();\r\n    }\r\n\r\n    cleanAndBackToHomePage() {\r\n        this.startSendingPlayerPosition = false;\r\n        this.myPlayerName = '';\r\n        this.router.navigate(['home'], {});\r\n    }\r\n\r\n    notifyAboutError(errorMessage) {\r\n        this.router.navigate(['home'], {state: {message: errorMessage}});\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.ifJoinToGameSubscription && this.stateSubscription &&\r\n            this.playersToAddSubscription && this.playerToRemoveSubscription &&\r\n            this.playerToUpdateSubscription && this.monsterToUpdateSubscription &&\r\n            this.positionSenderSubscription && this.coinToGetSubscription &&\r\n            this.updateScoreSubscription && this.refreshCoinsSubscription &&\r\n            this.subscriptionUpdateTop3\r\n        ) {\r\n            console.error('OnDestory')\r\n            this.counterRequest = 0;\r\n            this.ifJoinToGameSubscription.unsubscribe();\r\n            this.stateSubscription.unsubscribe();\r\n            this.playersToAddSubscription.unsubscribe();\r\n            this.playerToRemoveSubscription.unsubscribe();\r\n            this.playerToUpdateSubscription.unsubscribe();\r\n            this.monsterToUpdateSubscription.unsubscribe();\r\n            this.positionSenderSubscription.unsubscribe();\r\n            this.coinToGetSubscription.unsubscribe();\r\n            this.updateScoreSubscription.unsubscribe();\r\n            this.refreshCoinsSubscription.unsubscribe();\r\n            this.subscriptionUpdateTop3.unsubscribe();\r\n            this.websocketService.disconnect();\r\n        }\r\n        if (this.game) {\r\n            this.game.destroy(true);\r\n            this.game.scene.remove('main');\r\n        }\r\n    }\r\n}\r\n","<app-game></app-game>\r\n","import {WebsocketService} from \"../app/communication/websocket/websocket.service\";\r\nimport {JsonFormatter} from \"../app/communication/format/JsonFormatter\";\r\n\r\nexport const environment = {\r\n    production: false,\r\n    serviceToCommunication: WebsocketService,\r\n    formatter: new JsonFormatter(),\r\n    versionName: 'Websocket',\r\n    contentFormat: 'json',\r\n    vpsServerUrl: 'ws://83.229.84.77:8080/socket',\r\n    localServerUrl: 'ws://localhost:8080/socket'\r\n\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}