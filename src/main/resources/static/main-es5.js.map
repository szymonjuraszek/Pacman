{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///global-config.ts","webpack:///proto/generated/proto/coin_pb.js","webpack:///proto/generated/proto/monster_pb.js","webpack:///proto/generated/proto/player_pb.js","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cache/measurement.service.ts","webpack:///src/app/cache/request-cache.service.ts","webpack:///src/app/communication/Communicator.ts","webpack:///src/app/communication/Direction.ts","webpack:///src/app/communication/SocketClientState.ts","webpack:///src/app/communication/format/JsonFormatter.ts","webpack:///src/app/communication/format/ProtobufFormatter.ts","webpack:///src/app/communication/websocket/websocket.service.ts","webpack:///src/app/downloader/download.service.ts","webpack:///src/app/game/game.component.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/http/http.service.ts","webpack:///src/app/model/MeasurementResponse.ts","webpack:///src/app/model/Player.ts","webpack:///src/app/model/Request.ts","webpack:///src/app/scenes/main-scene/main-scene.component.ts","webpack:///src/app/scenes/main-scene/main-scene.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","CSV_RESPONSE_HEADERS","HTTP_URL_DOWNLOAD","HTTP_URL_MAIN","WEBSOCKET_URL_MAIN","RSOCKET_URL_MAIN","SERIALIZER_DATA","SERIALIZER_METADATA","DATA_MIME_TYPE","jspb","goog","global","Function","exportSymbol","proto","CoinProto","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","positionX","getFieldWithDefault","positionY","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readInt32","setPositionX","setPositionY","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getPositionX","writeInt32","getPositionY","setProto3IntField","object","extend","MonsterProto","previousDirection","timestamp","setId","readString","setPreviousDirection","setTimestamp","getId","getPreviousDirection","length","writeString","getTimestamp","setProto3StringField","PlayerProto","nickname","score","stepDirection","version","setNickname","setScore","setStepDirection","setVersion","getNickname","getScore","getStepDirection","getVersion","routes","path","component","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","MeasurementService","measurements","Array","responseTimeInMillis","requestTimestamp","push","providedIn","RequestCacheService","requests","x","y","enqueue","request","front","dequeue","lastCorrectRequest","console","error","_lastCorrectRequest","_nickname","Communicator","serverUrl","playersToAdd","playerToRemove","playerToUpdate","monsterToUpdate","ifJoinGame","coinToGet","updateScore","refreshCoin","state","asObservable","_myNickname","Direction","SocketClientState","JsonFormatter","data","JSON","parse","body","ProtobufFormatter","binaryBody","playerProto","WebsocketService","measurementService","requestCache","variable","makeid","setFormatter","ATTEMPTING","stompClient","brokerURL","debug","str","log","splitLargeFrames","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","onConnect","frame","subscribe","gameToAddPlayer","next","formatter","decodePlayer","parsedPlayer","Date","getTime","Number","headers","addMeasurementResponse","myNickname","getRequest","monster","monsterParsed","decodeMonster","coinPosition","decodeCoin","currentCoinPosition","getCorrectedPosition","allCoinPosition","CONNECTED","onStompError","activate","deactivate","dataToSend","dataWithSpecificFormat","encode","publish","destination","stringify","toString","result","characters","charactersLength","i","charAt","Math","floor","random","DownloadService","cacheMeasurement","httpService","RESPONSE_FILE","REQUEST_FILE","_rsocketObject","requestResponse","metadata","String","fromCharCode","onComplete","payload","downloadRequestFile","onError","onSubscribe","cancel","downloadMeasurements","downloadResponseFile","getResponseMeasurements","blob","Blob","type","url","window","URL","createObjectURL","anchor","document","createElement","download","href","appendChild","click","removeChild","replacer","key","header","csv","map","row","fieldName","join","toUpperCase","unshift","csvArray","GameComponent","mainScene","config","AUTO","height","width","scale","mode","Scale","FIT","autoCenter","CENTER_BOTH","scene","parent","physics","arcade","gravity","fps","target","forceSetTimeOut","phaserGame","Game","add","start","HomeComponent","router","getCurrentNavigation","extras","answer","nick","navigate","startGame","HttpService","httpClient","append","get","observe","responseType","MeasurementResponse","response_time_in_millis","request_timestamp","version_response","_id","_response_time_in_millis","_request_timestamp","_version_response","Player","texture","existing","collider","backgroundLayer","_score","_positionX","_positionY","_version","Physics","Arcade","Sprite","SPEED","Request","_x","_y","MainSceneComponent","websocketService","elementRef","downloadService","additionalData","randomString","arrayWithAdditionalData","players","Map","monsters","rank","startSendingPlayerPosition","counterRequest","scoreRanking","myPlayerName","initializeConnection","stateSubscription","getState","ifJoinToGameSubscription","getIfJoinGame","coins","create","addPlayer","getElementsByTagName","item","remove","joinToGame","ERROR","cleanAndBackToHomePage","updateTop3","subscriptionUpdateTop3","checkRanking","coinToGetSubscription","getCoinToGet","coinToCollect","updateScoreSubscription","getUpdateScore","myScore","yourScore","setText","refreshCoinsSubscription","getRefreshCoins","coinLayer","forEach","setScale","managePlayersInGame","manageMonstersInGame","game","loop","targetFps","world","setFPS","actualFps","createAnimationsBySpriteKey","anims","frames","generateFrameNumbers","frameRate","repeat","board","tilemap","pacmanObjects","addTilesetImage","coin","pathLayer","createDynamicLayer","_backgroundLayer","getObjectLayer","exitButton","image","canvas","setInteractive","on","switchScene","downloadButton","downloadResponseMeasurements","setCollisionBetween","cursorKeys","input","keyboard","createCursorKeys","group","scoreNumber1","text","font","fill","align","scoreNumber2","scoreNumber3","removeCallback","load","spritesheet","frameWidth","frameHeight","tilemapTiledJSON","movePlayerManager","player","destroy","playersToAddSubscription","getPlayersToAdd","sort","a","b","counter","setScoreText","has","set","play","sendPlayerPosition","overlap","collectCoin","playerToRemoveSubscription","getPlayerToRemove","filter","playerToUpdateSubscription","getPlayerToUpdate","currentPlayer","changeAnimationFrameForOtherPlayers","lastX","lastY","lastAngle","angle","positionSender","positionSenderSubscription","addRequest","sendPosition","getDirection","callback","factor","times","internalCallback","tick","setTimeout","chars","number","playersArray","element","left","isDown","setVelocity","setAngle","right","up","down","monsterToUpdateSubscription","getMonsterToUpdate","sprite","unsubscribe","disconnect","nativeElement","figureKey","animKey","HORIZON","VERTICAL","Scene","provide","useClass","serviceToCommunication","environment","production","download_measurement_rsocket","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","'use strict';\r\n\r\nimport {IdentitySerializer, JsonSerializer} from 'rsocket-core';\r\n\r\n// Defined data which will be saved into response file (not modify)\r\nexport const CSV_RESPONSE_HEADERS = ['id', 'response_time_in_millis', 'request_timestamp', 'version_response'];\r\n\r\n//-----------------------   Global options for application which you can modify    -------------------------\r\n// 1) URLS\r\n// URL for measurement file (request file)\r\n// export const HTTP_URL_DOWNLOAD = 'https://localhost:8080/report/measurement';\r\nexport const HTTP_URL_DOWNLOAD = 'https://pacman-websocket.herokuapp.com/report/measurement';\r\n// domain for server (http2)\r\n// export const HTTP_URL_MAIN = 'https://localhost:8080';\r\nexport const HTTP_URL_MAIN = 'https://http2-pacman.herokuapp.com';\r\n// websocket(stomp) URL for connection\r\n// export const WEBSOCKET_URL_MAIN = 'ws://localhost:8080/socket';\r\nexport const WEBSOCKET_URL_MAIN = 'wss://pacman-websocket.herokuapp.com/socket';\r\n// rsocket(websocket) URL for connection\r\nexport const RSOCKET_URL_MAIN =  'ws://localhost:8080/rsocket';\r\n// export const RSOCKET_URL_MAIN =  'wss://pacman-rsocket.herokuapp.com/rsocket';\r\n\r\n// 3) Serializer for RSocket\r\nexport const SERIALIZER_DATA = JsonSerializer\r\nexport const SERIALIZER_METADATA = IdentitySerializer\r\nexport const DATA_MIME_TYPE = 'application/json'\r\n","// source: proto/coin.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.CoinProto', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CoinProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CoinProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CoinProto.displayName = 'proto.CoinProto';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CoinProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.CoinProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CoinProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CoinProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    positionX: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    positionY: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CoinProto}\n */\nproto.CoinProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CoinProto;\n  return proto.CoinProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CoinProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CoinProto}\n */\nproto.CoinProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionX(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionY(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CoinProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CoinProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CoinProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CoinProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPositionX();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getPositionY();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 position_x = 1;\n * @return {number}\n */\nproto.CoinProto.prototype.getPositionX = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinProto} returns this\n */\nproto.CoinProto.prototype.setPositionX = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 position_y = 2;\n * @return {number}\n */\nproto.CoinProto.prototype.getPositionY = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinProto} returns this\n */\nproto.CoinProto.prototype.setPositionY = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","// source: proto/monster.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.MonsterProto', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.MonsterProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.MonsterProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.MonsterProto.displayName = 'proto.MonsterProto';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.MonsterProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.MonsterProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.MonsterProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.MonsterProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    positionX: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    positionY: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    previousDirection: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.MonsterProto}\n */\nproto.MonsterProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.MonsterProto;\n  return proto.MonsterProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.MonsterProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.MonsterProto}\n */\nproto.MonsterProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionX(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionY(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPreviousDirection(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTimestamp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.MonsterProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.MonsterProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.MonsterProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.MonsterProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getPositionX();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getPositionY();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getPreviousDirection();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.MonsterProto.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.MonsterProto} returns this\n */\nproto.MonsterProto.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 position_x = 2;\n * @return {number}\n */\nproto.MonsterProto.prototype.getPositionX = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.MonsterProto} returns this\n */\nproto.MonsterProto.prototype.setPositionX = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int32 position_y = 3;\n * @return {number}\n */\nproto.MonsterProto.prototype.getPositionY = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.MonsterProto} returns this\n */\nproto.MonsterProto.prototype.setPositionY = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional string previous_direction = 4;\n * @return {string}\n */\nproto.MonsterProto.prototype.getPreviousDirection = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.MonsterProto} returns this\n */\nproto.MonsterProto.prototype.setPreviousDirection = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional int32 timestamp = 5;\n * @return {number}\n */\nproto.MonsterProto.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.MonsterProto} returns this\n */\nproto.MonsterProto.prototype.setTimestamp = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","// source: proto/player.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.PlayerProto', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.PlayerProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.PlayerProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PlayerProto.displayName = 'proto.PlayerProto';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.PlayerProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.PlayerProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.PlayerProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PlayerProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nickname: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    positionX: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    positionY: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    score: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    stepDirection: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    version: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PlayerProto}\n */\nproto.PlayerProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PlayerProto;\n  return proto.PlayerProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PlayerProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PlayerProto}\n */\nproto.PlayerProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNickname(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionX(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionY(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setScore(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStepDirection(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setVersion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.PlayerProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.PlayerProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PlayerProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PlayerProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNickname();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPositionX();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getPositionY();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getScore();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getStepDirection();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string nickname = 1;\n * @return {string}\n */\nproto.PlayerProto.prototype.getNickname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setNickname = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional int32 position_x = 2;\n * @return {number}\n */\nproto.PlayerProto.prototype.getPositionX = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setPositionX = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int32 position_y = 3;\n * @return {number}\n */\nproto.PlayerProto.prototype.getPositionY = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setPositionY = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int32 score = 4;\n * @return {number}\n */\nproto.PlayerProto.prototype.getScore = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setScore = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional string step_direction = 5;\n * @return {string}\n */\nproto.PlayerProto.prototype.getStepDirection = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setStepDirection = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional int32 version = 6;\n * @return {number}\n */\nproto.PlayerProto.prototype.getVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setVersion = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","import {RouterModule, Routes} from \"@angular/router\";\r\nimport {NgModule} from \"@angular/core\";\r\nimport {MainSceneComponent} from \"./scenes/main-scene/main-scene.component\";\r\nimport {HomeComponent} from \"./home/home.component\";\r\n\r\nconst routes: Routes = [\r\n  {path: 'home', component: HomeComponent},\r\n  {path: 'game', component: MainSceneComponent},\r\n  {path: '**', redirectTo: 'home'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  constructor() {\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { GameComponent } from './game/game.component';\r\nimport { MainSceneComponent } from './scenes/main-scene/main-scene.component';\r\nimport {WebsocketService} from './communication/websocket/websocket.service';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {HttpService} from './http/http.service';\r\nimport {AppRoutingModule} from \"./app-routing.module\";\r\nimport {OAuthModule} from \"angular-oauth2-oidc\";\r\nimport { HomeComponent } from './home/home.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    GameComponent,\r\n    MainSceneComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    OAuthModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  providers: [WebsocketService, HttpService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Injectable} from '@angular/core';\r\nimport {MeasurementResponse} from \"../model/MeasurementResponse\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MeasurementService {\r\n\r\n    private readonly measurements = new Array<MeasurementResponse>();\r\n\r\n    addMeasurementResponse(id, responseTimeInMillis, requestTimestamp, version) {\r\n        // if (this.measurements.length > 1999) {\r\n        //     this.measurements.splice(0, 1);\r\n        // }\r\n        this.measurements.push(new MeasurementResponse(id, responseTimeInMillis, requestTimestamp, version))\r\n    }\r\n\r\n    getResponseMeasurements(): Array<MeasurementResponse> {\r\n        return this.measurements;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {MeasurementResponse} from \"../model/MeasurementResponse\";\r\nimport {Request} from \"../model/Request\";\r\nimport {Player} from \"../model/Player\";\r\nimport { Queue } from 'queue-typescript';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RequestCacheService {\r\n\r\n    private requests: Queue<Request> = new Queue<Request>();\r\n    private _lastCorrectRequest: Request;\r\n    private static _nickname: string;\r\n\r\n    addRequest(id, x, y) {\r\n        // if (this.requests.length > 1999) {\r\n        //     this.requests.splice(0, 1);\r\n        // }\r\n        this.requests.enqueue(new Request(id, x, y));\r\n    }\r\n\r\n    getRequest(id) {\r\n        if(this.requests.length > 0) {\r\n            const request = this.requests.front;\r\n\r\n            if(request.id > id) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        while (this.requests.length > 0) {\r\n            const request = this.requests.dequeue();\r\n\r\n            if(request.id === id) {\r\n                this.lastCorrectRequest = request;\r\n                return request;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getCorrectedPosition(id) {\r\n        if(this.requests.length > 0) {\r\n            const request = this.requests.front;\r\n            console.error(request);\r\n            if(request.id > id) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        while (this.requests.length > 0) {\r\n            const request = this.requests.dequeue();\r\n\r\n            if(request.id === id) {\r\n                return this.lastCorrectRequest;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get lastCorrectRequest(): Request {\r\n        return this._lastCorrectRequest;\r\n    }\r\n\r\n    set lastCorrectRequest(value: Request) {\r\n        this._lastCorrectRequest = value;\r\n    }\r\n\r\n    static set nickname(value: string) {\r\n        this._nickname = value;\r\n    }\r\n}\r\n","import {Direction} from \"./Direction\";\r\nimport {BehaviorSubject, Subject} from \"rxjs\";\r\nimport {SocketClientState} from \"./SocketClientState\";\r\nimport {Player} from \"../model/Player\";\r\nimport {Monster} from \"../model/Monster\";\r\nimport {Coin} from \"../model/Coin\";\r\n\r\nexport abstract class Communicator {\r\n    protected serverUrl;\r\n    protected state: BehaviorSubject<SocketClientState>;\r\n    private _myNickname;\r\n\r\n    protected playersToAdd = new Subject<Array<Player>>();\r\n    protected playerToRemove = new Subject<Player>();\r\n    protected playerToUpdate = new Subject<Player>();\r\n    protected monsterToUpdate = new Subject<Monster>();\r\n    protected ifJoinGame = new Subject<any>();\r\n\r\n    protected coinToGet = new Subject<Coin>();\r\n    protected updateScore = new Subject<number>();\r\n    protected refreshCoin = new Subject<Coin>();\r\n\r\n    protected constructor(serverUrl) {\r\n        this.serverUrl = serverUrl;\r\n    }\r\n\r\n    abstract initializeConnection();\r\n    abstract disconnect();\r\n    abstract sendPosition(data);\r\n    abstract joinToGame(nickname: string);\r\n    abstract addPlayer(nickname: string);\r\n\r\n\r\n    getState() {\r\n        return this.state.asObservable();\r\n    }\r\n\r\n    getPlayersToAdd() {\r\n        return this.playersToAdd.asObservable();\r\n    }\r\n\r\n    getPlayerToRemove() {\r\n        return this.playerToRemove.asObservable();\r\n    }\r\n\r\n    getPlayerToUpdate() {\r\n        return this.playerToUpdate.asObservable();\r\n    }\r\n\r\n    getMonsterToUpdate() {\r\n        return this.monsterToUpdate.asObservable();\r\n    }\r\n\r\n    getIfJoinGame() {\r\n        return this.ifJoinGame.asObservable();\r\n    }\r\n\r\n    getCoinToGet() {\r\n        return this.coinToGet.asObservable();\r\n    }\r\n\r\n    getRefreshCoins() {\r\n        return this.refreshCoin.asObservable();\r\n    }\r\n\r\n    get myNickname() {\r\n        return this._myNickname;\r\n    }\r\n\r\n    set myNickname(value) {\r\n        this._myNickname = value;\r\n    }\r\n\r\n    getUpdateScore() {\r\n        return this.updateScore.asObservable();\r\n    }\r\n}\r\n","export enum Direction {\r\n    HORIZON = \"HORIZON\",\r\n    VERTICAL = \"VERTICAL\",\r\n}\r\n","export enum SocketClientState {\r\n    CONNECTED,\r\n    ATTEMPTING,\r\n    ERROR\r\n}\r\n","import {IFormatter} from \"./IFormatter\";\r\n\r\nexport class JsonFormatter implements IFormatter {\r\n    decodeCoin(data) {\r\n        return JSON.parse(data.body);\r\n    }\r\n\r\n    decodeMonster(data) {\r\n        return JSON.parse(data.body);\r\n    }\r\n\r\n    decodePlayer(data) {\r\n        return JSON.parse(data.body);\r\n    }\r\n\r\n    encode(data) {\r\n        return data;\r\n    }\r\n\r\n    prepareNicknamePayload(nickname: string) {\r\n        return {'nickname': nickname}\r\n    }\r\n}\r\n\r\n","import {IFormatter} from \"./IFormatter\";\r\nimport {PlayerProto} from \"../../../../proto/generated/proto/player_pb\";\r\nimport {CoinProto} from \"../../../../proto/generated/proto/coin_pb\";\r\nimport {MonsterProto} from \"../../../../proto/generated/proto/monster_pb\";\r\n\r\nexport class ProtobufFormatter implements IFormatter{\r\n    decodeCoin(data) {\r\n        return CoinProto.deserializeBinary(data.binaryBody).toObject();\r\n    }\r\n\r\n    decodeMonster(data) {\r\n        return MonsterProto.deserializeBinary(data.binaryBody).toObject();\r\n    }\r\n\r\n    decodePlayer(data) {\r\n        return PlayerProto.deserializeBinary(data.binaryBody).toObject();\r\n    }\r\n\r\n    encode(data): PlayerProto {\r\n        const playerProto = new PlayerProto();\r\n        playerProto.setNickname(data.nickname);\r\n        playerProto.setPositionX(data.positionX);\r\n        playerProto.setPositionY(data.positionY);\r\n        playerProto.setScore(data.score);\r\n        playerProto.setStepDirection(data.stepDirection);\r\n        playerProto.setVersion(data.version);\r\n\r\n        return playerProto;\r\n    }\r\n\r\n    prepareNicknamePayload(nickname: string) {\r\n        return nickname;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from \"rxjs\";\r\nimport {MeasurementService} from \"../../cache/measurement.service\";\r\nimport {Communicator} from \"../Communicator\";\r\nimport {SocketClientState} from \"../SocketClientState\";\r\nimport {RequestCacheService} from \"../../cache/request-cache.service\";\r\nimport {Client, Stomp} from '@stomp/stompjs';\r\nimport * as SockJS from 'sockjs-client';\r\n\r\nimport {PlayerProto} from \"../../../../proto/generated/proto/player_pb\";\r\nimport {Player} from \"../../model/Player\";\r\nimport {IFormatter} from \"../format/IFormatter\";\r\nimport {JsonFormatter} from \"../format/JsonFormatter\";\r\nimport {ProtobufFormatter} from \"../format/ProtobufFormatter\";\r\nimport {CustomBinaryFormatter} from \"../format/CustomBinaryFormatter\";\r\n// import {environment} from \"../../../environments/environment.websocket\";\r\nimport {environment} from '../../../environments/environment';\r\nimport {WEBSOCKET_URL_MAIN} from \"../../../../global-config\";\r\n\r\n@Injectable()\r\nexport class WebsocketService extends Communicator{\r\n    // 'https://backend-pacman-app.herokuapp.com/socket'\r\n    // 'http://localhost:8080/socket'\r\n    private stompClient: Client;\r\n    private formatter: IFormatter;\r\n\r\n    constructor(\r\n        private measurementService: MeasurementService,\r\n        private requestCache: RequestCacheService,\r\n    ) {\r\n        super(WEBSOCKET_URL_MAIN);\r\n        this.setFormatter(new JsonFormatter());\r\n    }\r\n\r\n    initializeConnection() {\r\n        // const ws = new SockJS(this.serverUrl);\r\n        // this.stompClient = Stomp.over(ws);\r\n        this.state = new BehaviorSubject<SocketClientState>(SocketClientState.ATTEMPTING);\r\n\r\n        this.stompClient = new Client({\r\n            brokerURL: this.serverUrl,\r\n            debug: function (str) {\r\n                console.log(str);\r\n            },\r\n            // maxWebSocketChunkSize: 5000,\r\n            splitLargeFrames: true,\r\n            reconnectDelay: 5000,\r\n            heartbeatIncoming: 4000,\r\n            heartbeatOutgoing: 4000\r\n        });\r\n\r\n        this.stompClient.debug = () => {};\r\n\r\n        this.stompClient.onConnect = (frame) => {\r\n\r\n            console.error(frame)\r\n            this.stompClient.subscribe('/pacman/add/players', (gameToAddPlayer) => {\r\n                this.playersToAdd.next(JSON.parse(gameToAddPlayer.body));\r\n                console.error('Zaktualizowano gre, dodano gracza');\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/remove/player', (playerToRemove) => {\r\n                this.playerToRemove.next(this.formatter.decodePlayer(playerToRemove));\r\n                console.error('Zaktualizowano gre, usunieto gracza');\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/update/player', (playerToUpdate) => {\r\n                const parsedPlayer = this.formatter.decodePlayer(playerToUpdate);\r\n\r\n                const responseTimeInMillis = new Date().getTime() - Number(playerToUpdate.headers.requestTimestamp);\r\n                // console.error(\"Odpowiedz serwera \" + responseTimeInMillis + \" milliseconds\")\r\n\r\n                this.measurementService.addMeasurementResponse(parsedPlayer.nickname, responseTimeInMillis, playerToUpdate.headers.requestTimestamp, parsedPlayer.version);\r\n\r\n                if (parsedPlayer.nickname === this.myNickname) {\r\n                    const request = this.requestCache.getRequest(parsedPlayer.version);\r\n                    this.updateScore.next(parsedPlayer.score);\r\n                    if (request !== null && (request.x !== parsedPlayer.positionX || request.y !== parsedPlayer.positionY)) {\r\n                        this.playerToUpdate.next(parsedPlayer);\r\n                    }\r\n                } else {\r\n                    this.playerToUpdate.next(parsedPlayer);\r\n                }\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/update/monster', (monster) => {\r\n                const monsterParsed = this.formatter.decodeMonster(monster);\r\n                this.measurementService.addMeasurementResponse(monsterParsed.id, new Date().getTime() - Number(monster.headers.timestamp), monster.headers.timestamp,0);\r\n                this.monsterToUpdate.next(monsterParsed);\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/refresh/coins', () => {\r\n                this.refreshCoin.next();\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/get/coin', (coinPosition) => {\r\n                this.coinToGet.next(this.formatter.decodeCoin(coinPosition));\r\n            });\r\n\r\n            this.stompClient.subscribe('/user/queue/reply', (currentCoinPosition) => {\r\n                this.ifJoinGame.next(JSON.parse(currentCoinPosition.body));\r\n            });\r\n\r\n            this.stompClient.subscribe('/user/queue/player', (playerToUpdate) => {\r\n                const parsedPlayer = this.formatter.decodePlayer(playerToUpdate);\r\n\r\n                const responseTimeInMillis = new Date().getTime() - Number(playerToUpdate.headers.requestTimestamp);\r\n\r\n                this.measurementService.addMeasurementResponse(parsedPlayer.nickname, responseTimeInMillis, playerToUpdate.headers.requestTimestamp, parsedPlayer.version);\r\n\r\n                const request = this.requestCache.getCorrectedPosition(parsedPlayer.version);\r\n\r\n                if (request !== null) {\r\n                    parsedPlayer.positionX = request.x;\r\n                    parsedPlayer.positionY = request.y;\r\n                    this.playerToUpdate.next(parsedPlayer);\r\n                }\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/collision/update', (allCoinPosition) => {\r\n            });\r\n\r\n            this.state.next(SocketClientState.CONNECTED);\r\n        };\r\n\r\n        this.stompClient.onStompError = (frame) => {\r\n            console.log('Broker reported error: ' + frame.headers['message']);\r\n            console.log('Additional details: ' + frame.body);\r\n        };\r\n\r\n        this.stompClient.activate();\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    disconnect() {\r\n        console.error('Disconnected');\r\n        this.stompClient.deactivate();\r\n    }\r\n\r\n    sendPosition(dataToSend) {\r\n        const dataWithSpecificFormat = this.formatter.encode(dataToSend);\r\n        if (this.formatter instanceof JsonFormatter) {\r\n            this.stompClient.publish({\r\n                destination: '/app/send/position',\r\n                body: JSON.stringify(\r\n                    dataWithSpecificFormat\r\n                ),\r\n                headers: {\r\n                    requestTimestamp: new Date().getTime().toString()\r\n                }\r\n            });\r\n        } else if (this.formatter instanceof ProtobufFormatter) {\r\n            this.stompClient.publish({\r\n                destination: '/app/send/position/protobuf',\r\n                binaryBody: dataWithSpecificFormat.serializeBinary(),\r\n                headers: {\r\n                    /*'content-type': 'application/octet-stream',*/\r\n                    requestTimestamp: new Date().getTime().toString()\r\n                }\r\n            });\r\n        } else {\r\n            this.stompClient.publish({\r\n                destination: '/app/send/position/custom/binary',\r\n                binaryBody: dataWithSpecificFormat,\r\n                headers: {\r\n                    /*'content-type': 'application/octet-stream',*/\r\n                    requestTimestamp: new Date().getTime().toString()\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    joinToGame(nickname: string) {\r\n        this.stompClient.publish({\r\n            destination: '/app/join/game',\r\n            body: JSON.stringify({\r\n                \"nickname\": nickname\r\n            })\r\n        });\r\n    }\r\n\r\n    addPlayer(nickname: string) {\r\n        this.stompClient.publish({\r\n            destination: '/app/add/player',\r\n            body: JSON.stringify({\r\n                \"nickname\": nickname\r\n            })\r\n        });\r\n    }\r\n\r\n    variable = this.makeid(30000);\r\n\r\n    makeid(length) {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    setFormatter(formatter) {\r\n        this.formatter = formatter;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpService} from \"../http/http.service\";\r\nimport {MeasurementService} from \"../cache/measurement.service\";\r\nimport {saveAs} from 'file-saver';\r\nimport {CSV_RESPONSE_HEADERS} from \"../../../global-config\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DownloadService {\r\n\r\n    private RESPONSE_FILE = \"response_measurement.csv\";\r\n    private REQUEST_FILE = \"request_measurement.csv\";\r\n    private _rsocketObject;\r\n\r\n    constructor(private cacheMeasurement: MeasurementService, private httpService: HttpService) {\r\n    }\r\n\r\n    set rsocketObject(value) {\r\n        this._rsocketObject = value;\r\n    }\r\n\r\n    downloadRequestMeasurements() {\r\n        if(this._rsocketObject) {\r\n            this._rsocketObject\r\n                .requestResponse({\r\n                    metadata: String.fromCharCode('/report/measurement'.length) + '/report/measurement',\r\n                }).subscribe({\r\n                onComplete: payload => {\r\n                    this.downloadRequestFile(payload.data.data);\r\n                },\r\n                onError: error => {\r\n                    console.log('got error with requestResponse');\r\n                    console.error(error);\r\n                },\r\n                onSubscribe: cancel => {\r\n                }\r\n            });\r\n        }else {\r\n            this.httpService.downloadMeasurements().subscribe((data) => {\r\n                this.downloadRequestFile(data.body)\r\n            })\r\n        }\r\n    }\r\n\r\n    downloadResponseMeasurements() {\r\n        this.downloadResponseFile(this.cacheMeasurement.getResponseMeasurements());\r\n    }\r\n\r\n    private downloadRequestFile(data) {\r\n        const blob = new Blob([data], {type: 'text/csv'});\r\n        const url = window.URL.createObjectURL(blob);\r\n        const anchor = document.createElement('a');\r\n        anchor.download = this.REQUEST_FILE; // here you can specify file name\r\n        anchor.href = url;\r\n        document.body.appendChild(anchor);\r\n        anchor.click();\r\n        document.body.removeChild(anchor);\r\n    }\r\n\r\n    private downloadResponseFile(data: any) {\r\n        const replacer = (key, value) => value === null ? '' : value; // specify how you want to handle null values here\r\n        let header = CSV_RESPONSE_HEADERS;\r\n        let csv = data.map(row => header.map(fieldName => JSON.stringify(row[fieldName], replacer)).join(','));\r\n        header = header.map(function(x){ return x.toUpperCase() })\r\n        csv.unshift(header.join(','));\r\n        let csvArray = csv.join('\\r\\n');\r\n\r\n        saveAs(new Blob([csvArray], {type: 'text/csv'}), this.RESPONSE_FILE);\r\n    }\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport Phaser from 'phaser';\r\nimport {MainSceneComponent} from '../scenes/main-scene/main-scene.component';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.css']\r\n})\r\nexport class GameComponent implements OnInit {\r\n  phaserGame: Phaser.Game;\r\n  config: Phaser.Types.Core.GameConfig;\r\n\r\n  constructor(private mainScene: MainSceneComponent) {\r\n    this.config = {\r\n      type: Phaser.AUTO,\r\n      height: 1024,\r\n      width: 1600,\r\n      scale: {\r\n        mode: Phaser.Scale.FIT,\r\n        autoCenter: Phaser.Scale.CENTER_BOTH\r\n      },\r\n      scene: [],\r\n      parent: 'gameContainer',\r\n      physics: {\r\n        default: 'arcade',\r\n        arcade: {\r\n          gravity: {y: 0}\r\n        }\r\n      },\r\n      fps: {\r\n        target: 50,\r\n        forceSetTimeOut: true\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n      console.error('Initialize Game Object');\r\n\r\n      this.phaserGame = new Phaser.Game(this.config);\r\n      this.phaserGame.scene.add('main', this.mainScene);\r\n      this.phaserGame.scene.start('main');\r\n\r\n      console.error('Completed Initialization Game Object');\r\n    }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n\r\n  public nickname: string;\r\n  public answer: string;\r\n\r\n  constructor(private router: Router) {\r\n    if(this.router.getCurrentNavigation().extras.state) {\r\n      this.answer = this.router.getCurrentNavigation().extras.state.nick;\r\n    }\r\n  }\r\n\r\n  startGame(nickname: string) {\r\n    this.router.navigate(['game'], {state: {nick: nickname}});\r\n  }\r\n\r\n}\r\n","<div id=\"background\">\r\n    <h1>Welcome in multiplayer Pacman Game</h1>\r\n    <br>\r\n    <br>\r\n    <br>\r\n    <h2>Set nickname and click 'START'</h2>\r\n    <input [(ngModel)]=\"nickname\">\r\n    <button (click)=\"startGame(nickname)\" [disabled]=\"!nickname || nickname=='NO_ONE' || (nickname.length>10 || nickname.length<2)\">Start</button>\r\n\r\n    <br><br><br><br>\r\n    <h4 *ngIf=\"answer\">You can't start game because other player has the same nickname: {{answer}}</h4>\r\n\r\n<!--    <div id=\"description\">-->\r\n<!--        <h3>Description</h3>-->\r\n<!--    </div>-->\r\n\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {environment} from \"../../environments/environment\";\r\nimport {HTTP_URL_DOWNLOAD} from \"../../../global-config\";\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  downloadMeasurements() {\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append('Accept', 'text/csv; charset=utf-8');\r\n\r\n    return this.httpClient.get(HTTP_URL_DOWNLOAD, {\r\n      headers: headers,\r\n      observe: 'response',\r\n      responseType: 'text'\r\n    })\r\n  }\r\n}\r\n","export class MeasurementResponse {\r\n    private _id: string;\r\n    private _response_time_in_millis: number;\r\n    private _request_timestamp: number;\r\n    private _version_response: number;\r\n\r\n    constructor(id: string, response_time_in_millis: number, request_timestamp: number, version_response: number) {\r\n        this._id = id;\r\n        this._response_time_in_millis = response_time_in_millis;\r\n        this._request_timestamp = request_timestamp;\r\n        this._version_response = version_response;\r\n    }\r\n\r\n    get response_time_in_millis(): number {\r\n        return this._response_time_in_millis;\r\n    }\r\n\r\n    set response_time_in_millis(value: number) {\r\n        this._response_time_in_millis = value;\r\n    }\r\n\r\n    get request_timestamp(): number {\r\n        return this._request_timestamp;\r\n    }\r\n\r\n    set request_timestamp(value: number) {\r\n        this._request_timestamp = value;\r\n    }\r\n\r\n    get version_response(): number {\r\n        return this._version_response;\r\n    }\r\n\r\n    set version_response(value: number) {\r\n        this._version_response = value;\r\n    }\r\n\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    set id(value: string) {\r\n        this._id = value;\r\n    }\r\n}\r\n","import Phaser from \"phaser\";\r\nimport {MainSceneComponent} from \"../scenes/main-scene/main-scene.component\";\r\n\r\nexport class Player extends Phaser.Physics.Arcade.Sprite {\r\n    public nickname: string;\r\n    private _positionX: number;\r\n    private _positionY: number;\r\n    private _score: number;\r\n    private _version: number;\r\n    public static SPEED = 200;\r\n\r\n    constructor(scene: MainSceneComponent, x: number, y: number, texture: string, score: number) {\r\n        super(scene, x, y, texture);\r\n\r\n        // Dodanie gracza do sceny (zeby w ogole byl widoczny)\r\n        scene.add.existing(this);\r\n\r\n        // Dodanie gracza do fizyki co pozwala na ustawianie interakcji\r\n        scene.physics.add.existing(this);\r\n\r\n        // Dodanie kolidera na graczu oraz warstwie\r\n        scene.physics.add.collider(this, scene.backgroundLayer);\r\n\r\n        // scene.anims.play('myUp');\r\n\r\n        this._score = score;\r\n    }\r\n\r\n    get score(): number {\r\n        return this._score;\r\n    }\r\n\r\n    set score(value: number) {\r\n        this._score = value;\r\n    }\r\n\r\n    get positionX(): number {\r\n        return this._positionX;\r\n    }\r\n\r\n    set positionX(value: number) {\r\n        this._positionX = value;\r\n    }\r\n\r\n    get positionY(): number {\r\n        return this._positionY;\r\n    }\r\n\r\n    set positionY(value: number) {\r\n        this._positionY = value;\r\n    }\r\n\r\n    get version(): number {\r\n        return this._version;\r\n    }\r\n\r\n    set version(value: number) {\r\n        this._version = value;\r\n    }\r\n}\r\n","export class Request {\r\n    private _id: number;\r\n    private _x: number;\r\n    private _y: number;\r\n\r\n    constructor(id: number, x: number, y: number) {\r\n        this._id = id;\r\n        this._x = x;\r\n        this._y = y;\r\n    }\r\n\r\n\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    set id(value: number) {\r\n        this._id = value;\r\n    }\r\n\r\n    get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    set x(value: number) {\r\n        this._x = value;\r\n    }\r\n\r\n    get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    set y(value: number) {\r\n        this._y = value;\r\n    }\r\n}\r\n","import {Component, ElementRef, Injectable} from '@angular/core';\r\nimport Phaser from 'phaser';\r\nimport {WebsocketService} from '../../communication/websocket/websocket.service';\r\nimport {Router} from \"@angular/router\";\r\nimport {Player} from \"../../model/Player\";\r\nimport {interval, Observable, Subscription} from \"rxjs\";\r\nimport StaticGroup = Phaser.Physics.Arcade.StaticGroup;\r\nimport {DownloadService} from \"../../downloader/download.service\";\r\nimport Group = Phaser.Physics.Arcade.Group;\r\nimport {Communicator} from \"../../communication/Communicator\";\r\nimport {Direction} from \"../../communication/Direction\";\r\nimport {SocketClientState} from \"../../communication/SocketClientState\";\r\nimport {Http2Service} from \"../../communication/http2/http2.service\";\r\nimport {MeasurementService} from \"../../cache/measurement.service\";\r\nimport {RequestCacheService} from \"../../cache/request-cache.service\";\r\nimport {Request} from \"../../model/Request\";\r\nimport {RsocketService} from \"../../communication/rsocket/rsocket.service\";\r\nimport {RSocketSimulationConnection} from \"../../communication/simulation/rsocket/RSocketSimulationConnection\";\r\n\r\n// @ts-ignore\r\nimport *  as  data from '../../../../rsocketData.json';\r\nimport {WebsocketSimulationConnection} from \"../../communication/simulation/websocket/WebsocketSimulationConnection\";\r\nimport {AdditionalObject} from \"../../communication/simulation/data/AdditionalObject\";\r\nimport {environment} from \"../../../environments/environment\";\r\n\r\n@Component({\r\n    selector: 'app-main-scene',\r\n    providers: [\r\n        {\r\n            provide: Communicator,\r\n            useClass: environment.serviceToCommunication\r\n        }\r\n    ],\r\n    templateUrl: './main-scene.component.html',\r\n    styleUrls: ['./main-scene.component.css']\r\n})\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class MainSceneComponent  extends Phaser.Scene{\r\n    // Additional data for testing changing data size\r\n    private additionalData = this.randomString(50, '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r\n    private arrayWithAdditionalData: Array<AdditionalObject> = new Array<AdditionalObject>(20);\r\n    // Objects for simulation players\r\n    // private simulationConnection = new Array(10);\r\n\r\n    // Phaser 3 objects\r\n    private board: Phaser.Tilemaps.Tilemap;\r\n\r\n    private pathLayer: Phaser.Tilemaps.DynamicTilemapLayer;\r\n    private _backgroundLayer: Phaser.Tilemaps.DynamicTilemapLayer;\r\n    private coinLayer: Phaser.Types.Tilemaps.TiledObject[];\r\n\r\n    private pacmanObjects: Phaser.Tilemaps.Tileset;\r\n    private coin: Phaser.Tilemaps.Tileset;\r\n\r\n    private exitButton: Phaser.GameObjects.Image;\r\n    private downloadButton: Phaser.GameObjects.Image;\r\n    private cursorKeys: Phaser.Types.Input.Keyboard.CursorKeys;\r\n\r\n    private coins: Group;\r\n\r\n    // Subscriptions\r\n    ifJoinToGameSubscription?: Subscription;\r\n    stateSubscription?: Subscription;\r\n    playersToAddSubscription?: Subscription;\r\n    playerToRemoveSubscription?: Subscription;\r\n    playerToUpdateSubscription?: Subscription;\r\n    monsterToUpdateSubscription?: Subscription;\r\n    positionSenderSubscription?: Subscription;\r\n    coinToGetSubscription?: Subscription;\r\n    updateScoreSubscription?: Subscription;\r\n    refreshCoinsSubscription?: Subscription;\r\n    subscriptionUpdateTop3?: Subscription;\r\n\r\n    // Game objects\r\n    private players: Map<string, any> = new Map<string, Player>();\r\n    private monsters: Map<number, Phaser.GameObjects.Sprite> = new Map<number, Phaser.GameObjects.Sprite>();\r\n    private rank = new Array<Player>();\r\n    private myPlayerName: string;\r\n\r\n    // Sending objects\r\n    private startSendingPlayerPosition = false;\r\n\r\n    private positionSender: Observable<number>;\r\n    private lastX: number;\r\n    private lastY: number;\r\n    private lastAngle: number;\r\n    private counterRequest: number = 0;\r\n\r\n    // Score table objects\r\n    private yourScore: any;\r\n    private scoreRanking: Map<string, any> = new Map<string, any>();\r\n    private scoreNumber1: any;\r\n    private scoreNumber2: any;\r\n    private scoreNumber3: any;\r\n\r\n    constructor(\r\n        private websocketService: Communicator,\r\n        private router: Router,\r\n        private elementRef: ElementRef,\r\n        private downloadService: DownloadService,\r\n        private requestCache: RequestCacheService\r\n    ) {\r\n        super({key: 'main'});\r\n\r\n        if (this.router.getCurrentNavigation().extras.state) {\r\n            this.myPlayerName = this.router.getCurrentNavigation().extras.state.nick;\r\n            this.websocketService.myNickname = this.myPlayerName;\r\n        } else {\r\n            this.router.navigate(['home']);\r\n        }\r\n    }\r\n\r\n    startGame() {\r\n        this.websocketService.initializeConnection();\r\n        // const tab = (data as any).default;\r\n        //\r\n        // for (let i = 0; i < this.arrayWithAdditionalData.length; i++) {\r\n        //     this.arrayWithAdditionalData[i] = new AdditionalObject(5555, this.additionalData);\r\n        // }\r\n        // setTimeout(() => {\r\n        //         for (let i = 0; i < tab.length; i++) {\r\n        //             this.simulationConnection[i] = new WebsocketSimulationConnection(tab[i].nickname);\r\n        //             this.simulationConnection[i].initializeConnection(tab[i],4000 + 500 * i);\r\n        //         }\r\n        //     }, 5000\r\n        // )\r\n\r\n        this.stateSubscription = this.websocketService.getState().subscribe(state => {\r\n            if (state === SocketClientState.CONNECTED) {\r\n                this.ifJoinToGameSubscription = this.websocketService.getIfJoinGame().subscribe((currentCoinPosition) => {\r\n                    if (currentCoinPosition.length > 0) {\r\n                        for (const coinPosition of currentCoinPosition) {\r\n                            this.coins.create((coinPosition.positionX * 32) + 16, (coinPosition.positionY * 32) - 16, \"coin\", null, true, true);\r\n                        }\r\n                        this.websocketService.addPlayer(this.myPlayerName);\r\n                    } else if (currentCoinPosition.length === 0) {\r\n                        document.getElementsByTagName('canvas').item(0).remove();\r\n                        this.router.navigate(['home'], {state: {nick: this.myPlayerName}});\r\n                        console.error('Juz taki nick istnieje nie mozna dolaczyc!');\r\n                    }\r\n                })\r\n                this.websocketService.joinToGame(this.myPlayerName);\r\n                console.error('Nawiazalem polaczenie websocket i dodalem uzytkownika!');\r\n            } else if (state === SocketClientState.ERROR) {\r\n                console.error('Brak polaczenia websocket z serwerem');\r\n                this.cleanAndBackToHomePage();\r\n            } else {\r\n                console.error('Probuje nawiazac polaczenie!')\r\n            }\r\n        })\r\n    }\r\n\r\n    create() {\r\n        this.startGame();\r\n\r\n        const updateTop3 = interval(1000);\r\n        this.subscriptionUpdateTop3 = updateTop3.subscribe(() => {\r\n            this.checkRanking();\r\n        });\r\n\r\n        // Jeszcze trzeba zaimplementowac\r\n        this.coinToGetSubscription = this.websocketService.getCoinToGet().subscribe((coinToCollect) => {\r\n        });\r\n\r\n        this.updateScoreSubscription = this.websocketService.getUpdateScore().subscribe((myScore) => {\r\n            this.players.get(this.myPlayerName).score = myScore;\r\n            this.yourScore.setText(this.myPlayerName + \" score: \" + myScore);\r\n        });\r\n\r\n        // Jeszcze trzeba zaimplementowac\r\n        this.refreshCoinsSubscription = this.websocketService.getRefreshCoins().subscribe(() => {\r\n            this.coinLayer.forEach(object => {\r\n                let obj = this.coins.create(object.x + 16, object.y - 16, \"coin\");\r\n                obj.setScale(object.width / 32, object.height / 32);\r\n                obj.body.width = object.width;\r\n                obj.body.height = object.height;\r\n            });\r\n        });\r\n\r\n        this.managePlayersInGame();\r\n        this.manageMonstersInGame();\r\n\r\n        console.error('Create Board');\r\n        this.game.loop.targetFps = 50\r\n        this.physics.world.setFPS(50)\r\n        console.error('---------------- Wyswietlam informacje o grze ---------------');\r\n        console.error('FPS actual: ' + this.game.loop.actualFps);\r\n        console.error('FPS physics.world ' + this.physics.world.fps);\r\n        console.error('---------------------------------------------');\r\n\r\n        this.createAnimationsBySpriteKey('my-player', 'myAnim');\r\n        this.createAnimationsBySpriteKey('other-player', 'enemyAnim');\r\n        this.anims.create({\r\n            key: 'animation',\r\n            frames: this.anims.generateFrameNumbers('monster', {frames: [0, 7]}),\r\n            frameRate: 2,\r\n            repeat: -1\r\n        });\r\n\r\n        this.board = this.add.tilemap('board');\r\n\r\n        this.pacmanObjects = this.board.addTilesetImage('pacman-elements');\r\n        this.coin = this.board.addTilesetImage('coin');\r\n\r\n        this.pathLayer = this.board.createDynamicLayer('path', [this.pacmanObjects], 0, 0);\r\n        this._backgroundLayer = this.board.createDynamicLayer('background_main', [this.pacmanObjects], 0, 0);\r\n        this.coinLayer = this.board.getObjectLayer('objectLayer')['objects'];\r\n\r\n        this.exitButton = this.add.image(this.game.canvas.width - 48, 48, 'exit-button');\r\n        this.exitButton.setInteractive();\r\n        this.exitButton.on('pointerup', () => {\r\n            this.switchScene();\r\n        });\r\n\r\n        this.downloadButton = this.add.image(this.game.canvas.width - 208, 48, 'download-button');\r\n        this.downloadButton.setInteractive();\r\n        this.downloadButton.on('pointerup', () => {\r\n            // this.downloadService.downloadRequestMeasurements();\r\n            this.downloadService.downloadResponseMeasurements();\r\n        });\r\n\r\n        // Dodanie kolizji dla elementow warstwy background o id od 150 do 250 (te id znajduja sie w tileset ktory sklada sie na te warstwe)\r\n        this._backgroundLayer.setCollisionBetween(140, 250);\r\n\r\n        this.cursorKeys = this.input.keyboard.createCursorKeys();\r\n\r\n        this.coins = this.physics.add.group();\r\n\r\n        this.scoreNumber1 = this.add.text(700, 32, '-', {\r\n            font: \"30px Arial\",\r\n            fill: \"#0022ff\",\r\n            align: \"center\"\r\n        });\r\n        this.scoreNumber2 = this.add.text(1100, 32, '-', {\r\n            font: \"30px Arial\",\r\n            fill: \"#0022ff\",\r\n            align: \"center\"\r\n        });\r\n        this.scoreNumber3 = this.add.text(400, 32, '-', {\r\n            font: \"30px Arial\",\r\n            fill: \"#0022ff\",\r\n            align: \"center\"\r\n        });\r\n\r\n        this.coins.removeCallback = function () {\r\n        }\r\n\r\n\r\n        console.error('Completed Board');\r\n    }\r\n\r\n    preload() {\r\n        this.load.image('pacman-elements', 'assets/main/images/pacmanObjects.png');\r\n        this.load.image('coin', 'assets/main/images/coin.png');\r\n\r\n        this.load.image('exit-button', 'assets/main/images/exit-button.png');\r\n        this.load.image('download-button', 'assets/main/images/download-button.png');\r\n\r\n        this.load.spritesheet('my-player', 'assets/main/images/my-player.png', {frameWidth: 32, frameHeight: 32});\r\n        this.load.spritesheet('other-player', 'assets/main/images/enemie.png', {frameWidth: 32, frameHeight: 32});\r\n        this.load.spritesheet('monster', 'assets/main/images/monster.png', {frameWidth: 32, frameHeight: 32});\r\n\r\n        this.load.tilemapTiledJSON('board', 'assets/main/map/board.json');\r\n    }\r\n\r\n    update() {\r\n        // console.log('PETLA GRA');\r\n        if (this.startSendingPlayerPosition) {\r\n            this.movePlayerManager();\r\n        }\r\n    }\r\n\r\n    collectCoin(player: Player, coin) {\r\n        coin.destroy(coin.x, coin.y);\r\n        return false;\r\n    }\r\n\r\n    managePlayersInGame() {\r\n        this.playersToAddSubscription = this.websocketService.getPlayersToAdd().subscribe((playersToAdd: Array<Player>) => {\r\n            playersToAdd.sort((a, b) => {\r\n                return b.score - a.score\r\n            });\r\n\r\n            this.rank.length = 4;\r\n            this.scoreNumber1.setText(\"NO_ONE\");\r\n            this.scoreNumber2.setText(\"NO_ONE\");\r\n            this.scoreNumber3.setText(\"NO_ONE\");\r\n            let counter = 0;\r\n            for (const player of playersToAdd) {\r\n                counter++;\r\n                if (counter < 4) {\r\n                    this.rank[counter - 1] = player\r\n                    this.setScoreText(counter, player);\r\n                }\r\n\r\n                if (!this.players.has(player.nickname)) {\r\n                    if (player.nickname !== this.myPlayerName) {\r\n                        this.players.set(player.nickname, new Player(this, player.positionX, player.positionY, 'other-player', player.score));\r\n                        console.error('Dodaje gracza ' + player.nickname)\r\n                        this.players.get(player.nickname).anims.play('enemyAnim');\r\n                    } else {\r\n                        this.players.set(player.nickname, new Player(this, player.positionX, player.positionY, 'my-player', player.score));\r\n                        this.startSendingPlayerPosition = true;\r\n                        this.yourScore = this.add.text(32, 32, this.myPlayerName + \" score: \" + player.score, {\r\n                            font: \"30px Arial\",\r\n                            fill: \"#ff0044\",\r\n                            align: \"center\"\r\n                        });\r\n\r\n                        // Uruchomienie animacji wczesniej przygotowanej\r\n                        this.players.get(player.nickname).anims.play('myAnim');\r\n                        this.requestCache.lastCorrectRequest = new Request(0, player.positionX, player.positionY);\r\n                        this.sendPlayerPosition();\r\n                    }\r\n                    this.physics.add.overlap(this.players.get(player.nickname), this.coins, this.collectCoin, null, this);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.playerToRemoveSubscription = this.websocketService.getPlayerToRemove().subscribe((playerToRemove: Player) => {\r\n            this.rank = this.rank.filter(item => item.nickname !== playerToRemove.nickname);\r\n            console.error(\"Po srpawdzeniu rankingu\")\r\n            if (playerToRemove.nickname === this.myPlayerName) {\r\n                this.cleanAndBackToHomePage();\r\n            }\r\n            this.players.get(playerToRemove.nickname).destroy(true);\r\n            this.players.delete(playerToRemove.nickname);\r\n        });\r\n\r\n        this.playerToUpdateSubscription = this.websocketService.getPlayerToUpdate().subscribe((player) => {\r\n            let currentPlayer: Player = this.players.get(player.nickname);\r\n\r\n            if (currentPlayer) {\r\n                this.changeAnimationFrameForOtherPlayers(player, currentPlayer);\r\n\r\n                currentPlayer.x = player.positionX;\r\n                currentPlayer.y = player.positionY;\r\n                currentPlayer.score = player.score;\r\n                console.error('current player')\r\n            }\r\n        })\r\n    }\r\n\r\n    // 50 FPS dla 20 milis\r\n    sendPlayerPosition() {\r\n        const player = this.players.get(this.myPlayerName);\r\n        // this.lastAngle = player.angle;\r\n        //\r\n        // this.setDeceleratingTimeout(()=> {\r\n        //     const player: Player = this.players.get(this.myPlayerName);\r\n        //     this.requestCache.addRequest(++this.counterRequest, player.x, player.y);\r\n        //     if(this.arrayWithAdditionalData.length < 2000) {\r\n        //         this.arrayWithAdditionalData.push(new AdditionalObject(5555,this.additionalData));\r\n        //     }\r\n        //\r\n        //     this.websocketService.sendPosition({\r\n        //         \"nickname\": this.myPlayerName,\r\n        //         \"positionX\": player.x,\r\n        //         \"positionY\": player.y,\r\n        //         \"score\": player.score,\r\n        //         \"stepDirection\": this.getDirection(),\r\n        //         \"version\": this.counterRequest,\r\n        //         \"requestTimestamp\": new Date().getTime(),\r\n        //         // \"additionalData\": this.arrayWithAdditionalData\r\n        //     });\r\n        //\r\n        //     }, 1, 10000);\r\n        this.lastX = player.x;\r\n        this.lastY = player.y;\r\n        this.lastAngle = player.angle;\r\n\r\n        // const dataProvider = interval(1000);\r\n        // const subscriptionDataProvider = dataProvider.subscribe(()=> {\r\n        //     for(let i =0;i<10;i++) {\r\n        //         this.arrayWithAdditionalData.push(new AdditionalObject(5555,this.additionalData));\r\n        //     }\r\n        //     if(this.arrayWithAdditionalData.length > 400) {\r\n        //         subscriptionDataProvider.unsubscribe();\r\n        //         this.subscription7.unsubscribe();\r\n        //     }\r\n        // });\r\n\r\n        this.positionSender = interval(20);\r\n        this.positionSenderSubscription = this.positionSender.subscribe(() => {\r\n            const player: Player = this.players.get(this.myPlayerName);\r\n            if ((this.lastX !== player.x) ||\r\n                (this.lastY !== player.y) ||\r\n                (this.lastAngle !== player.angle)) {\r\n\r\n                this.lastX = player.x;\r\n                this.lastY = player.y;\r\n                this.lastAngle = player.angle;\r\n\r\n                this.requestCache.addRequest(++this.counterRequest, player.x, player.y);\r\n\r\n                this.websocketService.sendPosition({\r\n                    \"nickname\": this.myPlayerName,\r\n                    \"positionX\": player.x,\r\n                    \"positionY\": player.y,\r\n                    \"score\": player.score,\r\n                    \"stepDirection\": this.getDirection(),\r\n                    \"version\": this.counterRequest,\r\n                    \"requestTimestamp\": new Date().getTime()\r\n                    // \"additionalData\": this.arrayWithAdditionalData\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    setDeceleratingTimeout(callback, factor, times) {\r\n        var internalCallback = function (tick, counter) {\r\n            return function () {\r\n                if (--tick >= 0) {\r\n                    window.setTimeout(internalCallback, (20000 - (++counter * factor)) / 1000);\r\n                    callback();\r\n                }\r\n            }\r\n        }(times, 0);\r\n\r\n        window.setTimeout(internalCallback, factor);\r\n    };\r\n\r\n    randomString(length, chars) {\r\n        let result = '';\r\n        for (let i = length; i > 0; --i) {\r\n            result += chars[Math.floor(Math.random() * chars.length)];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    setScoreText(number, player) {\r\n        switch (number) {\r\n            case 1: {\r\n                this.scoreNumber1.setText(player.nickname + \" score: \" + player.score);\r\n                this.scoreRanking.set(player.nickname, this.scoreNumber1);\r\n                this.scoreNumber2.setText(\"-\");\r\n                this.scoreNumber3.setText(\"-\");\r\n                break;\r\n            }\r\n            case 2: {\r\n                this.scoreNumber2.setText(player.nickname + \" score: \" + player.score);\r\n                this.scoreRanking.set(player.nickname, this.scoreNumber2);\r\n                this.scoreNumber3.setText(\"-\");\r\n                break;\r\n            }\r\n            case 3: {\r\n                this.scoreNumber3.setText(player.nickname + \" score: \" + player.score);\r\n                this.scoreRanking.set(player.nickname, this.scoreNumber3);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    checkRanking() {\r\n        let playersArray = new Array<Player>();\r\n        this.players.forEach((value: Player, key: string) => {\r\n            value.nickname = key;\r\n            playersArray.push(value);\r\n        });\r\n\r\n        playersArray = playersArray.sort((a, b) => b.score - a.score);\r\n\r\n        let counter = 1\r\n        playersArray.forEach(element => {\r\n            this.setScoreText(counter, element);\r\n            counter++;\r\n            if (counter > 3) {\r\n                return;\r\n            }\r\n        })\r\n    }\r\n\r\n    movePlayerManager() {\r\n        if (this.cursorKeys.left.isDown === true) {\r\n            this.players.get(this.myPlayerName).setVelocity(-Player.SPEED, 0);\r\n            this.players.get(this.myPlayerName).setAngle(270);\r\n        } else if (this.cursorKeys.right.isDown === true) {\r\n            this.players.get(this.myPlayerName).setVelocity(Player.SPEED, 0);\r\n            this.players.get(this.myPlayerName).setAngle(90);\r\n        } else if (this.cursorKeys.up.isDown === true) {\r\n            this.players.get(this.myPlayerName).setVelocity(0, -Player.SPEED);\r\n            this.players.get(this.myPlayerName).setAngle(0);\r\n        } else if (this.cursorKeys.down.isDown === true) {\r\n            this.players.get(this.myPlayerName).setVelocity(0, Player.SPEED);\r\n            this.players.get(this.myPlayerName).setAngle(180);\r\n        }\r\n    }\r\n\r\n    manageMonstersInGame() {\r\n        this.monsterToUpdateSubscription = this.websocketService.getMonsterToUpdate().subscribe((monsterToUpdate) => {\r\n            if (this.monsters.has(monsterToUpdate.id)) {\r\n                this.monsters.get(monsterToUpdate.id).x = monsterToUpdate.positionX;\r\n                this.monsters.get(monsterToUpdate.id).y = monsterToUpdate.positionY;\r\n            } else {\r\n                this.monsters.set(monsterToUpdate.id, this.physics.add.sprite(monsterToUpdate.positionX, monsterToUpdate.positionY, 'monster'));\r\n                this.monsters.get(monsterToUpdate.id).anims.play('animation')\r\n            }\r\n        })\r\n    }\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    switchScene() {\r\n        this.cleanAndBackToHomePage();\r\n    }\r\n\r\n    cleanAndBackToHomePage() {\r\n        this.startSendingPlayerPosition = false;\r\n        this.myPlayerName = '';\r\n        this.router.navigate(['home']);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.ifJoinToGameSubscription && this.stateSubscription &&\r\n            this.playersToAddSubscription && this.playerToRemoveSubscription &&\r\n            this.playerToUpdateSubscription && this.monsterToUpdateSubscription &&\r\n            this.positionSenderSubscription && this.coinToGetSubscription &&\r\n            this.updateScoreSubscription && this.refreshCoinsSubscription &&\r\n            this.subscriptionUpdateTop3\r\n        ) {\r\n            console.error('OnDestory')\r\n            this.counterRequest = 0;\r\n            this.ifJoinToGameSubscription.unsubscribe();\r\n            this.stateSubscription.unsubscribe();\r\n            this.playersToAddSubscription.unsubscribe();\r\n            this.playerToRemoveSubscription.unsubscribe();\r\n            this.playerToUpdateSubscription.unsubscribe();\r\n            this.monsterToUpdateSubscription.unsubscribe();\r\n            this.positionSenderSubscription.unsubscribe();\r\n            this.coinToGetSubscription.unsubscribe();\r\n            this.updateScoreSubscription.unsubscribe();\r\n            this.refreshCoinsSubscription.unsubscribe();\r\n            this.subscriptionUpdateTop3.unsubscribe();\r\n            this.websocketService.disconnect();\r\n            // for (let i = 0; i < this.simulationConnection.length; i++) {\r\n            //     this.simulationConnection[i].disconnect();\r\n            // }\r\n        }\r\n        if (this.game != null) {\r\n            this.game.destroy(true);\r\n            this.game.scene.remove('main');\r\n        }\r\n        if (document.getElementsByTagName('canvas').item(0) != null) {\r\n            document.getElementsByTagName('canvas').item(0).remove();\r\n        }\r\n        this.elementRef.nativeElement.remove();\r\n    }\r\n\r\n    createAnimationsBySpriteKey(figureKey: string, animKey: string) {\r\n        this.anims.create({\r\n            key: animKey,\r\n            frames: this.anims.generateFrameNumbers(figureKey, {frames: [3, 1]}),\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n    }\r\n\r\n    changeAnimationFrameForOtherPlayers(playerToUpdate: Player, currentPlayer: Player) {\r\n        if (this.myPlayerName !== playerToUpdate.nickname) {\r\n            if (currentPlayer.x < playerToUpdate.positionX) {\r\n                currentPlayer.setAngle(90);\r\n            }\r\n            if (currentPlayer.x > playerToUpdate.positionX) {\r\n                currentPlayer.setAngle(270);\r\n            }\r\n            if (currentPlayer.y < playerToUpdate.positionY) {\r\n                currentPlayer.setAngle(180);\r\n            }\r\n            if (currentPlayer.y > playerToUpdate.positionY) {\r\n                currentPlayer.setAngle(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    getDirection() {\r\n        switch (this.players.get(this.myPlayerName).angle) {\r\n            case 90: {\r\n                return Direction.HORIZON;\r\n            }\r\n            case -180: {\r\n                return Direction.VERTICAL;\r\n            }\r\n            case -90: {\r\n                return Direction.HORIZON;\r\n            }\r\n            case 0: {\r\n                return Direction.VERTICAL;\r\n            }\r\n        }\r\n    }\r\n\r\n    get backgroundLayer(): Phaser.Tilemaps.DynamicTilemapLayer {\r\n        return this._backgroundLayer;\r\n    }\r\n}\r\n","<app-game></app-game>\r\n","import {WebsocketService} from \"../app/communication/websocket/websocket.service\";\r\n\r\nexport const environment = {\r\n    production: false,\r\n    serviceToCommunication: WebsocketService,\r\n    download_measurement_rsocket: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}